{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx\";\n//#region ==================== IMPORTS ====================\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\nimport { gsap } from 'gsap'; // import '../stylesheets/Work.scss';\n// import scssVars from '../stylesheets/Global.scss';\n//#region -------------------- IMPORTS: GSAP BANNERS --------------------\n\nimport EAAR_18951 from '../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';\nimport NMPF_04852 from '../images/ea/banners/CR_4852_NMPF_US_Walmart_300x250/NMPF_04852';\nimport NMMN_11155 from '../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155';\nimport JCNR_07074 from '../images/ea/banners/CR_7074_JC_VNOIR_2013_AU_300x600/JCNR_07074';\nimport BSPS_26897 from '../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';\nimport NMTG_26903 from '../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';\nimport JCVR_26963 from '../images/ea/banners/26963_JC_VIVA_ROSE_GWP_PR_Walgreens_300x250/JCVR_26963';\nimport BCBG_02342 from '../images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342';\nimport BCBG_05500 from '../images/ea/banners/CR_5500_BCBG_BC_AU_Digital_Plan_2013/BCBG_05500'; //#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n//#region -------------------- IMPORTS: DATA --------------------\n// import work from '../data/MyData';\n\nimport work from '../data/json/work_json/work_ea.json'; //#endregion -------------------- IMPORTS: DATA --------------------\n//#endregion ==================== IMPORTS ====================\n// console.log('');\n// console.log('=========================  Work_000.jsx  =========================');\n//#region ==================== CONSTANTS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\nconst getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; // console.log('');\n// console.log('------------------------- scssVars -------------------------');\n// const headerHeight = scssVars.headerHeight;\n// const navBarHeight = scssVars.navBarHeight;\n// const workkNavHeight = scssVars.workkNavHeight;\n// const headerHeight = parseInt(scssVars.headerHeight);\n// const navBarHeight = parseInt(scssVars.navBarHeight);\n// const workkNavHeight = parseInt(scssVars.workkNavHeight);\n// console.log('headerHeight = ' + headerHeight + '     navBarHeight = ' + navBarHeight + '     workkNavHeight = ' + workkNavHeight);\n// console.log('(headerHeight + navBarHeight + workkNavHeight) = ' + (headerHeight + navBarHeight + workkNavHeight));\n//#endregion ==================== CONSTANTS ====================\n//#region ==================== FUNCTIONS ====================\n//#endregion ==================== FUNCTIONS ====================\n//#region ==================== workList() => <WorkList /> ====================\n\n\nfunction WorkList() {\n  //#region -------------------- AVAILABLE GSAP BANNERS: banners[] --------------------\n  const banners = {\n    EAAR_18951: EAAR_18951,\n    NMPF_04852: NMPF_04852,\n    NMMN_11155: NMMN_11155,\n    JCNR_07074: JCNR_07074,\n    BSPS_26897: BSPS_26897,\n    NMTG_26903: NMTG_26903,\n    JCVR_26963: JCVR_26963,\n    BCBG_02342: BCBG_02342,\n    BCBG_05500: BCBG_05500\n  }; //#endregion -------------------- AVAILABLE GSAP BANNERS: banners[] --------------------\n  //#region -------------------- ASSETS Ref --------------------\n\n  const workItemRef = useRef(null);\n  const masonryImgRef = useRef(null);\n  const importContainerRef = useRef(null); // const importedContentRef = useRef(null);\n  //#endregion -------------------- ASSETS Ref --------------------\n  //#region ==================== useState DEFs ====================\n\n  const [bannerShow, setBannerShow] = useState(); // const [bannerShow, setBannerShow] = useState(BSPS_26897);\n  // const [bannerShow, setBannerShow] = useState(NMMN_11155);\n  // const [bannerShow, setBannerShow] = useState(NMTG_26903);\n  // const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n  // const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n  // const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n  // const [bannerKey, setBannerKey] = useState();\n\n  let [windowWidth, setWindowWidth] = useState(getWidth()); // console.log('');\n  // console.log('------------------------- useState -------------------------');\n  // console.log('windowWidth = ' + windowWidth);\n  //#endregion ==================== useState DEFs ====================\n  //#region ==================== useEffect ====================\n\n  useEffect(() => {\n    // if (!banners[thisWorkImage.link2]) {\n    //     console.log('BOOO!');\n    // }\n    //#region -------------------- GSAP TIMELINE --------------------\n    const tl = gsap.timeline({\n      delay: 0\n    });\n    tl //#region ==================== INITIALIZE OBJECTS ====================\n    //#region -------------------- SET TRANSFORM ORIGiNS --------------------\n    // .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n    // .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n    .set(['.masonryImg'], {\n      transformOrigin: '50% 0',\n      immediateRender: true\n    }, 'frame00') //#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n    //#region -------------------- FRAME01 --------------------\n    // .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n    // .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n    // .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n    // .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n    //#endregion -------------------- FRAME01 --------------------\n    //#endregion ==================== INITIALIZE OBJECTS ====================\n    //#region ==================== FRAME 01 ====================\n    // .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n    // .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n    // .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n    //#endregion ==================== FRAME 01 ====================\n    //#region ==================== FRAME 02 ====================\n    // .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n    // .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n    //#endregion ==================== FRAME 02 ====================\n    //#region ==================== FRAME 03 ====================\n    // .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // #endregion ==================== FRAME 03 ====================\n    ; //#endregion -------------------- GSAP TIMELINE --------------------\n    //#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n    const moveBanner = () => {\n      // console.log('');\n      // console.log('------------------------- moveBanner -------------------------');\n      // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n      // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n      let bannerKey = document.getElementById('importContainerID').key;\n\n      if (!bannerKey) {\n        console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');\n      } else {\n        // console.log('bannerKey = ' + bannerKey);\n        // console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n        // console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n        //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n        // let thisBannerX = document.getElementById(bannerKey).x;\n        // let thisBannerY = document.getElementById(bannerKey).y;\n        // let thisBannerX = document.getElementById(bannerKey).offsetLeft;\n        // let thisBannerY = document.getElementById(bannerKey).offsetTop;\n        //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n        // let thisBannerY = document.getElementById(bannerKey).y - 250;\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n        // let thisBannerY = document.getElementById(bannerKey).offsetTop - 250;\n        // let thisBannerX = document.getElementById(bannerKey).offsetLeft - 13;\n        let thisBannerY = document.getElementById(bannerKey).offsetTop - 170;\n        let thisBannerX = document.getElementById(bannerKey).offsetLeft - 0.0125 * windowWidth; // let thisBannerY = document.getElementById(bannerKey).offsetTop - (headerHeight + navBarHeight + workkNavHeight);\n        //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n        // let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n        // let thisBannerH = document.getElementById(bannerKey).offsetHeight;\n\n        let thisBannerScale = document.getElementById(bannerKey).offsetWidth / 300; // console.log('');\n        // console.log('thisBannerX = ' + thisBannerX);\n        // console.log('thisBannerY = ' + thisBannerY);\n        // console.log('thisBannerW = ' + thisBannerW);\n        // console.log('thisBannerH = ' + thisBannerH);\n        // console.log('thisBannerScale = ' + thisBannerScale);\n        //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n        //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n        // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n        // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n\n        gsap.set([importContainerRef.current], {\n          transformOrigin: '0 0',\n          immediateRender: true\n        });\n        gsap.set([importContainerRef.current], {\n          x: thisBannerX,\n          y: thisBannerY,\n          scale: thisBannerScale\n        }); //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n      }\n    }; //#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n    //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n    let timeoutId = null;\n\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId); // change width from the state object after 150 milliseconds\n\n      timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150); // moveBanner: RELOCATE THE LOADED GSAP BANNER\n\n      moveBanner();\n    }; // set resize listener\n\n\n    window.addEventListener('resize', resizeListener); //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n    // clean up function\n\n    return () => {\n      // // RELOCATE THE LOADED GSAP BANNER\n      // moveBanner();\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    }; // }, []);\n  }, [windowWidth]); // }, [animDuration02, animDuration04, animDuration05]);\n  //#endregion ==================== useEffect ====================\n  //#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n  function handleClick(thisWorkImage) {\n    // console.log('');\n    // console.log('------------------------- handleClick(thisWorkImage) -------------------------');\n    //#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n    // console.log('handleClick: windowWidth = ' + windowWidth);\n    // console.log('');\n    // console.log('thisWorkImage.link = ' + thisWorkImage.link);\n    // console.log('thisWorkImage.link2 = ' + thisWorkImage.link2);\n    // console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n    // console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n    // console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n    // console.log('');\n    // console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n    // console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n    // console.log('');\n    // console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n    // console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n    // console.log('');\n    // // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n    // // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n    // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n    // // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n    //#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n    //#region ------------------------- Tryin' out sh*t... -------------------------\n    //#region - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n    if (banners[thisWorkImage.link2]) {\n      const thisBanner = React.createElement(banners[thisWorkImage.link2]); // console.log('');\n      // console.log('thisBanner = ' + thisBanner);\n\n      setBannerShow(thisBanner); // setBannerKey(thisBanner);\n\n      document.getElementById('importContainerID').key = thisWorkImage.link2; // document.getElementById(thisWorkImage.link2).key = thisWorkImage.link2;\n      // console.log('');\n      // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n      // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n    } else {\n      setBannerShow(thisWorkImage.link2 + ' THIS CONTENT COMING SOON!'); // setBannerKey(thisWorkImage.link2);\n    } //#endregion - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n    //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).x;\n    // let thisBannerY = document.getElementById(thisWorkImage.link2).y;\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft;\n    // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop;\n    //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n    // let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250;\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n    // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - 250;\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft - 13;\n\n\n    let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - 170;\n    let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft - 0.0125 * windowWidth; // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - (headerHeight + navBarHeight + workkNavHeight);\n    //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n    // let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n    // let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\n\n    let thisBannerScale = document.getElementById(thisWorkImage.link2).offsetWidth / 300; //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n    //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n    // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n    // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n    // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n    // // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n    // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n\n    gsap.set([importContainerRef.current], {\n      transformOrigin: '0 0',\n      immediateRender: true\n    }); // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n    gsap.set([importContainerRef.current], {\n      x: thisBannerX,\n      y: thisBannerY,\n      scale: thisBannerScale\n    }); // gsap.set([importedContentRef.current], { width: thisBannerW, height: thisBannerH });\n    // gsap.set([importedContentRef.current.children[1]], { scale: thisBannerScale });\n    // gsap.set([importedContentRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n    //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n    //#endregion ------------------------- Tryin' out sh*t... -------------------------\n  } //#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n  //#region ==================== RETURN (className='workList') ====================\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"importContainer\",\n    id: \"importContainerID\",\n    ref: importContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, bannerShow), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"masonrySection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      360: 1,\n      640: 2,\n      768: 2,\n      940: 4,\n      1640: 4,\n      1920: 5,\n      3000: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    className: \"masonry\",\n    gutter: \"1.25vw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 21\n    }\n  }, work.filter(isBanner => isBanner.format === 'banner').map(workImage => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workItem\",\n    id: workImage.link2,\n    key: workImage.album_id + workImage.image_index,\n    ref: workItemRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // key={workImage.album_id + workImage.image_index}\n    className: \"masonryImg\",\n    id: workImage.album_id + workImage.image_index + '_imgID' // id={workImage.link2}\n    ,\n    src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n    alt: 'album_id: ' + workImage.album_id + workImage.image_index,\n    onClick: () => handleClick(workImage) // onClick={() => setBannerShow(workImage.link2)}\n    // onClick={() => {\n    //     handleClick(workImage);\n    //     setBannerShow(workImage.link2);\n    // }}\n    ,\n    ref: masonryImgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"masonryInfo\",\n    title: \"masonryInfoTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 33\n    }\n  }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    format: \"MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 37\n    }\n  }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 88\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }\n  }, \"Web / Video\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"masonrySection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      768: 1,\n      960: 2,\n      1920: 3,\n      3840: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    className: \"masonry\",\n    gutter: \"1.25vw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 21\n    }\n  }, work.filter(isBanner => isBanner.format !== 'banner').map(workImage => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workItem\",\n    key: 'web' + workImage.album_id + workImage.image_index,\n    ref: workItemRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // key={'WV' + workImage.album_id + workImage.image_index}\n    className: \"masonryImg\" // id={workImage.album_id + workImage.image_index + '_imgID'}\n    ,\n    id: workImage.link2,\n    src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n    alt: 'album_id: ' + workImage.album_id + workImage.image_index,\n    onClick: () => handleClick(workImage),\n    ref: masonryImgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"masonryInfo\",\n    title: \"masonryInfoTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 33\n    }\n  }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    format: \"MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 37\n    }\n  }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 88\n    }\n  })))))))); //#endregion ==================== RETURN (className='workList') ====================\n} //#endregion ==================== workList() => <WorkList /> ====================\n\n\nexport const Work000 = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","useRef","useEffect","useState","Masonry","ResponsiveMasonry","Moment","gsap","EAAR_18951","NMPF_04852","NMMN_11155","JCNR_07074","BSPS_26897","NMTG_26903","JCVR_26963","BCBG_02342","BCBG_05500","work","remoteLoc","getWidth","window","innerWidth","document","documentElement","clientWidth","body","WorkList","banners","workItemRef","masonryImgRef","importContainerRef","bannerShow","setBannerShow","windowWidth","setWindowWidth","tl","timeline","delay","set","transformOrigin","immediateRender","moveBanner","bannerKey","getElementById","key","console","log","thisBannerY","offsetTop","thisBannerX","offsetLeft","thisBannerScale","offsetWidth","current","x","y","scale","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","handleClick","thisWorkImage","link2","thisBanner","createElement","filter","isBanner","format","map","workImage","album_id","image_index","src","caption","date","Work000"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\n\nimport { gsap } from 'gsap';\n\n// import '../stylesheets/Work.scss';\n// import scssVars from '../stylesheets/Global.scss';\n\n\n//#region -------------------- IMPORTS: GSAP BANNERS --------------------\n\nimport EAAR_18951 from '../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';\nimport NMPF_04852 from '../images/ea/banners/CR_4852_NMPF_US_Walmart_300x250/NMPF_04852';\nimport NMMN_11155 from '../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155';\nimport JCNR_07074 from '../images/ea/banners/CR_7074_JC_VNOIR_2013_AU_300x600/JCNR_07074';\nimport BSPS_26897 from '../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';\nimport NMTG_26903 from '../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';\nimport JCVR_26963 from '../images/ea/banners/26963_JC_VIVA_ROSE_GWP_PR_Walgreens_300x250/JCVR_26963';\nimport BCBG_02342 from '../images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342';\nimport BCBG_05500 from '../images/ea/banners/CR_5500_BCBG_BC_AU_Digital_Plan_2013/BCBG_05500';\n\n//#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n\n\n//#region -------------------- IMPORTS: DATA --------------------\n\n// import work from '../data/MyData';\nimport work from '../data/json/work_json/work_ea.json';\n\n//#endregion -------------------- IMPORTS: DATA --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n// console.log('');\n// console.log('=========================  Work_000.jsx  =========================');\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\nconst getWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n\n// console.log('');\n// console.log('------------------------- scssVars -------------------------');\n\n// const headerHeight = scssVars.headerHeight;\n// const navBarHeight = scssVars.navBarHeight;\n// const workkNavHeight = scssVars.workkNavHeight;\n\n// const headerHeight = parseInt(scssVars.headerHeight);\n// const navBarHeight = parseInt(scssVars.navBarHeight);\n// const workkNavHeight = parseInt(scssVars.workkNavHeight);\n\n// console.log('headerHeight = ' + headerHeight + '     navBarHeight = ' + navBarHeight + '     workkNavHeight = ' + workkNavHeight);\n// console.log('(headerHeight + navBarHeight + workkNavHeight) = ' + (headerHeight + navBarHeight + workkNavHeight));\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== FUNCTIONS ====================\n\n\n//#endregion ==================== FUNCTIONS ====================\n\n\n\n//#region ==================== workList() => <WorkList /> ====================\n\nfunction WorkList() {\n\n    //#region -------------------- AVAILABLE GSAP BANNERS: banners[] --------------------\n\n    const banners = {\n        EAAR_18951: EAAR_18951, \n        NMPF_04852: NMPF_04852, \n        NMMN_11155: NMMN_11155, \n        JCNR_07074: JCNR_07074, \n        BSPS_26897: BSPS_26897, \n        NMTG_26903: NMTG_26903, \n        JCVR_26963: JCVR_26963, \n        BCBG_02342: BCBG_02342, \n        BCBG_05500: BCBG_05500, \n    };\n\n    //#endregion -------------------- AVAILABLE GSAP BANNERS: banners[] --------------------\n\n\n\n    //#region -------------------- ASSETS Ref --------------------\n\n    const workItemRef = useRef(null);\n    const masonryImgRef = useRef(null);\n\n    const importContainerRef = useRef(null);\n    // const importedContentRef = useRef(null);\n\n    //#endregion -------------------- ASSETS Ref --------------------\n\n\n\n    //#region ==================== useState DEFs ====================\n\n    const [bannerShow, setBannerShow] = useState();\n\n    // const [bannerShow, setBannerShow] = useState(BSPS_26897);\n    // const [bannerShow, setBannerShow] = useState(NMMN_11155);\n    // const [bannerShow, setBannerShow] = useState(NMTG_26903);\n\n    // const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n    // const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n    // const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n    \n    // const [bannerKey, setBannerKey] = useState();\n\n\n    let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    // console.log('');\n    // console.log('------------------------- useState -------------------------');\n    // console.log('windowWidth = ' + windowWidth);\n\n    //#endregion ==================== useState DEFs ====================\n\n\n\n    //#region ==================== useEffect ====================\n\n    useEffect(() => {\n\n        // if (!banners[thisWorkImage.link2]) {\n        //     console.log('BOOO!');\n        // }\n\n        //#region -------------------- GSAP TIMELINE --------------------\n\n        const tl = gsap.timeline({ delay: 0 });\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            //#region -------------------- SET TRANSFORM ORIGiNS --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            // .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set(['.masonryImg'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n\n            //#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n\n\n            //#region -------------------- FRAME01 --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n            // .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n            // .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n\n            // .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n\n            //#endregion -------------------- FRAME01 --------------------\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n            // .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n            // .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n\n            //#endregion ==================== FRAME 01 ====================\n\n\n            //#region ==================== FRAME 02 ====================\n\n            // .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n            // .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n\n            //#endregion ==================== FRAME 02 ====================\n\n\n            //#region ==================== FRAME 03 ====================\n\n            // .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n\n            // #endregion ==================== FRAME 03 ====================\n        ;\n\n        //#endregion -------------------- GSAP TIMELINE --------------------\n\n\n        //#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n        const moveBanner = () => {\n\n            // console.log('');\n            // console.log('------------------------- moveBanner -------------------------');\n\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n            let bannerKey = document.getElementById('importContainerID').key;\n\n\n            if (!bannerKey) {\n\n                console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');\n\n            } else {\n\n                // console.log('bannerKey = ' + bannerKey);\n                // console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n                // console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n\n\n                //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n                // let thisBannerX = document.getElementById(bannerKey).x;\n                // let thisBannerY = document.getElementById(bannerKey).y;\n\n                // let thisBannerX = document.getElementById(bannerKey).offsetLeft;\n                // let thisBannerY = document.getElementById(bannerKey).offsetTop;\n\n                //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n                // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n                // let thisBannerY = document.getElementById(bannerKey).y - 250;\n\n                // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n                // let thisBannerY = document.getElementById(bannerKey).offsetTop - 250;\n\n                // let thisBannerX = document.getElementById(bannerKey).offsetLeft - 13;\n                let thisBannerY = document.getElementById(bannerKey).offsetTop - 170;\n\n                let thisBannerX = document.getElementById(bannerKey).offsetLeft - (0.0125 * windowWidth);\n                // let thisBannerY = document.getElementById(bannerKey).offsetTop - (headerHeight + navBarHeight + workkNavHeight);\n\n                //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n                // let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n                // let thisBannerH = document.getElementById(bannerKey).offsetHeight;\n\n                let thisBannerScale = document.getElementById(bannerKey).offsetWidth / 300;\n\n                // console.log('');\n                // console.log('thisBannerX = ' + thisBannerX);\n                // console.log('thisBannerY = ' + thisBannerY);\n                // console.log('thisBannerW = ' + thisBannerW);\n                // console.log('thisBannerH = ' + thisBannerH);\n                // console.log('thisBannerScale = ' + thisBannerScale);\n\n                //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n\n                //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n                // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n                // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n                // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n                // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n\n\n                // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n                gsap.set([importContainerRef.current], { transformOrigin: '0 0', immediateRender: true });\n                gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, scale: thisBannerScale });\n\n                //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n            }\n        }\n\n        //#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        let timeoutId = null;\n\n        const resizeListener = () => {\n\n            // prevent execution of previous setTimeout\n            clearTimeout(timeoutId);\n\n            // change width from the state object after 150 milliseconds\n            timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n            // moveBanner: RELOCATE THE LOADED GSAP BANNER\n            moveBanner();\n        };\n\n        // set resize listener\n        window.addEventListener('resize', resizeListener);\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n        // clean up function\n        return () => {\n            // // RELOCATE THE LOADED GSAP BANNER\n            // moveBanner();\n\n            // remove resize listener\n            window.removeEventListener('resize', resizeListener);\n        }\n\n    // }, []);\n    }, [windowWidth]);\n    // }, [animDuration02, animDuration04, animDuration05]);\n\n    //#endregion ==================== useEffect ====================\n\n\n\n    //#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n    function handleClick(thisWorkImage) {\n\n        // console.log('');\n        // console.log('------------------------- handleClick(thisWorkImage) -------------------------');\n\n\n        //#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n        // console.log('handleClick: windowWidth = ' + windowWidth);\n\n        // console.log('');\n        // console.log('thisWorkImage.link = ' + thisWorkImage.link);\n        // console.log('thisWorkImage.link2 = ' + thisWorkImage.link2);\n        // console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n        // console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n\n        // console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n\n        // console.log('');\n        // console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n        // console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n\n        // console.log('');\n        // console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n        // console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n\n        // console.log('');\n        // // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n        // // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n\n        // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n        // // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        //#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n\n        //#region ------------------------- Tryin' out sh*t... -------------------------\n\n        //#region - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n\n        if (banners[thisWorkImage.link2]) {\n\n            const thisBanner = React.createElement(banners[thisWorkImage.link2]);\n\n            // console.log('');\n            // console.log('thisBanner = ' + thisBanner);\n\n            setBannerShow(thisBanner);\n\n            // setBannerKey(thisBanner);\n            document.getElementById('importContainerID').key = thisWorkImage.link2;\n            // document.getElementById(thisWorkImage.link2).key = thisWorkImage.link2;\n\n            // console.log('');\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        } else {\n            setBannerShow(thisWorkImage.link2 + ' THIS CONTENT COMING SOON!');\n            // setBannerKey(thisWorkImage.link2);\n        }\n\n        //#endregion - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n\n\n        //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).y;\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop;\n\n        //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250;\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - 250;\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft - 13;\n        let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - 170;\n\n        let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft - (0.0125 * windowWidth);\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - (headerHeight + navBarHeight + workkNavHeight);\n\n        //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n        // let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n        // let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\n\n        let thisBannerScale = document.getElementById(thisWorkImage.link2).offsetWidth / 300;\n\n        //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n\n        //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n        // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n        // // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n\n\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n        gsap.set([importContainerRef.current], { transformOrigin: '0 0', immediateRender: true });\n\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n        gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, scale: thisBannerScale });\n\n        // gsap.set([importedContentRef.current], { width: thisBannerW, height: thisBannerH });\n        // gsap.set([importedContentRef.current.children[1]], { scale: thisBannerScale });\n        // gsap.set([importedContentRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n\n        //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n        //#endregion ------------------------- Tryin' out sh*t... -------------------------\n\n    }\n\n    //#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n\n\n    //#region ==================== RETURN (className='workList') ====================\n\n    return (\n        <div className='workList'>\n\n            {/* width = {width}; */}\n\n            <div className='importContainer' id='importContainerID' ref={importContainerRef}>\n            {/* <div className='importContainer' id='importContainerID' key={bannerShow} ref={importContainerRef}> */}\n            {/* <div className='importContainer' id='importContainerID' key={bannerKey} ref={importContainerRef}> */}\n                {/* <div className='importedContent' ref={importedContentRef}> */}\n                    {bannerShow}\n                {/* </div> */}\n            </div>\n\n\n        {/* #region ------------------------- BANNERS ------------------------- */}\n            {/* \n            <section>\n                <hr />\n                <h2>|*|*|*|*|*| &nbsp;&nbsp;&nbsp; Banners 000 &nbsp;&nbsp;&nbsp; |*|*|*|*|*|</h2>\n                <hr />\n            </section>\n            */}\n            <section className='masonrySection'>\n\n                <ResponsiveMasonry columnsCountBreakPoints={{ 360: 1, 640: 2, 768: 2, 940: 4, 1640: 4, 1920: 5, 3000: 6 }}>\n                    {/* <Masonry gutter='50px'> */}\n                    <Masonry className='masonry' gutter='1.25vw'>\n\n                        {work.filter(isBanner => isBanner.format === 'banner').map((workImage) => (\n\n                            <div className='workItem' id={workImage.link2} key={workImage.album_id + workImage.image_index} ref={workItemRef}>\n\n                                <img\n                                    // key={workImage.album_id + workImage.image_index}\n                                    className='masonryImg'\n                                    id={workImage.album_id + workImage.image_index + '_imgID'}\n                                    // id={workImage.link2}\n                                    src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                    alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                    onClick={() => handleClick(workImage)}\n                                    // onClick={() => setBannerShow(workImage.link2)}\n                                    // onClick={() => {\n                                    //     handleClick(workImage);\n                                    //     setBannerShow(workImage.link2);\n                                    // }}\n\n                                    ref={masonryImgRef}\n                                />\n\n                                <p className='masonryInfo' title='masonryInfoTitle'>\n                                    {workImage.caption}<br />\n                                    <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                                {/* \n                                    <br />\n                                    album_index = {workImage.album_index}<br />\n                                    album_id = {workImage.album_id}<br />\n                                    image_index = {workImage.image_index}<br />\n                                    src = {workImage.src}<br />\n                                    caption = {workImage.caption}<br />\n                                    date = {workImage.date}<br />\n                                    format = {workImage.format}<br />\n                                    format_src = {workImage.format_src}<br />\n                                    link = {workImage.link}<br />\n                                    link2 = {workImage.link2}<br />\n                                    link3 = {workImage.link3}<br />\n                                    link4 = {workImage.link4}<br />\n                                    cta = {workImage.cta}<br />\n                                    alert = {workImage.alert}<br />\n                                    mwidth = {workImage.mwidth}<br />\n                                    mheight = {workImage.mheight}\n                                */}\n\n                                </p>\n\n                            </div>\n                        ))}\n\n                    </Masonry>\n                </ResponsiveMasonry>\n\n            </section>\n\n        {/* #endregion ------------------------- BANNERS ------------------------- */}\n\n\n        {/* #region ------------------------- WEB / VIDEO ------------------------- */}\n\n            <section>\n                <hr />\n                <h2>Web / Video</h2>\n                <hr />\n            </section>\n\n            <section className='masonrySection'>\n\n                {/* <ResponsiveMasonry columnsCountBreakPoints={{ 960: 1, 1366: 2, 2040: 3 }}> */}\n                {/* <ResponsiveMasonry columnsCountBreakPoints={{ 1024: 1, 1366: 2, 1920: 3, 3840: 4 }}> */}\n                <ResponsiveMasonry columnsCountBreakPoints={{ 768: 1, 960: 2, 1920: 3, 3840: 4 }}>\n                    <Masonry className='masonry' gutter='1.25vw'>\n\n                        {work.filter(isBanner => isBanner.format !== 'banner').map((workImage) => (\n\n                            <div className='workItem' key={'web' + workImage.album_id + workImage.image_index} ref={workItemRef}>\n\n                                <img\n                                    // key={'WV' + workImage.album_id + workImage.image_index}\n                                    className='masonryImg'\n                                    // id={workImage.album_id + workImage.image_index + '_imgID'}\n                                    id={workImage.link2}\n                                    src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                    alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                    onClick={() => handleClick(workImage)}\n\n                                    ref={masonryImgRef}\n                                />\n\n                                <p className='masonryInfo' title='masonryInfoTitle'>\n                                    {workImage.caption}<br />\n                                    <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                                {/* \n                                    <br />\n\n                                    album_index = {workImage.album_index}<br />\n                                    album_id = {workImage.album_id}<br />\n                                    image_index = {workImage.image_index}<br />\n                                    src = {workImage.src}<br />\n                                    caption = {workImage.caption}<br />\n                                    date = {workImage.date}<br />\n                                    format = {workImage.format}<br />\n                                    format_src = {workImage.format_src}<br />\n                                    link = {workImage.link}<br />\n                                    link2 = {workImage.link2}<br />\n                                    link3 = {workImage.link3}<br />\n                                    link4 = {workImage.link4}<br />\n                                    cta = {workImage.cta}<br />\n                                    alert = {workImage.alert}<br />\n                                    mwidth = {workImage.mwidth}<br />\n                                    mheight = {workImage.mheight}\n                                */}\n\n                                </p>\n\n                            </div>\n                        ))}\n\n                    </Masonry>\n                </ResponsiveMasonry>\n\n            </section>\n\n        {/* #endregion ------------------------- WEB / VIDEO ------------------------- */}\n\n        </div>\n    )\n\n    //#endregion ==================== RETURN (className='workList') ====================\n\n}\n\n//#endregion ==================== workList() => <WorkList /> ====================\n\n\n\n\nexport const Work000 = () => {\n\n    return (\n        <>\n            <WorkList />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}