{"ast":null,"code":"//#region ==================== IMPORTS ====================\nimport React from'react';import{useRef}from'react';// import { useEffect } from 'react';\nimport{useLayoutEffect}from'react';// import { useCallback } from 'react';\nimport{gsap}from'gsap';import'../banners.scss';import'./BCBG_02342.scss';// import './fonts/fonts.css';\n//#region -------------------- IMPORTS: ASSETS --------------------\nimport bg from'./images/bg.jpg';import model_ctr from'./images/model_ctr.jpg';import model_lf from'./images/model_lf.jpg';import model_rt from'./images/model_rt.jpg';import bottle from'./images/bottle.png';import logo_BCBG_MA from'./images/logo_BCBG_MA.png';// import logo_BCBG_MA from './images/logo_BCBG_MA.svg';\nimport cta from'./images/cta.png';//#endregion -------------------- IMPORTS: ASSETS --------------------\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n//#endregion ==================== IMPORTS ====================\nexport default function BCBG_02342(){//#region ==================== ASSETS _Ref ====================\nvar bg_Ref=useRef(null);var model_Ref=useRef(null);var model_ctr_Ref=useRef(null);var model_lf_Ref=useRef(null);var model_rt_Ref=useRef(null);var filter_Ref=useRef(null);var turbulence_Ref=useRef(null);var bottle_Ref=useRef(null);var logo_BCBG_MA_Ref=useRef(null);var maskSVG_Ref=useRef(null);var mask_Ref=useRef(null);var mask01_Ref=useRef(null);var mask02_Ref=useRef(null);var cta_Ref=useRef(null);// const particleContainer_Ref = useRef(null);\nvar clickTag_Ref=useRef(null);//#endregion ==================== ASSETS _Ref ====================\n//#region ==================== ANIMATION DURATIONs ====================\n// const staggerDuration = 0.125;\n// const staggerDelay = 0.0375;\nvar waveDuration=10;// const animDuration00 = 0.125;\n// const animDuration00_5 = 0.50;\n// const animDuration01 = 1.00;\n// const animDuration01_25 = 1.25;\n// const animDuration01_5 = 1.50;\nvar animDuration02=2.00;// const animDuration02_5 = 2.50;\n// const animDuration03 = 3.00;\n// const animDuration03_5 = 3.50;\n// const animDuration04 = 4.00;\n// const animDuration04_5 = 4.50;\nvar animDuration05=5.00;// const animDuration05_5 = 5.50;\n// const animDuration06 = 6.00;\n// const animDuration06_5 = 6.50;\n// const animDuration07 = 7.00;\n// const animDuration07_5 = 7.50;\n// const animDuration08 = 8.00;\n// const animDuration08_5 = 8.50;\n// const animDuration09 = 9.00;\n// const animDuration09_5 = 9.50;\n// const animDuration10 = 10.00;\n//#endregion ==================== ANIMATION DURATIONs ====================\n//#region ==================== FUNCTIONS ====================\n//#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n// function splitText(thisContainer, thisCopy, thisClassname) {\n//     // console.log('');\n//     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n//     const thisCopyResponse = thisCopy.split('');\n//     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n//     for (let c = 0; c < thisCopyResponse.length; c++) {\n//         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n//         const node = document.createElement('p');\n//         node.className = thisClassname;\n//         if (thisCopyResponse[c] !== ' ') {\n//             node.innerHTML = thisCopyResponse[c];\n//             thisContainer.append(node);\n//         } else {\n//             // console.log('This is a space!');\n//             node.innerHTML = '&nbsp;';\n//             thisContainer.append(node);\n//         }\n//     }\n// }\n//#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n//#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n// function randRange(min, max) {\n//     let thisIndex = min + Math.round(Math.random() * (max - min));\n//     //\tconsole.log('thisIndex = ' + thisIndex);\n//     return thisIndex;\n// }\n//#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n//#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n// function randRange2(min, max) {\n//     let thisIndex = min + Math.random() * (max - min);\n//     //\tconsole.log('thisIndex = ' + thisIndex);\n//     return thisIndex;\n// }\n//#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n//#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n// const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n//     // console.log('');\n//     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n//     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n//     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n// }, []);\n//#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n//#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n//#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n// // const removeAllChildNodes = useCallback((parent) => {\n// function removeAllChildNodes(parent) {\n//     // console.log('');\n//     // console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n//     // console.log('parent = ' + parent);\n//     // console.log('parent.id = ' + parent.id);\n//     while (parent.firstChild) {\n//         parent.removeChild(parent.firstChild);\n//     }\n// }\n// // }, []);\n//#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n// const removeParticle = useCallback((thisParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n//     // console.log('NOTE: the error check below does not work 100%');\n//     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n//     // console.log('thisParticle = ' + thisParticle);\n//     // console.log('thisParticle.id = ' + thisParticle.id);\n//     if (thisParticle == null) {\n//         console.log('***** NOPE! *****');\n//         console.error();\n//     } else {\n//         thisParticle.parentNode.removeChild(thisParticle);\n//     }\n// }, []);\n//#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n// // const particleAnim = useCallback((thisParticle) => {\n// const particleAnim = useCallback((thisContainer) => {\n//     console.log('');\n//     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n//     // console.log('thisParticle.id = ' + thisParticle.id);\n//     // console.log('thisParticle.width = ' + thisParticle.width);\n//     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n//     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n//     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n//     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n//     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n//     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n//     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n//     // gsap.to(bottle_Ref.current, {\n//     //     duration: 1,\n//     //     pixi: {\n//     //         scale: 0.2,\n//     //         rotation: 60\n//     //     }\n//     // });\n//     console.log('thisContainer.id = ' + thisContainer.id);\n//     const speed = 0.25;\n//     const gravity = -200;\n//     for (let i = 0; i < thisContainer.children.length; i++) {\n//         const animAngle = Math.random() * Math.PI * 2;\n//         console.log('animAngle = ' + animAngle);\n//         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n//         //     alpha: 0,\n//         //     // scaleX: thisScale,\n//         //     // scaleY: thisScale,\n//         //     physics2D: {\n//         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n//         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n//         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n//         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n//         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n//         //         // velocity: speed,\n//         //         gravity: gravity\n//         //     }\n//         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n//         //     //x:Math.cos(animAngle) * length * 6, \n//         //     //y:Math.sin(animAngle) * length * 6\n//         // }, 0);\n//     }\n// }, []);\n// // }, [removeParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n// const positionParticle = useCallback((thisContainer) => {\n// // const positionParticle = useCallback((thisContainer, particleWidth) => {\n//     // console.log('');\n//     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n//     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n//     // const displacementFactor = 0.5;\n//     for (let i = 0; i < thisContainer.children.length; i++) {\n//         // console.log('');\n//         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n//         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n//         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n//         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // const thisX = -150;\n//         // const thisY = 125;\n//         const thisX = -(thisContainer.children[i].width * 0.5);\n//         const thisY = thisContainer.offsetHeight * 0.5;\n//         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n//         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n//         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n//         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n//         // const thisScale = 1;\n//         // const thisScale = 0.125;\n//         const thisScale = randRange(5, 15) / 100;\n//         // console.log('thisScale = ' + thisScale);\n//         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n//         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n//         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n//     }\n//     // particleAnim(thisContainer.children[i]);\n//     particleAnim(thisContainer);\n// // }, []);\n// }, [particleAnim]);\n//#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n// const addParticle = useCallback((thisContainer, numParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     for (let i = 0; i < numParticle; i++) {\n//         const thisParticle = new Image();\n//         thisParticle.src = particle;\n//         thisParticle.key = i;\n//         thisParticle.className = 'particle';\n//         thisParticle.id = 'particle_' + i;\n//         thisParticle.alt = 'particle_' + i;\n//         thisContainer.append(thisParticle);\n//         // console.log('thisParticle.width = ' + thisParticle.width);\n//     }\n//     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n//     // let particleWidth = 0;\n//     thisContainer.lastChild.onload = function () {\n//         // particleWidth = thisContainer.lastChild.width;\n//         // console.log('particleWidth = ' + particleWidth);\n//         positionParticle(thisContainer);\n//         // positionParticle(thisContainer, particleWidth);\n//     }\n//     // positionParticle(thisContainer);\n// // }, []);\n// }, [positionParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n// const addRandomParticle = useCallback((thisContainer, numParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     const particles = [\n//         flower_01,\n//         flower_02,\n//         flower_03,\n//         flower_04,\n//         flower_05\n//     ];\n//     // console.log('particles = ' + particles);\n//     for (let i = 0; i < numParticle; i++) {\n//         let particleIndex = randRange(0, 4);\n//         // console.log('particleIndex = ' + particleIndex);\n//         const thisParticle = new Image();\n//         thisParticle.src = particles[particleIndex];\n//         thisParticle.key = i;\n//         thisParticle.className = 'particle';\n//         thisParticle.id = 'flower' + i;\n//         thisParticle.alt = 'flower' + i;\n//         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n//         // console.log('thisParticle = ' + thisParticle.id);\n//         thisContainer.append(thisParticle);\n//     }\n//     positionParticle(thisContainer);\n// }, [positionParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n// const addPixi = useCallback((thisContainer, numParticle) => {\n//     console.log('');\n//     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n//     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     // Setup PIXI app\n//     const app = new Application({\n//         width: 300,\n//         height: 250,\n//         backgroundColor: 0x10bb99,\n//         view: document.getElementById('container'),\n//     })\n//     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n//     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n//     // //DEFINE VARIABLES\n//     // // let vw = window.innerWidth;\n//     // // let vh = window.innerHeight;\n//     // let vw = 300;\n//     // let vh = 250;\n//     // // let count = 0;\n//     // //INITIALIZE PIXI\n//     // const app = new PIXI.Application(vw, vh, {\n//     //     autoResize: true,\n//     //     resolution: devicePixelRatio || 1,\n//     //     antialias: true, \n//     //     transparent: true\n//     // });\n//     // thisContainer.appendChild(app.view);\n//     // thisContainer.lastChild.onload = function () {\n//     //     for (let i = 0; i < numParticle; i++) {\n//     //         const thisParticle = new Image();\n//     //         thisParticle.src = particle;\n//     //         thisParticle.key = i;\n//     //         thisParticle.className = 'particle';\n//     //         thisParticle.id = 'particle_' + i;\n//     //         thisParticle.alt = 'particle_' + i;\n//     //         // app.append(thisParticle);\n//     //         app.stage.addChild(thisParticle);\n//     //         console.log('thisParticle.width = ' + thisParticle.width);\n//     //     }\n//     // }\n// }, []);\n//#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n//#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n//#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\nfunction handleClick(){// const handleClick = useCallback(() => {\n// console.log('');\n// console.log('------------------------- handleClick() -------------------------');\n// removeAllChildNodes(particleContainer_Ref.current);\ntl.pause(0);tl.restart();}// }, [tl]);\n//#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n//#endregion ==================== FUNCTIONS ====================\n//#region ==================== useEffect / useLayoutEffect ====================\n// const numParticle = 40;\nvar tl=gsap.timeline({delay:0});// const tl = gsap.timeline({ delay: 0, repeat: 2 });\n// useEffect(() => {\nuseLayoutEffect(function(){// addParticle(particleContainer_Ref.current, numParticle);\n// addRandomParticle(particleContainer_Ref.current, numParticle);\n// addPixi(particleContainer_Ref.current, numParticle);\ntl//#region ==================== INITIALIZE OBJECTS ====================\n//#region -------------------- autoAlpha --------------------\n// .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([model_ctr_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([model_lf_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([model_rt_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([bottle_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([logo_BCBG_MA_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([cta_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([clickTag_Ref.current], { autoAlpha: 0 }, 'frame00')\n//#endregion -------------------- autoAlpha --------------------\n//#region -------------------- SET TRANSFORMS --------------------\n//#region - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n// .set([model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n.set([bg_Ref.current,model_Ref.current],{transformOrigin:'50% 0',immediateRender:true},'frame00')//#endregion - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n//#region - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n// .set([bg_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125 }, 'frame00')\n//#endregion - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n//#endregion -------------------- SET TRANSFORMS --------------------\n//#endregion ==================== INITIALIZE OBJECTS ====================\n//#region ==================== FRAME 01 ====================\n// .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n// .fromTo([model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=0')\n.fromTo([bg_Ref.current,model_Ref.current],{x:-11.25,y:-17.5,scale:2.3125,autoAlpha:0},{x:0,y:0,scale:1,autoAlpha:1,ease:'power3.out',duration:animDuration05},'frame01 +=0').to([turbulence_Ref.current],{attr:{baseFrequency:'0.008 0.002'},yoyo:true,repeat:2,ease:'none',duration:waveDuration},'frame01 +=0').fromTo([mask01_Ref.current],{x:-500},{x:0,ease:'power3.out',duration:animDuration05},'frame01 +=0').fromTo([mask02_Ref.current],{x:-500},{x:0,ease:'power3.out',duration:animDuration05},'frame01 +=2').fromTo([bottle_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration02},'frame01 +=4').fromTo([cta_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration02},'frame01 +=4.25')//#endregion ==================== FRAME 01 ====================\n;//tl.duration(1.5);\nconsole.log('');console.log('tl timing = '+tl.duration()+' secs');// }, []);\n},[tl]);// }, [tl, addParticle]);\n// }, [tl, addRandomParticle]);\n// }, [tl, addRandomParticle, nextPos]);\n// }, [tl, addPixi]);\n//#endregion ==================== useEffect / useLayoutEffect ====================\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"banner300x250 bcbg_02342\",id:\"bcbg_02342ID\"},/*#__PURE__*/React.createElement(\"svg\",{className:\"modelDiv\",id:\"filterID\",version:\"1.1\",baseProfile:\"full\",x:\"0\",y:\"0\",width:\"300\",height:\"250\",space:\"preserve\",ref:filter_Ref},/*#__PURE__*/React.createElement(\"filter\",{id:\"turbulenceFilterID\",x:\"0\",y:\"0\",width:\"100%\",height:\"100%\"},/*#__PURE__*/React.createElement(\"feTurbulence\",{id:\"turbulenceID\",type:\"fractalNoise\",numOctaves:\"1\",seed:\"2\",baseFrequency:\"0.002 0.008\",result:\"turbulenceResult\",ref:turbulence_Ref}),/*#__PURE__*/React.createElement(\"feDisplacementMap\",{in:\"SourceGraphic\",in2:\"turbulenceResult\",scale:\"60\"}))),/*#__PURE__*/React.createElement(\"img\",{src:bg,className:\"bg\",id:\"bgID\",alt:\"bg\",ref:bg_Ref}),/*#__PURE__*/React.createElement(\"div\",{className:\"modelDiv\",id:\"modelDivID\",ref:model_Ref},/*#__PURE__*/React.createElement(\"img\",{src:model_lf,className:\"model_lf\",id:\"model_lfID\",alt:\"model_lf\",ref:model_lf_Ref}),/*#__PURE__*/React.createElement(\"img\",{src:model_rt,className:\"model_rt\",id:\"model_rtID\",alt:\"model_rt\",ref:model_rt_Ref}),/*#__PURE__*/React.createElement(\"img\",{src:model_ctr,className:\"model_ctr\",id:\"model_ctrID\",alt:\"model_ctr\",ref:model_ctr_Ref})),/*#__PURE__*/React.createElement(\"img\",{src:bottle,className:\"bottle\",id:\"bottleID\",alt:\"bottle\",ref:bottle_Ref}),/*#__PURE__*/React.createElement(\"svg\",{className:\"mask\",id:\"maskID\",version:\"1.1\",baseProfile:\"full\",x:\"0\",y:\"0\",width:\"300\",height:\"250\",space:\"preserve\",ref:maskSVG_Ref},/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"linearGradient\",{id:\"gradientID\",spreadMethod:\"pad\",gradientUnits:\"userSpaceOnUse\",x1:\"0\",y1:\"0\",x2:\"600\",y2:\"0\"},/*#__PURE__*/React.createElement(\"stop\",{offset:\"0.5\",style:{stopColor:'#ffffff'}}),/*#__PURE__*/React.createElement(\"stop\",{offset:\"0.75\",style:{stopColor:'#000000'}})),/*#__PURE__*/React.createElement(\"mask\",{id:\"maskID\",ref:mask_Ref},/*#__PURE__*/React.createElement(\"rect\",{className:\"maskClass\",id:\"mask01ID\",fill:\"url(#gradientID)\",x:\"0\",y:\"170\",width:\"600\",height:\"20\",ref:mask01_Ref}),/*#__PURE__*/React.createElement(\"rect\",{className:\"maskClass\",id:\"mask02ID\",fill:\"url(#gradientID)\",x:\"0\",y:\"190\",width:\"600\",height:\"30\",ref:mask02_Ref}))),/*#__PURE__*/React.createElement(\"g\",{mask:\"url(#maskID)\",ref:mask_Ref},/*#__PURE__*/React.createElement(\"image\",{href:logo_BCBG_MA,x:\"15\",y:\"180\",width:\"270\",height:\"38\",ref:logo_BCBG_MA_Ref}))),/*#__PURE__*/React.createElement(\"img\",{src:cta,className:\"cta\",id:\"ctaID\",alt:\"cta\",ref:cta_Ref}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickTag\",id:\"clickTagID\",ref:clickTag_Ref,onClick:handleClick}));}","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react_swept/src/images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342.jsx"],"names":["React","useRef","useLayoutEffect","gsap","bg","model_ctr","model_lf","model_rt","bottle","logo_BCBG_MA","cta","BCBG_02342","bg_Ref","model_Ref","model_ctr_Ref","model_lf_Ref","model_rt_Ref","filter_Ref","turbulence_Ref","bottle_Ref","logo_BCBG_MA_Ref","maskSVG_Ref","mask_Ref","mask01_Ref","mask02_Ref","cta_Ref","clickTag_Ref","waveDuration","animDuration02","animDuration05","handleClick","tl","pause","restart","timeline","delay","set","current","transformOrigin","immediateRender","fromTo","x","y","scale","autoAlpha","ease","duration","to","attr","baseFrequency","yoyo","repeat","console","log","stopColor"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\n// import { useEffect } from 'react';\nimport { useLayoutEffect } from 'react';\n// import { useCallback } from 'react';\n\nimport { gsap } from 'gsap';\n\nimport '../banners.scss';\nimport './BCBG_02342.scss';\n// import './fonts/fonts.css';\n\n\n//#region -------------------- IMPORTS: ASSETS --------------------\n\nimport bg from './images/bg.jpg';\n\nimport model_ctr from './images/model_ctr.jpg';\nimport model_lf from './images/model_lf.jpg';\nimport model_rt from './images/model_rt.jpg';\n\nimport bottle from './images/bottle.png';\n\nimport logo_BCBG_MA from './images/logo_BCBG_MA.png';\n// import logo_BCBG_MA from './images/logo_BCBG_MA.svg';\n\nimport cta from './images/cta.png';\n\n//#endregion -------------------- IMPORTS: ASSETS --------------------\n\n\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n\n\n//#endregion ==================== IMPORTS ====================\n\n\nexport default function BCBG_02342() {\n\n    //#region ==================== ASSETS _Ref ====================\n\n    const bg_Ref = useRef(null);\n\n    const model_Ref = useRef(null);\n    const model_ctr_Ref = useRef(null);\n    const model_lf_Ref = useRef(null);\n    const model_rt_Ref = useRef(null);\n\n    const filter_Ref = useRef(null);\n    const turbulence_Ref = useRef(null);\n\n    const bottle_Ref = useRef(null);\n\n    const logo_BCBG_MA_Ref = useRef(null);\n\n    const maskSVG_Ref = useRef(null);\n    const mask_Ref = useRef(null);\n    const mask01_Ref = useRef(null);\n    const mask02_Ref = useRef(null);\n\n    const cta_Ref = useRef(null);\n\n    // const particleContainer_Ref = useRef(null);\n    const clickTag_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n    //#region ==================== ANIMATION DURATIONs ====================\n\n    // const staggerDuration = 0.125;\n    // const staggerDelay = 0.0375;\n\n    const waveDuration = 10;\n\n    // const animDuration00 = 0.125;\n    // const animDuration00_5 = 0.50;\n    // const animDuration01 = 1.00;\n    // const animDuration01_25 = 1.25;\n    // const animDuration01_5 = 1.50;\n    const animDuration02 = 2.00;\n    // const animDuration02_5 = 2.50;\n    // const animDuration03 = 3.00;\n    // const animDuration03_5 = 3.50;\n    // const animDuration04 = 4.00;\n    // const animDuration04_5 = 4.50;\n    const animDuration05 = 5.00;\n    // const animDuration05_5 = 5.50;\n    // const animDuration06 = 6.00;\n    // const animDuration06_5 = 6.50;\n    // const animDuration07 = 7.00;\n    // const animDuration07_5 = 7.50;\n    // const animDuration08 = 8.00;\n    // const animDuration08_5 = 8.50;\n    // const animDuration09 = 9.00;\n    // const animDuration09_5 = 9.50;\n    // const animDuration10 = 10.00;\n\n    //#endregion ==================== ANIMATION DURATIONs ====================\n\n\n    //#region ==================== FUNCTIONS ====================\n\n    //#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n\n    // function splitText(thisContainer, thisCopy, thisClassname) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n\n    //     const thisCopyResponse = thisCopy.split('');\n    //     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n\n    //     for (let c = 0; c < thisCopyResponse.length; c++) {\n\n    //         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n\n    //         const node = document.createElement('p');\n    //         node.className = thisClassname;\n\n    //         if (thisCopyResponse[c] !== ' ') {\n    //             node.innerHTML = thisCopyResponse[c];\n    //             thisContainer.append(node);\n    //         } else {\n    //             // console.log('This is a space!');\n    //             node.innerHTML = '&nbsp;';\n    //             thisContainer.append(node);\n    //         }\n    //     }\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n    // function randRange(min, max) {\n    //     let thisIndex = min + Math.round(Math.random() * (max - min));\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n    // function randRange2(min, max) {\n    //     let thisIndex = min + Math.random() * (max - min);\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n\n    //#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n    // const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n    //     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n\n    //     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n\n    // }, []);\n\n    //#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n\n    //#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n    //#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n\n    // // const removeAllChildNodes = useCallback((parent) => {\n    // function removeAllChildNodes(parent) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n\n    //     // console.log('parent = ' + parent);\n    //     // console.log('parent.id = ' + parent.id);\n\n    //     while (parent.firstChild) {\n    //         parent.removeChild(parent.firstChild);\n    //     }\n    // }\n    // // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n    // const removeParticle = useCallback((thisParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n    //     // console.log('NOTE: the error check below does not work 100%');\n    //     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n\n    //     // console.log('thisParticle = ' + thisParticle);\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n\n    //     if (thisParticle == null) {\n    //         console.log('***** NOPE! *****');\n    //         console.error();\n    //     } else {\n    //         thisParticle.parentNode.removeChild(thisParticle);\n    //     }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n    // // const particleAnim = useCallback((thisParticle) => {\n    // const particleAnim = useCallback((thisContainer) => {\n\n    //     console.log('');\n    //     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n    //     // console.log('thisParticle.width = ' + thisParticle.width);\n\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n\n    //     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n    //     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n\n    //     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n\n\n    //     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n    //     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n\n    //     // gsap.to(bottle_Ref.current, {\n    //     //     duration: 1,\n    //     //     pixi: {\n    //     //         scale: 0.2,\n    //     //         rotation: 60\n    //     //     }\n    //     // });\n\n    //     console.log('thisContainer.id = ' + thisContainer.id);\n\n    //     const speed = 0.25;\n    //     const gravity = -200;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         const animAngle = Math.random() * Math.PI * 2;\n    //         console.log('animAngle = ' + animAngle);\n\n    //         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n    //         //     alpha: 0,\n\n    //         //     // scaleX: thisScale,\n    //         //     // scaleY: thisScale,\n\n    //         //     physics2D: {\n    //         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n    //         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n    //         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n    //         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n    //         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n    //         //         // velocity: speed,\n    //         //         gravity: gravity\n    //         //     }\n\n    //         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n    //         //     //x:Math.cos(animAngle) * length * 6, \n    //         //     //y:Math.sin(animAngle) * length * 6\n\n    //         // }, 0);\n\n    //     }\n    // }, []);\n    // // }, [removeParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n    // const positionParticle = useCallback((thisContainer) => {\n    // // const positionParticle = useCallback((thisContainer, particleWidth) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n\n\n    //     // const displacementFactor = 0.5;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         // console.log('');\n    //         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n    //         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n    //         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n    //         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n\n\n    //         // const thisX = -150;\n    //         // const thisY = 125;\n\n    //         const thisX = -(thisContainer.children[i].width * 0.5);\n    //         const thisY = thisContainer.offsetHeight * 0.5;\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n\n\n    //         // const thisScale = 1;\n    //         // const thisScale = 0.125;\n    //         const thisScale = randRange(5, 15) / 100;\n\n    //         // console.log('thisScale = ' + thisScale);\n    //         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n\n\n    //         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n    //         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n    //     }\n\n    //     // particleAnim(thisContainer.children[i]);\n    //     particleAnim(thisContainer);\n\n    // // }, []);\n    // }, [particleAnim]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n    // const addParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particle;\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'particle_' + i;\n    //         thisParticle.alt = 'particle_' + i;\n\n    //         thisContainer.append(thisParticle);\n\n    //         // console.log('thisParticle.width = ' + thisParticle.width);\n    //     }\n\n\n    //     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n\n    //     // let particleWidth = 0;\n\n    //     thisContainer.lastChild.onload = function () {\n\n    //         // particleWidth = thisContainer.lastChild.width;\n    //         // console.log('particleWidth = ' + particleWidth);\n\n    //         positionParticle(thisContainer);\n    //         // positionParticle(thisContainer, particleWidth);\n    //     }\n\n    //     // positionParticle(thisContainer);\n\n    // // }, []);\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n    // const addRandomParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     const particles = [\n    //         flower_01,\n    //         flower_02,\n    //         flower_03,\n    //         flower_04,\n    //         flower_05\n    //     ];\n\n    //     // console.log('particles = ' + particles);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         let particleIndex = randRange(0, 4);\n\n    //         // console.log('particleIndex = ' + particleIndex);\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particles[particleIndex];\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'flower' + i;\n    //         thisParticle.alt = 'flower' + i;\n\n    //         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n    //         // console.log('thisParticle = ' + thisParticle.id);\n\n    //         thisContainer.append(thisParticle);\n    //     }\n\n    //     positionParticle(thisContainer);\n\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    // const addPixi = useCallback((thisContainer, numParticle) => {\n\n    //     console.log('');\n    //     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n\n    //     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     // Setup PIXI app\n    //     const app = new Application({\n    //         width: 300,\n    //         height: 250,\n    //         backgroundColor: 0x10bb99,\n    //         view: document.getElementById('container'),\n    //     })\n\n    //     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n    //     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n\n    //     // //DEFINE VARIABLES\n    //     // // let vw = window.innerWidth;\n    //     // // let vh = window.innerHeight;\n    //     // let vw = 300;\n    //     // let vh = 250;\n    //     // // let count = 0;\n\n    //     // //INITIALIZE PIXI\n    //     // const app = new PIXI.Application(vw, vh, {\n    //     //     autoResize: true,\n    //     //     resolution: devicePixelRatio || 1,\n    //     //     antialias: true, \n    //     //     transparent: true\n    //     // });\n\n    //     // thisContainer.appendChild(app.view);\n\n\n    //     // thisContainer.lastChild.onload = function () {\n\n    //     //     for (let i = 0; i < numParticle; i++) {\n\n    //     //         const thisParticle = new Image();\n    //     //         thisParticle.src = particle;\n    //     //         thisParticle.key = i;\n    //     //         thisParticle.className = 'particle';\n    //     //         thisParticle.id = 'particle_' + i;\n    //     //         thisParticle.alt = 'particle_' + i;\n\n    //     //         // app.append(thisParticle);\n    //     //         app.stage.addChild(thisParticle);\n\n    //     //         console.log('thisParticle.width = ' + thisParticle.width);\n    //     //     }\n    //     // }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    //#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n\n    //#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    function handleClick() {\n    // const handleClick = useCallback(() => {\n\n        // console.log('');\n        // console.log('------------------------- handleClick() -------------------------');\n\n        // removeAllChildNodes(particleContainer_Ref.current);\n\n        tl.pause(0);\n        tl.restart();\n    }\n    // }, [tl]);\n\n    //#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    //#endregion ==================== FUNCTIONS ====================\n\n\n\n    //#region ==================== useEffect / useLayoutEffect ====================\n\n    // const numParticle = 40;\n\n    const tl = gsap.timeline({ delay: 0 });\n    // const tl = gsap.timeline({ delay: 0, repeat: 2 });\n\n\n    // useEffect(() => {\n    useLayoutEffect(() => {\n\n        // addParticle(particleContainer_Ref.current, numParticle);\n        // addRandomParticle(particleContainer_Ref.current, numParticle);\n        // addPixi(particleContainer_Ref.current, numParticle);\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            //#region -------------------- autoAlpha --------------------\n\n            // .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([model_ctr_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([model_lf_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([model_rt_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([bottle_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([logo_BCBG_MA_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([cta_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([clickTag_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            //#endregion -------------------- autoAlpha --------------------\n\n\n            //#region -------------------- SET TRANSFORMS --------------------\n\n            //#region - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n\n            // .set([model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set([bg_Ref.current, model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n\n            //#endregion - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n\n\n            //#region - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n\n            // .set([bg_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125 }, 'frame00')\n\n            //#endregion - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n\n            //#endregion -------------------- SET TRANSFORMS --------------------\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n\n            // .fromTo([model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=0')\n            .fromTo([bg_Ref.current, model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=0')\n\n            .to([turbulence_Ref.current], { attr: { baseFrequency: '0.008 0.002' }, yoyo: true, repeat: 2, ease: 'none', duration: waveDuration }, 'frame01 +=0')\n\n            .fromTo([mask01_Ref.current], { x: -500 }, { x: 0, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=0')\n            .fromTo([mask02_Ref.current], { x: -500 }, { x: 0, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=2')\n            .fromTo([bottle_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=4')\n            .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=4.25')\n\n            //#endregion ==================== FRAME 01 ====================\n        ;\n\n        //tl.duration(1.5);\n        console.log('');\n        console.log('tl timing = ' + tl.duration() + ' secs');\n\n    // }, []);\n    }, [tl]);\n    // }, [tl, addParticle]);\n    // }, [tl, addRandomParticle]);\n    // }, [tl, addRandomParticle, nextPos]);\n    // }, [tl, addPixi]);\n\n    //#endregion ==================== useEffect / useLayoutEffect ====================\n\n\n    return (\n        <div className='banner300x250 bcbg_02342' id='bcbg_02342ID'>\n            {/* <h1>BCBG_02342 300x250 Component</h1> */}\n  \n        {/* #region -------------------- SVG: Turbulence Filter - REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/  &  https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n            {/* -------------------- REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/ -------------------- */}\n            {/* -------------------- REF: https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n            {/* -------------------- REF: https://www.youtube.com/watch?v=XYdDiZa_O3k -------------------- */}\n\n            {/* <svg className='modelDiv' id='modelDivID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={model_Ref}> */}\n            <svg className='modelDiv' id='filterID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={filter_Ref}>\n\n                <filter id='turbulenceFilterID' x='0' y='0' width='100%' height='100%'>\n                    <feTurbulence id='turbulenceID' type='fractalNoise' numOctaves='1' seed='2' baseFrequency='0.002 0.008' result='turbulenceResult' ref={turbulence_Ref}></feTurbulence>\n                    <feDisplacementMap in='SourceGraphic' in2='turbulenceResult' scale='60'></feDisplacementMap>\n                </filter>\n\n                {/* <animate href='#turbulenceID' attributeName='baseFrequency' dur='10s' keyTimes='0; 0.5; 1' values='0.002 0.006; 0.004 0.008; 0.002 0.006' repeatCount='indefinite' /> */}\n                {/* <animate href='#turbulenceID' attributeName='baseFrequency' dur='10s' keyTimes='0; 1; 2' values='0.002 0.006; 0.004 0.008; 0.002 0.006' repeatCount='indefinite' /> */}\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: Turbulence Filter - REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/  &  https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n\n\n            <img src={bg} className='bg' id='bgID' alt='bg' ref={bg_Ref} />\n\n            <div className='modelDiv' id='modelDivID' ref={model_Ref}>\n                <img src={model_lf} className='model_lf' id='model_lfID' alt='model_lf' ref={model_lf_Ref} />\n                <img src={model_rt} className='model_rt' id='model_rtID' alt='model_rt' ref={model_rt_Ref} />\n                <img src={model_ctr} className='model_ctr' id='model_ctrID' alt='model_ctr' ref={model_ctr_Ref} />\n            </div>\n\n            {/* <div className='particleContainer' id='particleContainerID' ref={particleContainer_Ref}></div> */}\n\n            <img src={bottle} className='bottle' id='bottleID' alt='bottle' ref={bottle_Ref} />\n\n\n        {/* #region -------------------- SVG: mask(s) -------------------- */}\n\n            <svg className='mask' id='maskID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={maskSVG_Ref}>\n\n                <defs>\n\n                    {/* <linearGradient id='gradientID' gradientUnits='userSpaceOnUse' x1='0' y1='250' x2='300' y2='250' gradientTransform='rotate(90)'> */}\n                    <linearGradient id='gradientID' spreadMethod='pad' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='600' y2='0'>\n\n                        <stop offset='0.5' style={{ stopColor: '#ffffff' }} />\n                        <stop offset='0.75' style={{ stopColor: '#000000' }} />\n\n                    </linearGradient>\n\n                    <mask id='maskID' ref={mask_Ref}>\n                        <rect className='maskClass' id='mask01ID' fill='url(#gradientID)' x='0' y='170' width='600' height='20' ref={mask01_Ref} />\n                        <rect className='maskClass' id='mask02ID' fill='url(#gradientID)' x='0' y='190' width='600' height='30' ref={mask02_Ref} />\n                    </mask>\n\n                </defs>\n            {/* \n                <g ref={mask_Ref}>\n                    <rect className='maskClass' id='mask01ID' fill='url(#gradientID)' x='0' y='170' width='600' height='20' ref={mask01_Ref} />\n                    <rect className='maskClass' id='mask02ID' fill='url(#gradientID)' x='0' y='190' width='600' height='30' ref={mask02_Ref} />\n                </g>\n            */}\n                <g mask='url(#maskID)' ref={mask_Ref}>\n                    <image href={logo_BCBG_MA} x='15' y='180' width='270' height='38' ref={logo_BCBG_MA_Ref} />\n                </g>\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: mask(s) -------------------- */}\n\n\n            {/* <img src={logo_BCBG_MA} className='logo' id='logoID' alt='logo' ref={logo_BCBG_MA_Ref} /> */}\n \n            {/* <img src={tag} className='tag' id='tagID' alt='bottle' ref={tag_Ref} /> */}\n\n            <img src={cta} className='cta' id='ctaID' alt='cta' ref={cta_Ref} />\n\n            {/* <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={() => handleClick()}></div> */}\n            <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={handleClick}></div>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}