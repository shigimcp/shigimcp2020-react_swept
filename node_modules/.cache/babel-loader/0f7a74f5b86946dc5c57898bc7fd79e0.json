{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import { components, HOCComponents } from './components';\n\nimport { HOCComponents } from './components';\nimport './styles.css'; // class App extends React.PureComponent {\n\nexport default class Work000 extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DynamicComponent: null,\n      DynamicHOC: null\n    };\n\n    this.onHOCLangChange = e => {\n      const lang = e.target.getAttribute('data-lang'); // This loads different module when different language configuration is passed\n\n      this.setState({\n        DynamicHOC: HOCComponents[lang]\n      });\n    };\n  }\n\n  render() {\n    // const { DynamicComponent, DynamicHOC } = this.state;\n    const {\n      DynamicHOC\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"Load dynamic component\", ' ', /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"(These components are fetched and rendered once you click the button)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"english\",\n      onClick: this.onComponentLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Load english\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"spanish\",\n      onClick: this.onComponentLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Load spanish\")), \"This component will be dynamically fetched and rendered on first usage\", DynamicComponent ? /*#__PURE__*/React.createElement(DynamicComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Load dynamic HOC\", ' ', /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"(These HOC are fetched and rendered once you click the button)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"english\",\n      onClick: this.onHOCLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Load english\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"spanish\",\n      onClick: this.onHOCLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, ' ', \"Load spanish\", ' ')), DynamicHOC ? /*#__PURE__*/React.createElement(DynamicHOC, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }\n    }) : null));\n  }\n\n}\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","ReactDOM","HOCComponents","Work000","PureComponent","state","DynamicComponent","DynamicHOC","onHOCLangChange","e","lang","target","getAttribute","setState","render","onComponentLangChange","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAO,cAAP,C,CAEA;;AACA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,aAA5B,CAA0C;AAAA;AAAA;AAAA,SACrDC,KADqD,GAC7C;AACJC,MAAAA,gBAAgB,EAAE,IADd;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAD6C;;AAAA,SAYrDC,eAZqD,GAYnCC,CAAC,IAAI;AACnB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAb,CADmB,CAEnB;;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEL,aAAa,CAACQ,IAAD;AAA3B,OAAd;AACH,KAhBoD;AAAA;;AAkBrDI,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AAEA,wBACI,uDAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC2B,GAD3B,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,mBAAU,SAFd;AAGI,MAAA,OAAO,EAAE,KAAKU,qBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,mBAAU,SAFd;AAGI,MAAA,OAAO,EAAE,KAAKA,qBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,CARJ,4EAyBLT,gBAAgB,gBAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA0B,IAzBrC,CAFJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,GADrB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,mBAAU,SAFd;AAGI,MAAA,OAAO,EAAE,KAAKE,eAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eASI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,mBAAU,SAFd;AAGI,MAAA,OAAO,EAAE,KAAKA,eAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,GALL,kBAMG,GANH,CATJ,CARJ,EA4BKD,UAAU,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoB,IA5BnC,CA/BJ,CADJ;AAgEH;;AAtFoD;AAyFzD,MAAMS,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAjB,QAAQ,CAACa,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,WAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { components, HOCComponents } from './components';\nimport { HOCComponents } from './components';\nimport './styles.css';\n\n// class App extends React.PureComponent {\nexport default class Work000 extends React.PureComponent {\n    state = {\n        DynamicComponent: null,\n        DynamicHOC: null\n    };\n\n    // onComponentLangChange = e => {\n    //   const lang = e.target.getAttribute('data-lang');\n    //   // This loads different module when different language configuration is passed\n    //   this.setState({ DynamicComponent: components[lang] });\n    // };\n\n    onHOCLangChange = e => {\n        const lang = e.target.getAttribute('data-lang');\n        // This loads different module when different language configuration is passed\n        this.setState({ DynamicHOC: HOCComponents[lang] });\n    };\n\n    render() {\n        // const { DynamicComponent, DynamicHOC } = this.state;\n        const { DynamicHOC } = this.state;\n\n        return (\n            <>\n\n                <section>\n                    <p>\n                        Load dynamic component{' '}\n                        <small>\n                            (These components are fetched and rendered once you click the\n                            button)\n            </small>\n                    </p>\n                    <p>\n                        <button\n                            type='button'\n                            data-lang='english'\n                            onClick={this.onComponentLangChange}\n                        >\n                            Load english\n            </button>\n                        <button\n                            type='button'\n                            data-lang='spanish'\n                            onClick={this.onComponentLangChange}\n                        >\n                            Load spanish\n            </button>\n                    </p>\n          This component will be dynamically fetched and rendered on first usage\n          {DynamicComponent ? <DynamicComponent /> : null}\n                </section>\n\n\n                <section>\n                    <p>\n                        Load dynamic HOC{' '}\n                        <small>\n                            (These HOC are fetched and rendered once you click the button)\n            </small>\n                    </p>\n\n                    <p>\n                        <button\n                            type='button'\n                            data-lang='english'\n                            onClick={this.onHOCLangChange}\n                        >\n                            Load english\n            </button>\n\n                        <button\n                            type='button'\n                            data-lang='spanish'\n                            onClick={this.onHOCLangChange}\n                        >\n                            {' '}\n              Load spanish{' '}\n                        </button>\n                    </p>\n\n                    {/* This hoc will be dynamically fetched and rendered on first usage */}\n                    {DynamicHOC ? <DynamicHOC /> : null}\n                </section>\n            </>\n        );\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}