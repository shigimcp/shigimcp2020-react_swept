{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx\";\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nimport { useState } from 'react'; // import { components, HOCComponents } from './components';\n\nimport { HOCComponents } from './components'; // import './styles.css';\n\nimport '../stylesheets/Work.scss'; // class App extends React.PureComponent {\n// class Work000 extends React.PureComponent {\n// export default class Work000 extends React.PureComponent {\n\nfunction WorkList() {\n  // export default() => {\n  let DynamicHOC = null;\n  const [state, setState] = useState(null);\n  state = {\n    DynamicComponent: null,\n    DynamicHOC: null\n  }; // onComponentLangChange = e => {\n  //   const lang = e.target.getAttribute('data-lang');\n  //   // This loads different module when different language configuration is passed\n  //   this.setState({ DynamicComponent: components[lang] });\n  // };\n  // onHOCLangChange = e => {\n\n  function onHOCLangChange(e) {\n    console.log('onHOCLangChange(e) triggered!     e = ' + e);\n    console.log('onHOCLangChange(e) triggered!     e.target = ' + e.target);\n    console.log('e.target.getAttribute(data - banner) = ' + e.target.getAttribute('data-banner')); // const lang = e.target.getAttribute('data-lang');\n\n    const banner = e.target.getAttribute('data-banner');\n    console.log('banner = ' + banner); // This loads different module when different language configuration is passed\n    // this.setState({ DynamicHOC: HOCComponents[lang] });\n    // setState({ DynamicHOC: HOCComponents[banner] });\n\n    setState({\n      DynamicHOC: HOCComponents[banner]\n    });\n  }\n\n  ; // render() {\n  // const { DynamicComponent, DynamicHOC } = this.state;\n  // const { DynamicHOC } = this.state;\n  // const { DynamicHOC } = state;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Load dynamic HOC\", ' ', \" \", state, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"(These HOC are fetched and rendered once you click the button)\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-banner\": \"BSPS_26897\",\n    onClick: onHOCLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Load BSPS_26897\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-banner\": \"NMMN_11155\",\n    onClick: onHOCLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Load NMMN_11155\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-banner\": \"NMTG_26903\",\n    onClick: onHOCLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Load NMTG_26903\")), DynamicHOC ? /*#__PURE__*/React.createElement(DynamicHOC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }\n  }) : null)); // }\n} // const rootElement = document.getElementById('root');\n// ReactDOM.render(<Work000 />, rootElement);\n\n\nexport const Work000 = () => {\n  // export default Work000 = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","useState","HOCComponents","WorkList","DynamicHOC","state","setState","DynamicComponent","onHOCLangChange","e","console","log","target","getAttribute","banner","Work000"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CAEA;;AACA,OAAO,0BAAP,C,CAGA;AACA;AACA;;AACA,SAASC,QAAT,GAAoB;AACpB;AAEI,MAAIC,UAAU,GAAG,IAAjB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEAI,EAAAA,KAAK,GAAG;AACJE,IAAAA,gBAAgB,EAAE,IADd;AAEJH,IAAAA,UAAU,EAAE;AAFR,GAAR,CAPgB,CAahB;AACA;AAEA;AACA;AACA;AAEA;;AACA,WAASI,eAAT,CAAyBC,CAAzB,EAA4B;AAExBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CF,CAAvD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAkDF,CAAC,CAACG,MAAhE;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAA4CF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,aAAtB,CAAxD,EAJwB,CAMxB;;AACA,UAAMC,MAAM,GAAGL,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,aAAtB,CAAf;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcG,MAA1B,EATwB,CAWxB;AACA;AACA;;AACAR,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,UAAU,EAAEF,aAAa,CAACY,MAAD;AAA3B,KAAD,CAAR;AACH;;AAAA,GApCe,CAsChB;AACI;AACA;AACA;;AAEA,sBACI,uDAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqB,GADrB,OAC2BT,KAD3B,eACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjC,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,YAAlC;AAA+C,IAAA,OAAO,EAAEG,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZJ,eAaI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,YAAlC;AAA+C,IAAA,OAAO,EAAEA,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbJ,eAcI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,YAAlC;AAA+C,IAAA,OAAO,EAAEA,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdJ,CANJ,EAyBKJ,UAAU,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,IAzBnC,CApBJ,CADJ,CA3CY,CA8FhB;AACH,C,CAED;AACA;;;AAGA,OAAO,MAAMW,OAAO,GAAG,MAAM;AAC7B;AAEI,sBACI,uDACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CARM","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { useState } from 'react';\n\n// import { components, HOCComponents } from './components';\nimport { HOCComponents } from './components';\n\n// import './styles.css';\nimport '../stylesheets/Work.scss';\n\n\n// class App extends React.PureComponent {\n// class Work000 extends React.PureComponent {\n// export default class Work000 extends React.PureComponent {\nfunction WorkList() {\n// export default() => {\n\n    let DynamicHOC = null;\n\n    const [state, setState] = useState(null);\n\n    state = {\n        DynamicComponent: null,\n        DynamicHOC: null\n    };\n\n\n    // onComponentLangChange = e => {\n    //   const lang = e.target.getAttribute('data-lang');\n\n    //   // This loads different module when different language configuration is passed\n    //   this.setState({ DynamicComponent: components[lang] });\n    // };\n\n    // onHOCLangChange = e => {\n    function onHOCLangChange(e) {\n\n        console.log('onHOCLangChange(e) triggered!     e = ' + e);\n        console.log('onHOCLangChange(e) triggered!     e.target = ' + e.target);\n        console.log('e.target.getAttribute(data - banner) = ' + e.target.getAttribute('data-banner'));\n\n        // const lang = e.target.getAttribute('data-lang');\n        const banner = e.target.getAttribute('data-banner');\n\n        console.log('banner = ' + banner);\n\n        // This loads different module when different language configuration is passed\n        // this.setState({ DynamicHOC: HOCComponents[lang] });\n        // setState({ DynamicHOC: HOCComponents[banner] });\n        setState({ DynamicHOC: HOCComponents[banner] });\n    };\n\n    // render() {\n        // const { DynamicComponent, DynamicHOC } = this.state;\n        // const { DynamicHOC } = this.state;\n        // const { DynamicHOC } = state;\n\n        return (\n            <>\n            {/* \n                <section>\n\n                    <p>\n                        Load dynamic component{' '}\n                        <small>(These components are fetched and rendered once you click thebutton)</small>\n                    </p>\n\n                    <p>\n                        <button type='button' data-lang='english' onClick={this.onComponentLangChange}>Load english</button>\n                        <button type='button' data-lang='spanish' onClick={this.onComponentLangChange}>Load spanish</button>\n                    </p>\n\n                    This component will be dynamically fetched and rendered on first usage\n                    {DynamicComponent ? <DynamicComponent /> : null}\n\n                </section>\n            */}\n\n                <section>\n                    <p>\n                        Load dynamic HOC{' '} {state}<br />\n                        <small>(These HOC are fetched and rendered once you click the button)</small>\n                    </p>\n\n                    <p>\n{/* \n                        <button type='button' data-lang='english' onClick={this.onHOCLangChange}>Load english</button>\n                        <button type='button' data-lang='spanish' onClick={this.onHOCLangChange} > {' '} Load spanish{' '} </button>\n */}\n{/* \n                        <button type='button' data-banner='BSPS_26897' onClick={this.onHOCLangChange}>Load BSPS_26897</button>\n                        <button type='button' data-banner='NMMN_11155' onClick={this.onHOCLangChange} >Load NMMN_11155</button>\n                        <button type='button' data-banner='NMTG_26903' onClick={this.onHOCLangChange} >Load NMTG_26903</button>\n */}\n\n                        {/* <button type='button' data-banner='BSPS_26897' onClick={() => onHOCLangChange(EventTarget)}>Load BSPS_26897</button> */}\n                        <button type='button' data-banner='BSPS_26897' onClick={onHOCLangChange}>Load BSPS_26897</button>\n                        <button type='button' data-banner='NMMN_11155' onClick={onHOCLangChange}>Load NMMN_11155</button>\n                        <button type='button' data-banner='NMTG_26903' onClick={onHOCLangChange}>Load NMTG_26903</button>\n\n                    </p>\n\n                    {/* This hoc will be dynamically fetched and rendered on first usage */}\n                    {DynamicHOC ? <DynamicHOC /> : null}\n\n                </section>\n            </>\n        );\n    // }\n}\n\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<Work000 />, rootElement);\n\n\nexport const Work000 = () => {\n// export default Work000 = () => {\n\n    return (\n        <>\n            <WorkList />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}