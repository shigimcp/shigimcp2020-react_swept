{"ast":null,"code":"//#region ==================== IMPORTS ====================\nimport React from'react';import{BodyContainer}from'../components/BodyContainer';import'../stylesheets/Resume.scss';import myData from'../data/MyData';//#endregion ==================== IMPORTS ====================\n//#region ==================== DATA ====================\nvar employerData=myData[0];// const workData = myData[1];\n// const aboutData = myData[2];\n//#endregion ==================== DATA ====================\n//#region ==================== RESUME: REF https://reactjs.org/docs/lists-and-keys.html ====================\nvar remoteLoc='https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';function EmployerItem(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"employerItem\"},/*#__PURE__*/React.createElement(\"img\",{className:\"logo\",src:remoteLoc+props.employerLogo,alt:'employer: '+props.employer}),/*#__PURE__*/React.createElement(\"div\",{className:\"employerInfo\"},/*#__PURE__*/React.createElement(\"h1\",null,props.employer),/*#__PURE__*/React.createElement(\"h2\",null,props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"employerDates\"},props.dateStart,\" - \",props.dateEnd),/*#__PURE__*/React.createElement(\"ul\",null,props.info.split('\\n').map(function(thisInfo,key){return/*#__PURE__*/React.createElement(\"li\",{key:key},thisInfo);})),/*#__PURE__*/React.createElement(\"p\",null,function(){if(props.languages){return\"languages: \";}else{return\"\";}}(),props.languages),/*#__PURE__*/React.createElement(\"p\",null,props.otherInfo)));}function EmployerList(){var employerItems=employerData.map(function(employer){return/*#__PURE__*/React.createElement(EmployerItem,{key:employer.album_id,album_id:employer.album_id,employer:employer.employer,title:employer.title,dateStart:employer.date_start,dateEnd:employer.date_end,info:employer.info,otherInfo:employer.info_other,languages:employer.languages,employerLogo:employer.logopath});});return/*#__PURE__*/React.createElement(\"div\",{className:\"employerList\"},employerItems);}//#endregion ==================== RESUME ====================\nexport var Resume=function Resume(){return/*#__PURE__*/React.createElement(BodyContainer,{title:\"Resume\"},/*#__PURE__*/React.createElement(EmployerList,null));};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react_swept/src/pages/Resume.jsx"],"names":["React","BodyContainer","myData","employerData","remoteLoc","EmployerItem","props","employerLogo","employer","title","dateStart","dateEnd","info","split","map","thisInfo","key","languages","otherInfo","EmployerList","employerItems","album_id","date_start","date_end","info_other","logopath","Resume"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,aAAT,KAA8B,6BAA9B,CAEA,MAAO,4BAAP,CAEA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CAGA;AAGA;AAEA,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAAC,CAAD,CAA3B,CACA;AACA;AAEA;AAGA;AAEA,GAAME,CAAAA,SAAS,CAAG,0DAAlB,CAGA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAEzB,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,MAAf,CAAsB,GAAG,CAAEF,SAAS,CAAGE,KAAK,CAACC,YAA7C,CAA2D,GAAG,CAAE,aAAeD,KAAK,CAACE,QAArF,EADJ,cAEI,2BAAK,SAAS,CAAC,cAAf,eACI,8BAAKF,KAAK,CAACE,QAAX,CADJ,cAEI,8BAAKF,KAAK,CAACG,KAAX,CAFJ,cAGI,2BAAK,SAAS,CAAC,eAAf,EAAgCH,KAAK,CAACI,SAAtC,OAAoDJ,KAAK,CAACK,OAA1D,CAHJ,cAII,8BACKL,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiB,IAAjB,EAAuBC,GAAvB,CAA2B,SAACC,QAAD,CAAWC,GAAX,CAAmB,CAC3C,mBAAO,0BAAI,GAAG,CAAEA,GAAT,EAAeD,QAAf,CAAP,CACH,CAFA,CADL,CAJJ,cASI,6BACM,UAAM,CACJ,GAAIT,KAAK,CAACW,SAAV,CAAqB,CACjB,MAAO,aAAP,CACH,CAFD,IAEO,CACH,MAAO,EAAP,CACH,CACJ,CANA,EADL,CAQKX,KAAK,CAACW,SARX,CATJ,cAmBI,6BAAIX,KAAK,CAACY,SAAV,CAnBJ,CAFJ,CADJ,CA0BH,CAED,QAASC,CAAAA,YAAT,EAAwB,CAEpB,GAAMC,CAAAA,aAAa,CAAGjB,YAAY,CAACW,GAAb,CAAiB,SAACN,QAAD,qBACnC,oBAAC,YAAD,EACI,GAAG,CAAEA,QAAQ,CAACa,QADlB,CAEI,QAAQ,CAAEb,QAAQ,CAACa,QAFvB,CAGI,QAAQ,CAAEb,QAAQ,CAACA,QAHvB,CAII,KAAK,CAAEA,QAAQ,CAACC,KAJpB,CAKI,SAAS,CAAED,QAAQ,CAACc,UALxB,CAMI,OAAO,CAAEd,QAAQ,CAACe,QANtB,CAOI,IAAI,CAAEf,QAAQ,CAACI,IAPnB,CAQI,SAAS,CAAEJ,QAAQ,CAACgB,UARxB,CASI,SAAS,CAAEhB,QAAQ,CAACS,SATxB,CAUI,YAAY,CAAET,QAAQ,CAACiB,QAV3B,EADmC,EAAjB,CAAtB,CAeA,mBACI,2BAAK,SAAS,CAAC,cAAf,EACKL,aADL,CADJ,CAKH,CAED;AAEA,MAAO,IAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxB,mBACI,oBAAC,aAAD,EAAe,KAAK,CAAC,QAArB,eACI,oBAAC,YAAD,MADJ,CADJ,CAKH,CANM","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n\nimport { BodyContainer } from '../components/BodyContainer';\n\nimport '../stylesheets/Resume.scss';\n\nimport myData from '../data/MyData';\n\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== DATA ====================\n\nconst employerData = myData[0];\n// const workData = myData[1];\n// const aboutData = myData[2];\n\n//#endregion ==================== DATA ====================\n\n\n//#region ==================== RESUME: REF https://reactjs.org/docs/lists-and-keys.html ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\n\nfunction EmployerItem(props) {\n\n    return (\n        <div className='employerItem'>\n            <img className='logo' src={remoteLoc + props.employerLogo} alt={'employer: ' + props.employer} />\n            <div className='employerInfo'>\n                <h1>{props.employer}</h1>\n                <h2>{props.title}</h2>\n                <div className='employerDates'>{props.dateStart} - {props.dateEnd}</div>\n                <ul>\n                    {props.info.split('\\n').map((thisInfo, key) => {\n                        return <li key={key}>{thisInfo}</li>\n                    })}\n                </ul>\n                <p>\n                    {(() => {\n                        if (props.languages) {\n                            return \"languages: \";\n                        } else {\n                            return \"\";\n                        }\n                    })()}\n                    {props.languages}\n                </p>\n                <p>{props.otherInfo}</p>\n            </div>\n        </div>\n    )\n}\n\nfunction EmployerList() {\n\n    const employerItems = employerData.map((employer) =>\n        <EmployerItem\n            key={employer.album_id}\n            album_id={employer.album_id}\n            employer={employer.employer}\n            title={employer.title}\n            dateStart={employer.date_start}\n            dateEnd={employer.date_end}\n            info={employer.info}\n            otherInfo={employer.info_other}\n            languages={employer.languages}\n            employerLogo={employer.logopath}\n        />\n    );\n\n    return (\n        <div className='employerList'>\n            {employerItems}\n        </div>\n    );\n}\n\n//#endregion ==================== RESUME ====================\n\nexport const Resume = () => {\n    return (\n        <BodyContainer title=\"Resume\">\n            <EmployerList />\n        </BodyContainer>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}