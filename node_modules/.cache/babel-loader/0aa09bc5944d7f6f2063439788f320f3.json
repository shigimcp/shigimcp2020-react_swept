{"ast":null,"code":"//#region ==================== IMPORTS ====================\nimport React from'react';import{useRef}from'react';// import { useEffect } from 'react';\nimport{useLayoutEffect}from'react';// import { useCallback } from 'react';\nimport{gsap}from'gsap';// import * as PIXI from 'pixi.js';\n// import { PixiPlugin } from 'gsap/PixiPlugin';\n// import { render, Text } from '@inlet/react-pixi';\n// import { Application } from 'pixi.js';\nimport'../banners.scss';import'./NMPF_04852.scss';// import './fonts/fonts.css';\n//#region -------------------- IMPORTS: ASSETS --------------------\n// import bg from './images/bg.jpg';\n// import bg_ko from './images/bg_ko.png';\nimport skyline from'./images/skyline.png';import model from'./images/model.png';import bottle from'./images/bottle.png';// import logo_NMPF from './images/logo.png';\nimport logo_NM from'./images/logo_NM.png';import logo_PF from'./images/logo_PF.png';import tag from'./images/tag.png';// import cta from './images/btn_buy.png';\nimport cta from\"./images/btn_buy.svg\";// import starspin from './images/starspin.png';\nimport starspin from\"./images/starspin.svg\";// import starspin_mask_01 from './images/starspin_mask_01.png';\n// import starspin_mask_02 from './images/starspin_mask_02.png';\n// import particle from './images/sparkle.png';\n//#endregion -------------------- IMPORTS: ASSETS --------------------\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n//#endregion ==================== IMPORTS ====================\nexport default function NMPF_04852(){//#region ==================== ASSETS _Ref ====================\n// const bg_Ref = useRef(null);\n// const bg_ko_Ref = useRef(null);\nvar skyline_Ref=useRef(null);var model_Ref=useRef(null);var model_mask_Ref=useRef(null);var bottle_Ref=useRef(null);// const logo_NMPF_Ref = useRef(null);\nvar logo_NM_Ref=useRef(null);var logo_PF_Ref=useRef(null);var tag_Ref=useRef(null);var cta_Ref=useRef(null);var starspin_Ref=useRef(null);var starspin01_Ref=useRef(null);var starspin02_Ref=useRef(null);var starspin_mask_Ref=useRef(null);// const starspin_mask_01_Ref = useRef(null);\n// const starspin_mask_02_Ref = useRef(null);\nvar particleContainer_Ref=useRef(null);var clickTag_Ref=useRef(null);//#endregion ==================== ASSETS _Ref ====================\n//#region ==================== ANIMATION DURATIONs ====================\n// const staggerDuration = 0.125;\n// const staggerDelay = 0.0375;\n// const animDuration00 = 0.125;\n// const animDuration00_5 = 0.50;\n// const animDuration01 = 1.00;\n// const animDuration01_25 = 1.25;\nvar animDuration01_5=1.50;var animDuration02=2.00;// const animDuration02_5 = 2.50;\nvar animDuration03=3.00;// const animDuration03_5 = 3.50;\n// const animDuration04 = 4.00;\n// const animDuration04_5 = 4.50;\nvar animDuration05=5.00;// const animDuration05_5 = 5.50;\n// const animDuration06 = 6.00;\n// const animDuration06_5 = 6.50;\n// const animDuration07 = 7.00;\n// const animDuration07_5 = 7.50;\n// const animDuration08 = 8.00;\n// const animDuration08_5 = 8.50;\n// const animDuration09 = 9.00;\n// const animDuration09_5 = 9.50;\n// const animDuration10 = 10.00;\n//#endregion ==================== ANIMATION DURATIONs ====================\n//#region ==================== FUNCTIONS ====================\n//#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n// function splitText(thisContainer, thisCopy, thisClassname) {\n//     // console.log('');\n//     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n//     const thisCopyResponse = thisCopy.split('');\n//     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n//     for (let c = 0; c < thisCopyResponse.length; c++) {\n//         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n//         const node = document.createElement('p');\n//         node.className = thisClassname;\n//         if (thisCopyResponse[c] !== ' ') {\n//             node.innerHTML = thisCopyResponse[c];\n//             thisContainer.append(node);\n//         } else {\n//             // console.log('This is a space!');\n//             node.innerHTML = '&nbsp;';\n//             thisContainer.append(node);\n//         }\n//     }\n// }\n//#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n//#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n// function randRange(min, max) {\n//     let thisIndex = min + Math.round(Math.random() * (max - min));\n//     //\tconsole.log('thisIndex = ' + thisIndex);\n//     return thisIndex;\n// }\n//#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n//#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n// function randRange2(min, max) {\n//     let thisIndex = min + Math.random() * (max - min);\n//     //\tconsole.log('thisIndex = ' + thisIndex);\n//     return thisIndex;\n// }\n//#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n//#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n// const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n//     // console.log('');\n//     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n//     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n//     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n// }, []);\n//#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n//#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n//#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n// const removeAllChildNodes = useCallback((parent) => {\nfunction removeAllChildNodes(parent){// console.log('');\n// console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n// console.log('parent = ' + parent);\n// console.log('parent.id = ' + parent.id);\nwhile(parent.firstChild){parent.removeChild(parent.firstChild);}}// }, []);\n//#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n// const removeParticle = useCallback((thisParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n//     // console.log('NOTE: the error check below does not work 100%');\n//     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n//     // console.log('thisParticle = ' + thisParticle);\n//     // console.log('thisParticle.id = ' + thisParticle.id);\n//     if (thisParticle == null) {\n//         console.log('***** NOPE! *****');\n//         console.error();\n//     } else {\n//         thisParticle.parentNode.removeChild(thisParticle);\n//     }\n// }, []);\n//#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n// // const particleAnim = useCallback((thisParticle) => {\n// const particleAnim = useCallback((thisContainer) => {\n//     console.log('');\n//     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n//     // console.log('thisParticle.id = ' + thisParticle.id);\n//     // console.log('thisParticle.width = ' + thisParticle.width);\n//     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n//     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n//     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n//     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n//     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n//     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n//     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n//     // gsap.to(bottle_Ref.current, {\n//     //     duration: 1,\n//     //     pixi: {\n//     //         scale: 0.2,\n//     //         rotation: 60\n//     //     }\n//     // });\n//     console.log('thisContainer.id = ' + thisContainer.id);\n//     const speed = 0.25;\n//     const gravity = -200;\n//     for (let i = 0; i < thisContainer.children.length; i++) {\n//         const animAngle = Math.random() * Math.PI * 2;\n//         console.log('animAngle = ' + animAngle);\n//         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n//         //     alpha: 0,\n//         //     // scaleX: thisScale,\n//         //     // scaleY: thisScale,\n//         //     physics2D: {\n//         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n//         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n//         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n//         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n//         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n//         //         // velocity: speed,\n//         //         gravity: gravity\n//         //     }\n//         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n//         //     //x:Math.cos(animAngle) * length * 6, \n//         //     //y:Math.sin(animAngle) * length * 6\n//         // }, 0);\n//     }\n// }, []);\n// // }, [removeParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n// const positionParticle = useCallback((thisContainer) => {\n// // const positionParticle = useCallback((thisContainer, particleWidth) => {\n//     // console.log('');\n//     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n//     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n//     // const displacementFactor = 0.5;\n//     for (let i = 0; i < thisContainer.children.length; i++) {\n//         // console.log('');\n//         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n//         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n//         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n//         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n//         // const thisX = -150;\n//         // const thisY = 125;\n//         const thisX = -(thisContainer.children[i].width * 0.5);\n//         const thisY = thisContainer.offsetHeight * 0.5;\n//         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n//         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n//         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n//         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n//         // const thisScale = 1;\n//         // const thisScale = 0.125;\n//         const thisScale = randRange(5, 15) / 100;\n//         // console.log('thisScale = ' + thisScale);\n//         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n//         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n//         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n//     }\n//     // particleAnim(thisContainer.children[i]);\n//     particleAnim(thisContainer);\n// // }, []);\n// }, [particleAnim]);\n//#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n// const addParticle = useCallback((thisContainer, numParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     for (let i = 0; i < numParticle; i++) {\n//         const thisParticle = new Image();\n//         thisParticle.src = particle;\n//         thisParticle.key = i;\n//         thisParticle.className = 'particle';\n//         thisParticle.id = 'particle_' + i;\n//         thisParticle.alt = 'particle_' + i;\n//         thisContainer.append(thisParticle);\n//         // console.log('thisParticle.width = ' + thisParticle.width);\n//     }\n//     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n//     // let particleWidth = 0;\n//     thisContainer.lastChild.onload = function () {\n//         // particleWidth = thisContainer.lastChild.width;\n//         // console.log('particleWidth = ' + particleWidth);\n//         positionParticle(thisContainer);\n//         // positionParticle(thisContainer, particleWidth);\n//     }\n//     // positionParticle(thisContainer);\n// // }, []);\n// }, [positionParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n// const addRandomParticle = useCallback((thisContainer, numParticle) => {\n//     // console.log('');\n//     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n//     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     const particles = [\n//         flower_01,\n//         flower_02,\n//         flower_03,\n//         flower_04,\n//         flower_05\n//     ];\n//     // console.log('particles = ' + particles);\n//     for (let i = 0; i < numParticle; i++) {\n//         let particleIndex = randRange(0, 4);\n//         // console.log('particleIndex = ' + particleIndex);\n//         const thisParticle = new Image();\n//         thisParticle.src = particles[particleIndex];\n//         thisParticle.key = i;\n//         thisParticle.className = 'particle';\n//         thisParticle.id = 'flower' + i;\n//         thisParticle.alt = 'flower' + i;\n//         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n//         // console.log('thisParticle = ' + thisParticle.id);\n//         thisContainer.append(thisParticle);\n//     }\n//     positionParticle(thisContainer);\n// }, [positionParticle]);\n//#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n//#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n// const addPixi = useCallback((thisContainer, numParticle) => {\n//     console.log('');\n//     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n//     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n//     // Setup PIXI app\n//     const app = new Application({\n//         width: 300,\n//         height: 250,\n//         backgroundColor: 0x10bb99,\n//         view: document.getElementById('container'),\n//     })\n//     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n//     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n//     // //DEFINE VARIABLES\n//     // // let vw = window.innerWidth;\n//     // // let vh = window.innerHeight;\n//     // let vw = 300;\n//     // let vh = 250;\n//     // // let count = 0;\n//     // //INITIALIZE PIXI\n//     // const app = new PIXI.Application(vw, vh, {\n//     //     autoResize: true,\n//     //     resolution: devicePixelRatio || 1,\n//     //     antialias: true, \n//     //     transparent: true\n//     // });\n//     // thisContainer.appendChild(app.view);\n//     // thisContainer.lastChild.onload = function () {\n//     //     for (let i = 0; i < numParticle; i++) {\n//     //         const thisParticle = new Image();\n//     //         thisParticle.src = particle;\n//     //         thisParticle.key = i;\n//     //         thisParticle.className = 'particle';\n//     //         thisParticle.id = 'particle_' + i;\n//     //         thisParticle.alt = 'particle_' + i;\n//     //         // app.append(thisParticle);\n//     //         app.stage.addChild(thisParticle);\n//     //         console.log('thisParticle.width = ' + thisParticle.width);\n//     //     }\n//     // }\n// }, []);\n//#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n//#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n//#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\nfunction handleClick(){// const handleClick = useCallback(() => {\n// console.log('');\n// console.log('------------------------- handleClick() -------------------------');\nremoveAllChildNodes(particleContainer_Ref.current);tl.pause(0);tl.restart();}// }, [tl]);\n//#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n//#endregion ==================== FUNCTIONS ====================\n//#region ==================== useEffect / useLayoutEffect ====================\n// const numParticle = 40;\nvar tl=gsap.timeline({delay:0});// useEffect(() => {\nuseLayoutEffect(function(){// addParticle(particleContainer_Ref.current, numParticle);\n// addRandomParticle(particleContainer_Ref.current, numParticle);\n// addPixi(particleContainer_Ref.current, numParticle);\ntl//#region ==================== INITIALIZE OBJECTS ====================\n//#region -------------------- autoAlpha --------------------\n// .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([bg_ko_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([skyline_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([model_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([model_mask_Ref.current], { autoAlpha: 0 }, 'frame00')\n.set([bottle_Ref.current],{autoAlpha:0},'frame00')// .set([logo_NMPF_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([logo_NM_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([logo_PF_Ref.current], { autoAlpha: 0 }, 'frame00')\n.set([tag_Ref.current],{autoAlpha:0},'frame00').set([cta_Ref.current],{autoAlpha:0},'frame00')// .set([starspin_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([starspin_mask_01_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([starspin_mask_02_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([clickTag_Ref.current], { autoAlpha: 0 }, 'frame00')\n// .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n//#endregion -------------------- autoAlpha --------------------\n//#region -------------------- SET TRANSFORMS --------------------\n//#region -------------------- SET TRANSFORM ORIGiNS --------------------\n// .set([bottle_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n.set([model_mask_Ref.current],{transformOrigin:'50% 50%',immediateRender:true},'frame00')// .set([starspin_Ref.current.children], { transformOrigin: '50% 50%', immediateRender: true }, 'frame00')\n.set([starspin01_Ref.current,starspin02_Ref.current],{transformOrigin:'50% 50%',immediateRender:true},'frame00')// .set([bg_Ref.current], { transformOrigin: '50% 25%', immediateRender: true }, 'frame00')\n//#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n//#region -------------------- FRAME01 --------------------\n.set([starspin01_Ref.current,starspin02_Ref.current],{autoAlpha:0.25},'frame00')// .set([model_mask_Ref.current], { scale: 5 }, 'frame00')\n// .set([copy01_Ref.current], { x: -73.75, y: 85.5, scale: 0.529411764705882 }, 'frame00')\n// .set([LOGO_VLJref.current], { x: -72.5, y: 230, scale: 0.558823529411765 }, 'frame00')\n// .set([copy01_Ref.current, LOGO_VLJref.current], { x: 0, y: 0, scale: 1 }, 'frame00')\n//#endregion -------------------- FRAME01 --------------------\n//#endregion -------------------- SET TRANSFORMS --------------------\n//#endregion ==================== INITIALIZE OBJECTS ====================\n//#region ==================== FRAME 01 ====================\n// .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n.fromTo([starspin_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration01_5},'frame01 +=0')// .staggerTo(starspin_Ref.current.children, animDuration03, { cycle: { rotation: ['20', '-20'] }, ease: 'none', delay: 0.5 }, 'frame01 +=0')\n// .to([starspin_Ref.current.children], { duration: animDuration03, rotation: [20, -20], ease: 'none', stagger: 0.5 }, 'frame01 +=0')\n.fromTo([starspin01_Ref.current],{rotation:-20},{rotation:0,ease:'none',duration:animDuration05},'frame01 +=0').fromTo([starspin02_Ref.current],{rotation:20},{rotation:0,ease:'none',duration:animDuration05},'frame01 +=0').fromTo([model_mask_Ref.current],{scale:0},{scale:5,ease:'power3.out',duration:animDuration03},'frame01 +=1.25').fromTo([bottle_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration02},'frame01 +=2.25').fromTo([tag_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration02},'frame01 +=2.5').fromTo([cta_Ref.current],{autoAlpha:0},{autoAlpha:1,ease:'power3.out',duration:animDuration02},'frame01 +=3')// .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [copy01_Ref.current, -73.75, 85.5, 0.529411764705882, 0] }, 'frame01 +=1.5')\n//#endregion ==================== FRAME 01 ====================\n//#region ==================== FRAME 02 ====================\n// .to([copy01_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n// .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n//#endregion ==================== FRAME 02 ====================\n//#region ==================== FRAME 03 ====================\n// .to([LOGO_VLJref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [LOGO_VLJref.current, -72.5, 230, 0.558823529411765, 0] }, 'frame03 +=0.5')\n// .fromTo([copy02_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame03 +=0.5')\n//#endregion ==================== FRAME 03 ====================\n//#region ==================== FRAME 04 ====================\n// .set([copy01_Ref.current], { color: '#000000' }, 'frame04')\n// .set([LOGO_VLJ_noir_w_Ref.current], { autoAlpha: 0 }, 'frame04')\n// .set([LOGO_VLJ_noir_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n// .set([LOGO_VLJ_jc_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n// .to([copy02_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n// .fromTo([model_mask_Ref.current], { y: -1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n// .fromTo([model_SVG_Ref.current], { y: 1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n// .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.5')\n// .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.75')\n// .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=1')\n// // .staggerFromTo(copy01_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=1.5')\n// // .staggerFromTo(copy02_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=4')\n//#endregion ==================== FRAME 04 ====================\n;//tl.duration(1.5);\nconsole.log('');console.log('tl timing = '+tl.duration()+' secs');// }, []);\n},[tl]);// }, [tl, addParticle]);\n// }, [tl, addRandomParticle]);\n// }, [tl, addRandomParticle, nextPos]);\n// }, [tl, addPixi]);\n//#endregion ==================== useEffect / useLayoutEffect ====================\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"banner300x250 nmpf_04852\",id:\"nmpf_04852ID\"},/*#__PURE__*/React.createElement(\"svg\",{className:\"starspinDiv\",id:\"starspinDivID\",version:\"1.1\",baseProfile:\"full\",x:\"0\",y:\"0\",width:\"300\",height:\"250\",space:\"preserve\",ref:starspin_Ref},/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"radialGradient\",{id:\"maskGrad_starspinID\",gradientUnits:\"userSpaceOnUse\",r:\"160\"},/*#__PURE__*/React.createElement(\"stop\",{offset:\"0.25\",style:{stopColor:'#FFFFFF'}}),/*#__PURE__*/React.createElement(\"stop\",{offset:\"1\",style:{stopColor:'#000000'}})),/*#__PURE__*/React.createElement(\"mask\",{id:\"mask_starspinID\"},/*#__PURE__*/React.createElement(\"rect\",{className:\"class_mask\",fill:\"url(#maskGrad_starspinID)\",x:\"0\",y:\"0\",width:\"300\",height:\"250\"}))),/*#__PURE__*/React.createElement(\"g\",{mask:\"url(#mask_starspinID)\",ref:starspin_mask_Ref},/*#__PURE__*/React.createElement(\"image\",{href:starspin,x:\"0\",y:\"-10\",width:\"300\",height:\"322.8515625\",ref:starspin01_Ref}),/*#__PURE__*/React.createElement(\"image\",{href:starspin,x:\"0\",y:\"-10\",width:\"300\",height:\"322.8515625\",ref:starspin02_Ref}))),/*#__PURE__*/React.createElement(\"div\",{className:\"particleContainer\",id:\"particleContainerID\",ref:particleContainer_Ref}),/*#__PURE__*/React.createElement(\"img\",{className:\"skyline\",id:\"skylineID\",src:skyline,alt:\"skyline\",ref:skyline_Ref}),/*#__PURE__*/React.createElement(\"svg\",{className:\"modelDiv\",id:\"modelDivID\",version:\"1.1\",baseProfile:\"full\",width:\"92.5\",height:\"225\",space:\"preserve\",ref:model_Ref},/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"radialGradient\",{id:\"maskGrad_modelID\",cx:\"50%\",cy:\"50%\",r:\"50%\",fx:\"50%\",fy:\"50%\"},/*#__PURE__*/React.createElement(\"stop\",{offset:\"0.25\",style:{stopColor:'#FFFFFF'}}),/*#__PURE__*/React.createElement(\"stop\",{offset:\"1\",style:{stopColor:'#000000'}})),/*#__PURE__*/React.createElement(\"mask\",{id:\"mask_modelID\"},/*#__PURE__*/React.createElement(\"rect\",{className:\"class_mask\",fill:\"url(#maskGrad_modelID)\",x:\"36.25\",y:\"0\",width:\"92.5\",height:\"225\",ref:model_mask_Ref}))),/*#__PURE__*/React.createElement(\"g\",{mask:\"url(#mask_modelID)\"},/*#__PURE__*/React.createElement(\"image\",{href:logo_PF,x:\"0\",y:\"0\",width:\"165\",height:\"50\",ref:logo_PF_Ref}),/*#__PURE__*/React.createElement(\"image\",{href:model,x:\"32.25\",y:\"15\",width:\"92.5\",height:\"225\"}),/*#__PURE__*/React.createElement(\"image\",{href:logo_NM,x:\"0\",y:\"0\",width:\"165\",height:\"50\",ref:logo_NM_Ref}))),/*#__PURE__*/React.createElement(\"img\",{src:bottle,className:\"bottle\",id:\"bottleID\",alt:\"bottle\",ref:bottle_Ref}),/*#__PURE__*/React.createElement(\"img\",{src:tag,className:\"tag\",id:\"tagID\",alt:\"bottle\",ref:tag_Ref}),/*#__PURE__*/React.createElement(\"img\",{src:cta,className:\"cta\",id:\"ctaID\",alt:\"cta\",ref:cta_Ref}),/*#__PURE__*/React.createElement(\"div\",{className:\"clickTag\",id:\"clickTagID\",ref:clickTag_Ref,onClick:handleClick}));}","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/images/ea/banners/CR_4852_NMPF_US_Walmart_300x250/NMPF_04852.jsx"],"names":["React","useRef","useLayoutEffect","gsap","skyline","model","bottle","logo_NM","logo_PF","tag","NMPF_04852","skyline_Ref","model_Ref","model_mask_Ref","bottle_Ref","logo_NM_Ref","logo_PF_Ref","tag_Ref","cta_Ref","starspin_Ref","starspin01_Ref","starspin02_Ref","starspin_mask_Ref","particleContainer_Ref","clickTag_Ref","animDuration01_5","animDuration02","animDuration03","animDuration05","removeAllChildNodes","parent","firstChild","removeChild","handleClick","current","tl","pause","restart","timeline","delay","set","autoAlpha","transformOrigin","immediateRender","fromTo","ease","duration","rotation","scale","console","log","stopColor","starspin","cta"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\n// import { useEffect } from 'react';\nimport { useLayoutEffect } from 'react';\n// import { useCallback } from 'react';\n\nimport { gsap } from 'gsap';\n// import * as PIXI from 'pixi.js';\n// import { PixiPlugin } from 'gsap/PixiPlugin';\n// import { render, Text } from '@inlet/react-pixi';\n// import { Application } from 'pixi.js';\n\n\nimport '../banners.scss';\nimport './NMPF_04852.scss';\n// import './fonts/fonts.css';\n\n\n//#region -------------------- IMPORTS: ASSETS --------------------\n\n// import bg from './images/bg.jpg';\n// import bg_ko from './images/bg_ko.png';\nimport skyline from './images/skyline.png';\n\nimport model from './images/model.png';\nimport bottle from './images/bottle.png';\n\n// import logo_NMPF from './images/logo.png';\nimport logo_NM from './images/logo_NM.png';\nimport logo_PF from './images/logo_PF.png';\n\nimport tag from './images/tag.png';\n\n// import cta from './images/btn_buy.png';\nimport cta from './images/btn_buy.svg';\n\n// import starspin from './images/starspin.png';\nimport starspin from './images/starspin.svg';\n// import starspin_mask_01 from './images/starspin_mask_01.png';\n// import starspin_mask_02 from './images/starspin_mask_02.png';\n\n// import particle from './images/sparkle.png';\n\n//#endregion -------------------- IMPORTS: ASSETS --------------------\n\n\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n\n\n//#endregion ==================== IMPORTS ====================\n\n\nexport default function NMPF_04852() {\n\n    //#region ==================== ASSETS _Ref ====================\n\n    // const bg_Ref = useRef(null);\n    // const bg_ko_Ref = useRef(null);\n    const skyline_Ref = useRef(null);\n\n    const model_Ref = useRef(null);\n    const model_mask_Ref = useRef(null);\n\n    const bottle_Ref = useRef(null);\n\n    // const logo_NMPF_Ref = useRef(null);\n    const logo_NM_Ref = useRef(null);\n    const logo_PF_Ref = useRef(null);\n\n    const tag_Ref = useRef(null);\n\n    const cta_Ref = useRef(null);\n\n    const starspin_Ref = useRef(null);\n    const starspin01_Ref = useRef(null);\n    const starspin02_Ref = useRef(null);\n\n    const starspin_mask_Ref = useRef(null);\n    // const starspin_mask_01_Ref = useRef(null);\n    // const starspin_mask_02_Ref = useRef(null);\n\n    const particleContainer_Ref = useRef(null);\n    const clickTag_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n    //#region ==================== ANIMATION DURATIONs ====================\n\n    // const staggerDuration = 0.125;\n    // const staggerDelay = 0.0375;\n\n    // const animDuration00 = 0.125;\n    // const animDuration00_5 = 0.50;\n    // const animDuration01 = 1.00;\n    // const animDuration01_25 = 1.25;\n    const animDuration01_5 = 1.50;\n    const animDuration02 = 2.00;\n    // const animDuration02_5 = 2.50;\n    const animDuration03 = 3.00;\n    // const animDuration03_5 = 3.50;\n    // const animDuration04 = 4.00;\n    // const animDuration04_5 = 4.50;\n    const animDuration05 = 5.00;\n    // const animDuration05_5 = 5.50;\n    // const animDuration06 = 6.00;\n    // const animDuration06_5 = 6.50;\n    // const animDuration07 = 7.00;\n    // const animDuration07_5 = 7.50;\n    // const animDuration08 = 8.00;\n    // const animDuration08_5 = 8.50;\n    // const animDuration09 = 9.00;\n    // const animDuration09_5 = 9.50;\n    // const animDuration10 = 10.00;\n\n    //#endregion ==================== ANIMATION DURATIONs ====================\n\n\n    //#region ==================== FUNCTIONS ====================\n\n    //#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n\n    // function splitText(thisContainer, thisCopy, thisClassname) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n\n    //     const thisCopyResponse = thisCopy.split('');\n    //     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n\n    //     for (let c = 0; c < thisCopyResponse.length; c++) {\n\n    //         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n\n    //         const node = document.createElement('p');\n    //         node.className = thisClassname;\n\n    //         if (thisCopyResponse[c] !== ' ') {\n    //             node.innerHTML = thisCopyResponse[c];\n    //             thisContainer.append(node);\n    //         } else {\n    //             // console.log('This is a space!');\n    //             node.innerHTML = '&nbsp;';\n    //             thisContainer.append(node);\n    //         }\n    //     }\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n    // function randRange(min, max) {\n    //     let thisIndex = min + Math.round(Math.random() * (max - min));\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n    // function randRange2(min, max) {\n    //     let thisIndex = min + Math.random() * (max - min);\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n\n    //#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n    // const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n    //     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n\n    //     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n\n    // }, []);\n\n    //#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n\n    //#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n    //#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n\n    // const removeAllChildNodes = useCallback((parent) => {\n    function removeAllChildNodes(parent) {\n\n        // console.log('');\n        // console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n\n        // console.log('parent = ' + parent);\n        // console.log('parent.id = ' + parent.id);\n\n        while (parent.firstChild) {\n            parent.removeChild(parent.firstChild);\n        }\n    }\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n    // const removeParticle = useCallback((thisParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n    //     // console.log('NOTE: the error check below does not work 100%');\n    //     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n\n    //     // console.log('thisParticle = ' + thisParticle);\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n\n    //     if (thisParticle == null) {\n    //         console.log('***** NOPE! *****');\n    //         console.error();\n    //     } else {\n    //         thisParticle.parentNode.removeChild(thisParticle);\n    //     }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n    // // const particleAnim = useCallback((thisParticle) => {\n    // const particleAnim = useCallback((thisContainer) => {\n\n    //     console.log('');\n    //     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n    //     // console.log('thisParticle.width = ' + thisParticle.width);\n\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n\n    //     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n    //     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n\n    //     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n\n\n    //     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n    //     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n\n    //     // gsap.to(bottle_Ref.current, {\n    //     //     duration: 1,\n    //     //     pixi: {\n    //     //         scale: 0.2,\n    //     //         rotation: 60\n    //     //     }\n    //     // });\n\n    //     console.log('thisContainer.id = ' + thisContainer.id);\n\n    //     const speed = 0.25;\n    //     const gravity = -200;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         const animAngle = Math.random() * Math.PI * 2;\n    //         console.log('animAngle = ' + animAngle);\n\n    //         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n    //         //     alpha: 0,\n\n    //         //     // scaleX: thisScale,\n    //         //     // scaleY: thisScale,\n\n    //         //     physics2D: {\n    //         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n    //         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n    //         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n    //         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n    //         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n    //         //         // velocity: speed,\n    //         //         gravity: gravity\n    //         //     }\n\n    //         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n    //         //     //x:Math.cos(animAngle) * length * 6, \n    //         //     //y:Math.sin(animAngle) * length * 6\n\n    //         // }, 0);\n\n    //     }\n    // }, []);\n    // // }, [removeParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n    // const positionParticle = useCallback((thisContainer) => {\n    // // const positionParticle = useCallback((thisContainer, particleWidth) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n\n\n    //     // const displacementFactor = 0.5;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         // console.log('');\n    //         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n    //         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n    //         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n    //         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n\n\n    //         // const thisX = -150;\n    //         // const thisY = 125;\n\n    //         const thisX = -(thisContainer.children[i].width * 0.5);\n    //         const thisY = thisContainer.offsetHeight * 0.5;\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n\n\n    //         // const thisScale = 1;\n    //         // const thisScale = 0.125;\n    //         const thisScale = randRange(5, 15) / 100;\n\n    //         // console.log('thisScale = ' + thisScale);\n    //         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n\n\n    //         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n    //         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n    //     }\n\n    //     // particleAnim(thisContainer.children[i]);\n    //     particleAnim(thisContainer);\n\n    // // }, []);\n    // }, [particleAnim]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n    // const addParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particle;\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'particle_' + i;\n    //         thisParticle.alt = 'particle_' + i;\n\n    //         thisContainer.append(thisParticle);\n\n    //         // console.log('thisParticle.width = ' + thisParticle.width);\n    //     }\n\n\n    //     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n\n    //     // let particleWidth = 0;\n\n    //     thisContainer.lastChild.onload = function () {\n\n    //         // particleWidth = thisContainer.lastChild.width;\n    //         // console.log('particleWidth = ' + particleWidth);\n\n    //         positionParticle(thisContainer);\n    //         // positionParticle(thisContainer, particleWidth);\n    //     }\n\n    //     // positionParticle(thisContainer);\n\n    // // }, []);\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n    // const addRandomParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     const particles = [\n    //         flower_01,\n    //         flower_02,\n    //         flower_03,\n    //         flower_04,\n    //         flower_05\n    //     ];\n\n    //     // console.log('particles = ' + particles);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         let particleIndex = randRange(0, 4);\n\n    //         // console.log('particleIndex = ' + particleIndex);\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particles[particleIndex];\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'flower' + i;\n    //         thisParticle.alt = 'flower' + i;\n\n    //         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n    //         // console.log('thisParticle = ' + thisParticle.id);\n\n    //         thisContainer.append(thisParticle);\n    //     }\n\n    //     positionParticle(thisContainer);\n\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    // const addPixi = useCallback((thisContainer, numParticle) => {\n\n    //     console.log('');\n    //     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n\n    //     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     // Setup PIXI app\n    //     const app = new Application({\n    //         width: 300,\n    //         height: 250,\n    //         backgroundColor: 0x10bb99,\n    //         view: document.getElementById('container'),\n    //     })\n\n    //     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n    //     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n\n    //     // //DEFINE VARIABLES\n    //     // // let vw = window.innerWidth;\n    //     // // let vh = window.innerHeight;\n    //     // let vw = 300;\n    //     // let vh = 250;\n    //     // // let count = 0;\n\n    //     // //INITIALIZE PIXI\n    //     // const app = new PIXI.Application(vw, vh, {\n    //     //     autoResize: true,\n    //     //     resolution: devicePixelRatio || 1,\n    //     //     antialias: true, \n    //     //     transparent: true\n    //     // });\n\n    //     // thisContainer.appendChild(app.view);\n\n\n    //     // thisContainer.lastChild.onload = function () {\n\n    //     //     for (let i = 0; i < numParticle; i++) {\n\n    //     //         const thisParticle = new Image();\n    //     //         thisParticle.src = particle;\n    //     //         thisParticle.key = i;\n    //     //         thisParticle.className = 'particle';\n    //     //         thisParticle.id = 'particle_' + i;\n    //     //         thisParticle.alt = 'particle_' + i;\n\n    //     //         // app.append(thisParticle);\n    //     //         app.stage.addChild(thisParticle);\n\n    //     //         console.log('thisParticle.width = ' + thisParticle.width);\n    //     //     }\n    //     // }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    //#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n\n    //#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    function handleClick() {\n    // const handleClick = useCallback(() => {\n\n        // console.log('');\n        // console.log('------------------------- handleClick() -------------------------');\n\n        removeAllChildNodes(particleContainer_Ref.current);\n\n        tl.pause(0);\n        tl.restart();\n    }\n    // }, [tl]);\n\n    //#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    //#endregion ==================== FUNCTIONS ====================\n\n\n\n    //#region ==================== useEffect / useLayoutEffect ====================\n\n    // const numParticle = 40;\n\n    const tl = gsap.timeline({ delay: 0 });\n\n\n    // useEffect(() => {\n    useLayoutEffect(() => {\n\n        // addParticle(particleContainer_Ref.current, numParticle);\n        // addRandomParticle(particleContainer_Ref.current, numParticle);\n        // addPixi(particleContainer_Ref.current, numParticle);\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            //#region -------------------- autoAlpha --------------------\n\n            // .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([bg_ko_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([skyline_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([model_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([model_mask_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            .set([bottle_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([logo_NMPF_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([logo_NM_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([logo_PF_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            .set([tag_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            .set([cta_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([starspin_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([starspin_mask_01_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([starspin_mask_02_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([clickTag_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            //#endregion -------------------- autoAlpha --------------------\n\n\n            //#region -------------------- SET TRANSFORMS --------------------\n\n            //#region -------------------- SET TRANSFORM ORIGiNS --------------------\n\n            // .set([bottle_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set([model_mask_Ref.current], { transformOrigin: '50% 50%', immediateRender: true }, 'frame00')\n            // .set([starspin_Ref.current.children], { transformOrigin: '50% 50%', immediateRender: true }, 'frame00')\n            .set([starspin01_Ref.current, starspin02_Ref.current], { transformOrigin: '50% 50%', immediateRender: true }, 'frame00')\n            // .set([bg_Ref.current], { transformOrigin: '50% 25%', immediateRender: true }, 'frame00')\n\n            //#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n\n\n            //#region -------------------- FRAME01 --------------------\n\n            .set([starspin01_Ref.current, starspin02_Ref.current], { autoAlpha: 0.25 }, 'frame00')\n\n            // .set([model_mask_Ref.current], { scale: 5 }, 'frame00')\n            // .set([copy01_Ref.current], { x: -73.75, y: 85.5, scale: 0.529411764705882 }, 'frame00')\n            // .set([LOGO_VLJref.current], { x: -72.5, y: 230, scale: 0.558823529411765 }, 'frame00')\n            // .set([copy01_Ref.current, LOGO_VLJref.current], { x: 0, y: 0, scale: 1 }, 'frame00')\n\n            //#endregion -------------------- FRAME01 --------------------\n\n            //#endregion -------------------- SET TRANSFORMS --------------------\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n\n            .fromTo([starspin_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration01_5 }, 'frame01 +=0')\n\n            // .staggerTo(starspin_Ref.current.children, animDuration03, { cycle: { rotation: ['20', '-20'] }, ease: 'none', delay: 0.5 }, 'frame01 +=0')\n            // .to([starspin_Ref.current.children], { duration: animDuration03, rotation: [20, -20], ease: 'none', stagger: 0.5 }, 'frame01 +=0')\n\n            .fromTo([starspin01_Ref.current], { rotation: -20 }, { rotation: 0, ease: 'none', duration: animDuration05 }, 'frame01 +=0')\n            .fromTo([starspin02_Ref.current], { rotation: 20 }, { rotation: 0, ease: 'none', duration: animDuration05 }, 'frame01 +=0')\n\n            .fromTo([model_mask_Ref.current], { scale: 0 }, { scale: 5, ease: 'power3.out', duration: animDuration03 }, 'frame01 +=1.25')\n\n            .fromTo([bottle_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=2.25')\n            .fromTo([tag_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=2.5')\n\n            .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=3')\n\n            // .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [copy01_Ref.current, -73.75, 85.5, 0.529411764705882, 0] }, 'frame01 +=1.5')\n\n            //#endregion ==================== FRAME 01 ====================\n\n\n            //#region ==================== FRAME 02 ====================\n\n            // .to([copy01_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n\n            // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n\n            //#endregion ==================== FRAME 02 ====================\n\n\n            //#region ==================== FRAME 03 ====================\n\n            // .to([LOGO_VLJref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [LOGO_VLJref.current, -72.5, 230, 0.558823529411765, 0] }, 'frame03 +=0.5')\n\n            // .fromTo([copy02_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame03 +=0.5')\n\n            //#endregion ==================== FRAME 03 ====================\n\n\n            //#region ==================== FRAME 04 ====================\n\n            // .set([copy01_Ref.current], { color: '#000000' }, 'frame04')\n\n            // .set([LOGO_VLJ_noir_w_Ref.current], { autoAlpha: 0 }, 'frame04')\n            // .set([LOGO_VLJ_noir_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n            // .set([LOGO_VLJ_jc_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n\n            // .to([copy02_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n\n            // .fromTo([model_mask_Ref.current], { y: -1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n            // .fromTo([model_SVG_Ref.current], { y: 1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n\n            // .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.5')\n            // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.75')\n            // .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=1')\n\n            // // .staggerFromTo(copy01_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=1.5')\n            // // .staggerFromTo(copy02_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=4')\n\n            //#endregion ==================== FRAME 04 ====================\n        ;\n\n        //tl.duration(1.5);\n        console.log('');\n        console.log('tl timing = ' + tl.duration() + ' secs');\n\n    // }, []);\n    }, [tl]);\n    // }, [tl, addParticle]);\n    // }, [tl, addRandomParticle]);\n    // }, [tl, addRandomParticle, nextPos]);\n    // }, [tl, addPixi]);\n\n    //#endregion ==================== useEffect / useLayoutEffect ====================\n\n\n    return (\n        <div className='banner300x250 nmpf_04852' id='nmpf_04852ID'>\n            {/* <h1>NMPF_04852 300x250 Component</h1> */}\n  \n        {/* #region -------------------- SVG: starspin (masks) -------------------- */}\n\n            <svg className='starspinDiv' id='starspinDivID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={starspin_Ref}>\n\n                <defs>\n\n                    <radialGradient id='maskGrad_starspinID' gradientUnits='userSpaceOnUse' r='160'>\n                        <stop offset='0.25' style={{ stopColor: '#FFFFFF' }} />\n                        <stop offset='1' style={{ stopColor: '#000000' }} />\n                    </radialGradient>\n\n                    <mask id='mask_starspinID'>\n                        <rect className='class_mask' fill='url(#maskGrad_starspinID)' x='0' y='0' width='300' height='250' />\n                    </mask>\n\n                </defs>\n\n                {/* <g mask='url(#mask_starspinID)'> */}\n                <g mask='url(#mask_starspinID)' ref={starspin_mask_Ref}>\n                    {/* <image href={starspin} x='0' y='-10' width='300' height='322.8515625' /> */}\n                    <image href={starspin} x='0' y='-10' width='300' height='322.8515625' ref={starspin01_Ref} />\n                    <image href={starspin} x='0' y='-10' width='300' height='322.8515625' ref={starspin02_Ref} />\n                </g>\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: starspin (masks) -------------------- */}\n\n\n            <div className='particleContainer' id='particleContainerID' ref={particleContainer_Ref}></div>\n\n            <img className='skyline' id='skylineID' src={skyline} alt='skyline' ref={skyline_Ref} />\n\n            {/* <img className='logo_NMPF' id='logo_PFID' src={logo_PF} alt='logo_PF' ref={logo_PF_Ref} /> */}\n\n            {/* <img className='model' id='modelDiv' src={model} alt='model' ref={model_Ref} /> */}\n\n        {/* #region -------------------- SVG: model (masks) -------------------- */}\n\n            <svg className='modelDiv' id='modelDivID' version='1.1' baseProfile='full' width='92.5' height='225' space='preserve' ref={model_Ref}>\n            {/* <svg className='modelDiv' id='modelDivID' version='1.1' baseProfile='full' x='50' width='165' height='225' space='preserve' ref={model_Ref}> */}\n\n                <defs>\n\n                    <radialGradient id='maskGrad_modelID' cx='50%' cy='50%' r='50%' fx='50%' fy='50%'>\n                        <stop offset='0.25' style={{ stopColor: '#FFFFFF' }} />\n                        <stop offset='1' style={{ stopColor: '#000000' }} />\n                    </radialGradient>\n\n                    <mask id='mask_modelID'>\n                        <rect className='class_mask' fill='url(#maskGrad_modelID)' x='36.25' y='0' width='92.5' height='225' ref={model_mask_Ref} />\n                    </mask>\n\n                </defs>\n\n                <g mask='url(#mask_modelID)'>\n                    <image href={logo_PF} x='0' y='0' width='165' height='50' ref={logo_PF_Ref} />\n                    <image href={model} x='32.25' y='15' width='92.5' height='225' />\n                    <image href={logo_NM} x='0' y='0' width='165' height='50' ref={logo_NM_Ref} />\n                </g>\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: model (masks) -------------------- */}\n\n            {/* <img className='logo_NMPF' id='logo_NMID' src={logo_NM} alt='logo_NM' ref={logo_NM_Ref} /> */}\n\n\n            <img src={bottle} className='bottle' id='bottleID' alt='bottle' ref={bottle_Ref} />\n            <img src={tag} className='tag' id='tagID' alt='bottle' ref={tag_Ref} />\n\n            <img src={cta} className='cta' id='ctaID' alt='cta' ref={cta_Ref} />\n\n            {/* <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={() => handleClick()}></div> */}\n            <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={handleClick}></div>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}