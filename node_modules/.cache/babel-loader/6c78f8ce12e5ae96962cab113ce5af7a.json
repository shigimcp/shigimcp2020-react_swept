{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/components/Work_MiMi.jsx\";\n//#region ==================== IMPORTS ====================\nimport React from 'react'; // import Masonry from 'react-responsive-masonry'\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\nimport '../stylesheets/Work.scss'; // -------------------- IMPORTS: DATA --------------------\n\nimport work from '../data/json/work_json/work_mimi.json';\nconsole.log('');\nconsole.log('==========  Work_MiMi.jsx  ==========');\nconsole.log('work_mimi:');\nconsole.log(work); //#endregion ==================== IMPORTS ====================\n//#region ==================== WorkMiMi ====================\n// const remoteLoc = 'https://www.shigimcp.com/img/';\n// const remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020/img/';\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/'; //#region -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n// function WorkItem(props) {\n//     return (\n//         <div className='workItem'>\n//             <table>\n//                 <tbody>\n//                     <tr>\n//                         <td className='workImage'><img className='slide' src={remoteLoc + props.album_id + '/sl/' + props.img_src} alt={'employer: ' + props.employer} /></td>\n//                         <td className='workProp'>\n//                             key[Proxy] = <br />\n//                             album_id = <br />\n//                             img_src = <br />\n//                             caption = <br />\n//                             format = <br />\n//                             format_src = <br />\n//                             link = <br />\n//                             cta = <br />\n//                             alert = <br />\n//                             mwidth = <br />\n//                             mheight = <br />\n//                         </td>\n//                         <td className='workValue'>\n//                             {props.keyProxy}<br />\n//                             {props.album_id}<br />\n//                             {props.img_src}<br />\n//                             {props.caption}<br />\n//                             {props.format}<br />\n//                             {props.format_src}<br />\n//                             {props.link}<br />\n//                             {props.cta}<br />\n//                             {props.alert}<br />\n//                             {props.mwidth}<br />\n//                             {props.mheight}<br />\n//                         </td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }\n// function WorkList() {\n//     const workItems = work.map((workImage) =>\n//         <WorkItem\n//             key={workImage.album_id + workImage.image_index}\n//             keyProxy={workImage.album_id + '_' + workImage.image_index}\n//             album_id={workImage.album_id}\n//             img_src={workImage.src}\n//             caption={workImage.caption}\n//             format={workImage.format}\n//             format_src={workImage.format_src}\n//             link={workImage.link}\n//             cta={workImage.cta}\n//             alert={workImage.alert}\n//             mwidth={workImage.mwidth}\n//             mheight={workImage.mheight}\n//         />\n//     );\n//     return (\n//         <div className='workList'>\n//             {workItems}\n//         </div>\n//     );\n// }\n//#endregion -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n//#region -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\nfunction WorkList() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      768: 1,\n      1024: 2,\n      1920: 3,\n      2560: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    gutter: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workItem\",\n    key: workImage.album_id + workImage.image_index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // key={workImage.album_id + workImage.image_index}\n    className: \"masonryImg\",\n    src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n    alt: 'album_id: ' + workImage.album_id + workImage.image_index // onClick={() => navShow.reverse()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    format: \"MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }), \"album_index = \", workImage.album_index, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 70\n    }\n  }), \"album_id = \", workImage.album_id, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 64\n    }\n  }), \"image_index = \", workImage.image_index, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 70\n    }\n  }), \"src = \", workImage.src, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 54\n    }\n  }), \"caption = \", workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 62\n    }\n  }), \"date = \", workImage.date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 56\n    }\n  }), \"format = \", workImage.format, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 60\n    }\n  }), \"format_src = \", workImage.format_src, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 68\n    }\n  }), \"link = \", workImage.link, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 56\n    }\n  }), \"link2 = \", workImage.link2, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 58\n    }\n  }), \"cta = \", workImage.cta, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 54\n    }\n  }), \"alert = \", workImage.alert, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 58\n    }\n  }), \"mwidth = \", workImage.mwidth, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 60\n    }\n  }), \"mheight = \", workImage.mheight)))));\n} //#endregion -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n//#endregion ==================== WorkMiMi ====================\n\n\nexport const WorkMiMi = () => {\n  return /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/components/Work_MiMi.jsx"],"names":["React","Masonry","ResponsiveMasonry","Moment","work","console","log","remoteLoc","WorkList","workImage","album_id","image_index","src","caption","date","album_index","format","format_src","link","link2","cta","alert","mwidth","mheight","WorkMiMi"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n\n// import Masonry from 'react-responsive-masonry'\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'\nimport Moment from 'react-moment';\n\nimport '../stylesheets/Work.scss';\n\n// -------------------- IMPORTS: DATA --------------------\n\nimport work from '../data/json/work_json/work_mimi.json';\n\nconsole.log('');\nconsole.log('==========  Work_MiMi.jsx  ==========');\nconsole.log('work_mimi:');\nconsole.log(work);\n\n//#endregion ==================== IMPORTS ====================\n\n\n//#region ==================== WorkMiMi ====================\n\n// const remoteLoc = 'https://www.shigimcp.com/img/';\n// const remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020/img/';\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\n\n//#region -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n\n// function WorkItem(props) {\n\n//     return (\n//         <div className='workItem'>\n//             <table>\n//                 <tbody>\n//                     <tr>\n//                         <td className='workImage'><img className='slide' src={remoteLoc + props.album_id + '/sl/' + props.img_src} alt={'employer: ' + props.employer} /></td>\n//                         <td className='workProp'>\n//                             key[Proxy] = <br />\n//                             album_id = <br />\n//                             img_src = <br />\n//                             caption = <br />\n//                             format = <br />\n//                             format_src = <br />\n//                             link = <br />\n//                             cta = <br />\n//                             alert = <br />\n//                             mwidth = <br />\n//                             mheight = <br />\n//                         </td>\n//                         <td className='workValue'>\n//                             {props.keyProxy}<br />\n//                             {props.album_id}<br />\n//                             {props.img_src}<br />\n//                             {props.caption}<br />\n//                             {props.format}<br />\n//                             {props.format_src}<br />\n//                             {props.link}<br />\n//                             {props.cta}<br />\n//                             {props.alert}<br />\n//                             {props.mwidth}<br />\n//                             {props.mheight}<br />\n//                         </td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }\n\n// function WorkList() {\n\n//     const workItems = work.map((workImage) =>\n//         <WorkItem\n//             key={workImage.album_id + workImage.image_index}\n//             keyProxy={workImage.album_id + '_' + workImage.image_index}\n//             album_id={workImage.album_id}\n//             img_src={workImage.src}\n//             caption={workImage.caption}\n//             format={workImage.format}\n//             format_src={workImage.format_src}\n//             link={workImage.link}\n//             cta={workImage.cta}\n//             alert={workImage.alert}\n//             mwidth={workImage.mwidth}\n//             mheight={workImage.mheight}\n//         />\n//     );\n\n//     return (\n//         <div className='workList'>\n//             {workItems}\n//         </div>\n//     );\n// }\n\n//#endregion -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n\n\n//#region -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\nfunction WorkList() {\n\n    return (\n        <div className='workList'>\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 960: 1, 1366: 2, 3200: 3 }}> */}\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 768: 1, 1366: 2, 1920: 3 }}> */}\n            <ResponsiveMasonry columnsCountBreakPoints={{ 768: 1, 1024: 2, 1920: 3, 2560: 4 }}>\n                <Masonry gutter='50px'>\n                    <div className='workItem' key={workImage.album_id + workImage.image_index}>\n\n                        <img\n                            // key={workImage.album_id + workImage.image_index}\n                            className='masonryImg'\n                            src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                            alt={'album_id: ' + workImage.album_id + workImage.image_index}\n                        // onClick={() => navShow.reverse()}\n                        />\n\n                        {/* <BSPS_26897 /> */}\n\n                        <p>\n                            {/* <p key={'descr' + workImage.album_id + workImage.image_index}> */}\n                            {workImage.caption}<br />\n                            <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n                            {/* {workImage.link} */}\n\n                            <br />\n\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                        </p>\n\n                    </div>\n                </Masonry>\n            </ResponsiveMasonry>\n        </div>\n    )\n}\n\n//#endregion -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\n//#endregion ==================== WorkMiMi ====================\n\n\nexport const WorkMiMi = () => {\n\n    return (\n        <WorkList />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}