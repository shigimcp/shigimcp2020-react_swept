{"ast":null,"code":"import _slicedToArray from\"/Users/shigimcp_1215/Sites/shigimcp2020-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//#region ==================== IMPORTS ====================\nimport React from'react';import{useRef}from'react';import{useEffect}from'react';import{useState}from'react';import Masonry,{ResponsiveMasonry}from'react-responsive-masonry';import Moment from'react-moment';import{gsap}from'gsap';import'../stylesheets/Work.scss';//#region -------------------- IMPORTS: GSAP BANNERS --------------------\nimport EAAR_18951 from'../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';import NMPF_04852 from'../images/ea/banners/CR_4852_NMPF_US_Walmart_300x250/NMPF_04852';import NMMN_11155 from'../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155';import JCNR_07074 from'../images/ea/banners/CR_7074_JC_VNOIR_2013_AU_300x600/JCNR_07074';import BSPS_26897 from'../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';import NMTG_26903 from'../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';import JCVR_26963 from'../images/ea/banners/26963_JC_VIVA_ROSE_GWP_PR_Walgreens_300x250/JCVR_26963';import BCBG_02342 from'../images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342';//#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n//#region -------------------- IMPORTS: DATA --------------------\n// import work from '../data/MyData';\nimport work from'../data/json/work_json/work_ea.json';//#endregion -------------------- IMPORTS: DATA --------------------\n//#endregion ==================== IMPORTS ====================\n//#region ==================== CONSTANTS ====================\nvar remoteLoc='https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';var getWidth=function getWidth(){return window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;};//#endregion ==================== CONSTANTS ====================\n//#region ==================== FUNCTION: workList() ====================\nfunction WorkList(){//#region -------------------- AVAILABLE GSAP BANNERS --------------------\nvar banners={EAAR_18951:EAAR_18951,NMPF_04852:NMPF_04852,NMMN_11155:NMMN_11155,JCNR_07074:JCNR_07074,BSPS_26897:BSPS_26897,NMTG_26903:NMTG_26903,JCVR_26963:JCVR_26963,BCBG_02342:BCBG_02342};//#endregion -------------------- AVAILABLE GSAP BANNERS --------------------\n//#region -------------------- ASSETS Ref --------------------\nvar workItemRef=useRef(null);var masonryImgRef=useRef(null);var importContainerRef=useRef(null);// const importedContentRef = useRef(null);\n//#endregion -------------------- ASSETS Ref --------------------\n//#region ==================== useState ====================\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),bannerShow=_useState2[0],setBannerShow=_useState2[1];// const [bannerShow, setBannerShow] = useState(BSPS_26897);\n// const [bannerShow, setBannerShow] = useState(NMMN_11155);\n// const [bannerShow, setBannerShow] = useState(NMTG_26903);\n// const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n// const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n// const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n// const [bannerKey, setBannerKey] = useState();\nvar _useState3=useState(getWidth()),_useState4=_slicedToArray(_useState3,2),windowWidth=_useState4[0],setWindowWidth=_useState4[1];console.log('');console.log('------------------------- useState -------------------------');console.log('windowWidth = '+windowWidth);//#endregion ==================== useState ====================\n//#region ==================== useEffect ====================\nuseEffect(function(){//#region -------------------- GSAP TIMELINE --------------------\nvar tl=gsap.timeline({delay:0});tl//#region ==================== INITIALIZE OBJECTS ====================\n//#region -------------------- SET TRANSFORM ORIGiNS --------------------\n// .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n// .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n.set(['.masonryImg'],{transformOrigin:'50% 0',immediateRender:true},'frame00')//#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n//#region -------------------- FRAME01 --------------------\n// .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n// .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n// .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n// .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n//#endregion -------------------- FRAME01 --------------------\n//#endregion ==================== INITIALIZE OBJECTS ====================\n//#region ==================== FRAME 01 ====================\n// .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n// .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n// .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n//#endregion ==================== FRAME 01 ====================\n//#region ==================== FRAME 02 ====================\n// .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n// .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n//#endregion ==================== FRAME 02 ====================\n//#region ==================== FRAME 03 ====================\n// .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n// .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n// .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n// #endregion ==================== FRAME 03 ====================\n;//#endregion -------------------- GSAP TIMELINE --------------------\n//#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\nvar moveBanner=function moveBanner(){// console.log('');\n// console.log('------------------------- moveBanner -------------------------');\n// console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n// console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\nvar bannerKey=document.getElementById('importContainerID').key;if(!bannerKey){console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');}else{// console.log('bannerKey = ' + bannerKey);\n// console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n// console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n//#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n// let thisBannerX = document.getElementById(bannerKey).x;\n// let thisBannerY = document.getElementById(bannerKey).y;\nvar thisBannerX=document.getElementById(bannerKey).offsetLeft;// let thisBannerY = document.getElementById(bannerKey).offsetTop;\n//#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n// let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n// let thisBannerY = document.getElementById(bannerKey).y - 250;\n// let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\nvar thisBannerY=document.getElementById(bannerKey).offsetTop-250;//#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n// let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n// let thisBannerH = document.getElementById(bannerKey).offsetHeight;\nvar thisBannerScale=document.getElementById(bannerKey).offsetWidth/300;// console.log('');\n// console.log('thisBannerX = ' + thisBannerX);\n// console.log('thisBannerY = ' + thisBannerY);\n// console.log('thisBannerW = ' + thisBannerW);\n// console.log('thisBannerH = ' + thisBannerH);\n// console.log('thisBannerScale = ' + thisBannerScale);\n//#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n//#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n// gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n// // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n// gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n// gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n// gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\ngsap.set([importContainerRef.current],{transformOrigin:'0 0',immediateRender:true});gsap.set([importContainerRef.current],{x:thisBannerX,y:thisBannerY,scale:thisBannerScale});//#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n}};//#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n//#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\nvar timeoutId=null;var resizeListener=function resizeListener(){// prevent execution of previous setTimeout\nclearTimeout(timeoutId);// change width from the state object after 150 milliseconds\ntimeoutId=setTimeout(function(){return setWindowWidth(getWidth());},150);// moveBanner: RELOCATE THE LOADED GSAP BANNER\nmoveBanner();};// set resize listener\nwindow.addEventListener('resize',resizeListener);//#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n// clean up function\nreturn function(){// // RELOCATE THE LOADED GSAP BANNER\n// moveBanner();\n// remove resize listener\nwindow.removeEventListener('resize',resizeListener);};},[]);// }, [animDuration02, animDuration04, animDuration05]);\n//#endregion ==================== useEffect ====================\n//#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\nfunction handleClick(thisWorkImage){// console.log('');\n// console.log('------------------------- handleClick(thisWorkImage) -------------------------');\n//#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n// console.log('handleClick: windowWidth = ' + windowWidth);\n// console.log('');\n// console.log('thisWorkImage.link = ' + thisWorkImage.link);\n// console.log('thisWorkImage.link2 = ' + thisWorkImage.link2);\n// console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n// console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n// console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n// console.log('');\n// console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n// console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n// console.log('');\n// console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n// console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n// console.log('');\n// // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n// // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n// console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n// // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n//#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n//#region ------------------------- Tryin' out sh*t... -------------------------\n//#region - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\nif(banners[thisWorkImage.link2]){var thisBanner=React.createElement(banners[thisWorkImage.link2]);// console.log('');\n// console.log('thisBanner = ' + thisBanner);\nsetBannerShow(thisBanner);// setBannerKey(thisBanner);\ndocument.getElementById('importContainerID').key=thisWorkImage.link2;// console.log('');\n// console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n// console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n}else{setBannerShow(thisWorkImage.link2+' THIS CONTENT COMING SOON!');// setBannerKey(thisWorkImage.link2);\n}//#endregion - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n//#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n// let thisBannerX = document.getElementById(thisWorkImage.link2).x;\n// let thisBannerY = document.getElementById(thisWorkImage.link2).y;\nvar thisBannerX=document.getElementById(thisWorkImage.link2).offsetLeft;// let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop;\n//#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n// let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n// let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250;\n// let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\nvar thisBannerY=document.getElementById(thisWorkImage.link2).offsetTop-250;//#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n// let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n// let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\nvar thisBannerScale=document.getElementById(thisWorkImage.link2).offsetWidth/300;//#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n//#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n// gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n// // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n// gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n// // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n// gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\ngsap.set([importContainerRef.current],{transformOrigin:'0 0',immediateRender:true});// gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\ngsap.set([importContainerRef.current],{x:thisBannerX,y:thisBannerY,scale:thisBannerScale});// gsap.set([importedContentRef.current], { width: thisBannerW, height: thisBannerH });\n// gsap.set([importedContentRef.current.children[1]], { scale: thisBannerScale });\n// gsap.set([importedContentRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n//#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n//#endregion ------------------------- Tryin' out sh*t... -------------------------\n}//#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n//#region ==================== RETURN (className='workList') ====================\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"workList\"},/*#__PURE__*/React.createElement(\"div\",{className:\"importContainer\",id:\"importContainerID\",ref:importContainerRef},bannerShow),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h2\",null,\"|*|*|*|*|*| \\xA0\\xA0\\xA0 Banners 000 \\xA0\\xA0\\xA0 |*|*|*|*|*|\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(ResponsiveMasonry,{columnsCountBreakPoints:{360:1,640:2,768:2,940:3,1640:4,1920:5,3000:6}},/*#__PURE__*/React.createElement(Masonry,{gutter:\"50px\"},work.filter(function(isBanner){return isBanner.format==='banner';}).map(function(workImage){return/*#__PURE__*/React.createElement(\"div\",{className:\"workItem\",key:workImage.album_id+workImage.image_index,ref:workItemRef},/*#__PURE__*/React.createElement(\"img\",{// key={workImage.album_id + workImage.image_index}\nclassName:\"masonryImg\"// id={workImage.album_id + workImage.image_index + '_imgID'}\n,id:workImage.link2,src:remoteLoc+workImage.album_id+'/sl/'+workImage.src,alt:'album_id: '+workImage.album_id+workImage.image_index,onClick:function onClick(){return handleClick(workImage);}// onClick={() => setBannerShow(workImage.link2)}\n// onClick={() => {\n//     handleClick(workImage);\n//     setBannerShow(workImage.link2);\n// }}\n,ref:masonryImgRef}),/*#__PURE__*/React.createElement(\"p\",{className:\"masonryInfo\",title:\"masonryInfoTitle\"},workImage.caption,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Moment,{format:\"MMM YYYY\"},workImage.date),/*#__PURE__*/React.createElement(\"br\",null)));}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"h2\",null,\"Web / Video\"),/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(ResponsiveMasonry,{columnsCountBreakPoints:{1024:1,1366:2,1920:3,3840:4}},/*#__PURE__*/React.createElement(Masonry,{gutter:\"50px\"},work.filter(function(isBanner){return isBanner.format!=='banner';}).map(function(workImage){return/*#__PURE__*/React.createElement(\"div\",{className:\"workItem\",key:'web'+workImage.album_id+workImage.image_index,ref:workItemRef},/*#__PURE__*/React.createElement(\"img\",{// key={'WV' + workImage.album_id + workImage.image_index}\nclassName:\"masonryImg\"// id={workImage.album_id + workImage.image_index + '_imgID'}\n,id:workImage.link2,src:remoteLoc+workImage.album_id+'/sl/'+workImage.src,alt:'album_id: '+workImage.album_id+workImage.image_index,onClick:function onClick(){return handleClick(workImage);},ref:masonryImgRef}),/*#__PURE__*/React.createElement(\"p\",{className:\"masonryInfo\",title:\"masonryInfoTitle\"},workImage.caption,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Moment,{format:\"MMM YYYY\"},workImage.date),/*#__PURE__*/React.createElement(\"br\",null)));}))));//#endregion ==================== RETURN (className='workList') ====================\n}//#endregion ==================== FUNCTION: workList() ====================\nexport var Work000=function Work000(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(WorkList,null));};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","useRef","useEffect","useState","Masonry","ResponsiveMasonry","Moment","gsap","EAAR_18951","NMPF_04852","NMMN_11155","JCNR_07074","BSPS_26897","NMTG_26903","JCVR_26963","BCBG_02342","work","remoteLoc","getWidth","window","innerWidth","document","documentElement","clientWidth","body","WorkList","banners","workItemRef","masonryImgRef","importContainerRef","bannerShow","setBannerShow","windowWidth","setWindowWidth","console","log","tl","timeline","delay","set","transformOrigin","immediateRender","moveBanner","bannerKey","getElementById","key","thisBannerX","offsetLeft","thisBannerY","offsetTop","thisBannerScale","offsetWidth","current","x","y","scale","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","handleClick","thisWorkImage","link2","thisBanner","createElement","filter","isBanner","format","map","workImage","album_id","image_index","src","caption","date","Work000"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\n\nimport { gsap } from 'gsap';\n\nimport '../stylesheets/Work.scss';\n\n\n//#region -------------------- IMPORTS: GSAP BANNERS --------------------\n\nimport EAAR_18951 from '../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';\nimport NMPF_04852 from '../images/ea/banners/CR_4852_NMPF_US_Walmart_300x250/NMPF_04852';\nimport NMMN_11155 from '../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155';\nimport JCNR_07074 from '../images/ea/banners/CR_7074_JC_VNOIR_2013_AU_300x600/JCNR_07074';\nimport BSPS_26897 from '../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';\nimport NMTG_26903 from '../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';\nimport JCVR_26963 from '../images/ea/banners/26963_JC_VIVA_ROSE_GWP_PR_Walgreens_300x250/JCVR_26963';\nimport BCBG_02342 from '../images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342';\n\n//#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n\n\n//#region -------------------- IMPORTS: DATA --------------------\n\n// import work from '../data/MyData';\nimport work from '../data/json/work_json/work_ea.json';\n\n//#endregion -------------------- IMPORTS: DATA --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\nconst getWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== FUNCTION: workList() ====================\n\nfunction WorkList() {\n\n    //#region -------------------- AVAILABLE GSAP BANNERS --------------------\n\n    const banners = {\n        EAAR_18951: EAAR_18951, \n        NMPF_04852: NMPF_04852, \n        NMMN_11155: NMMN_11155, \n        JCNR_07074: JCNR_07074, \n        BSPS_26897: BSPS_26897, \n        NMTG_26903: NMTG_26903, \n        JCVR_26963: JCVR_26963, \n        BCBG_02342: BCBG_02342, \n    };\n\n    //#endregion -------------------- AVAILABLE GSAP BANNERS --------------------\n\n\n\n    //#region -------------------- ASSETS Ref --------------------\n\n    const workItemRef = useRef(null);\n    const masonryImgRef = useRef(null);\n\n    const importContainerRef = useRef(null);\n    // const importedContentRef = useRef(null);\n\n    //#endregion -------------------- ASSETS Ref --------------------\n\n\n\n    //#region ==================== useState ====================\n\n    const [bannerShow, setBannerShow] = useState();\n\n    // const [bannerShow, setBannerShow] = useState(BSPS_26897);\n    // const [bannerShow, setBannerShow] = useState(NMMN_11155);\n    // const [bannerShow, setBannerShow] = useState(NMTG_26903);\n\n    // const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n    // const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n    // const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n    \n    // const [bannerKey, setBannerKey] = useState();\n\n\n    let [windowWidth, setWindowWidth] = useState(getWidth());\n\n    console.log('');\n    console.log('------------------------- useState -------------------------');\n    console.log('windowWidth = ' + windowWidth);\n\n    //#endregion ==================== useState ====================\n\n\n\n    //#region ==================== useEffect ====================\n\n    useEffect(() => {\n\n        //#region -------------------- GSAP TIMELINE --------------------\n\n        const tl = gsap.timeline({ delay: 0 });\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            //#region -------------------- SET TRANSFORM ORIGiNS --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            // .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set(['.masonryImg'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n\n            //#endregion -------------------- SET TRANSFORM ORIGiNS --------------------\n\n\n            //#region -------------------- FRAME01 --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n            // .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n            // .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n\n            // .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n\n            //#endregion -------------------- FRAME01 --------------------\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n            // .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n            // .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n\n            //#endregion ==================== FRAME 01 ====================\n\n\n            //#region ==================== FRAME 02 ====================\n\n            // .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n            // .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n\n            //#endregion ==================== FRAME 02 ====================\n\n\n            //#region ==================== FRAME 03 ====================\n\n            // .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n\n            // #endregion ==================== FRAME 03 ====================\n        ;\n\n        //#endregion -------------------- GSAP TIMELINE --------------------\n\n\n        //#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n        const moveBanner = () => {\n\n            // console.log('');\n            // console.log('------------------------- moveBanner -------------------------');\n\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n            let bannerKey = document.getElementById('importContainerID').key;\n\n\n            if (!bannerKey) {\n\n                console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');\n\n            } else {\n\n                // console.log('bannerKey = ' + bannerKey);\n                // console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n                // console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n\n\n                //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n                // let thisBannerX = document.getElementById(bannerKey).x;\n                // let thisBannerY = document.getElementById(bannerKey).y;\n\n                let thisBannerX = document.getElementById(bannerKey).offsetLeft;\n                // let thisBannerY = document.getElementById(bannerKey).offsetTop;\n\n                //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n                // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n                // let thisBannerY = document.getElementById(bannerKey).y - 250;\n\n                // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n                let thisBannerY = document.getElementById(bannerKey).offsetTop - 250;\n\n                //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n                // let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n                // let thisBannerH = document.getElementById(bannerKey).offsetHeight;\n\n                let thisBannerScale = document.getElementById(bannerKey).offsetWidth / 300;\n\n                // console.log('');\n                // console.log('thisBannerX = ' + thisBannerX);\n                // console.log('thisBannerY = ' + thisBannerY);\n                // console.log('thisBannerW = ' + thisBannerW);\n                // console.log('thisBannerH = ' + thisBannerH);\n                // console.log('thisBannerScale = ' + thisBannerScale);\n\n                //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n\n                //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n                // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n                // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n                // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n                // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n\n\n                // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n                gsap.set([importContainerRef.current], { transformOrigin: '0 0', immediateRender: true });\n                gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, scale: thisBannerScale });\n\n                //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n            }\n        }\n\n        //#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        let timeoutId = null;\n\n        const resizeListener = () => {\n\n            // prevent execution of previous setTimeout\n            clearTimeout(timeoutId);\n\n            // change width from the state object after 150 milliseconds\n            timeoutId = setTimeout(() => setWindowWidth(getWidth()), 150);\n\n            // moveBanner: RELOCATE THE LOADED GSAP BANNER\n            moveBanner();\n        };\n\n        // set resize listener\n        window.addEventListener('resize', resizeListener);\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n        // clean up function\n        return () => {\n            // // RELOCATE THE LOADED GSAP BANNER\n            // moveBanner();\n\n            // remove resize listener\n            window.removeEventListener('resize', resizeListener);\n        }\n\n    }, []);\n    // }, [animDuration02, animDuration04, animDuration05]);\n\n    //#endregion ==================== useEffect ====================\n\n\n\n    //#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n    function handleClick(thisWorkImage) {\n\n        // console.log('');\n        // console.log('------------------------- handleClick(thisWorkImage) -------------------------');\n\n\n        //#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n        // console.log('handleClick: windowWidth = ' + windowWidth);\n\n        // console.log('');\n        // console.log('thisWorkImage.link = ' + thisWorkImage.link);\n        // console.log('thisWorkImage.link2 = ' + thisWorkImage.link2);\n        // console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n        // console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n\n        // console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n\n        // console.log('');\n        // console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n        // console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n\n        // console.log('');\n        // console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n        // console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n\n        // console.log('');\n        // // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n        // // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n\n        // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n        // // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        //#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n\n        //#region ------------------------- Tryin' out sh*t... -------------------------\n\n        //#region - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n\n        if (banners[thisWorkImage.link2]) {\n\n            const thisBanner = React.createElement(banners[thisWorkImage.link2]);\n\n            // console.log('');\n            // console.log('thisBanner = ' + thisBanner);\n\n            setBannerShow(thisBanner);\n\n            // setBannerKey(thisBanner);\n            document.getElementById('importContainerID').key = thisWorkImage.link2;\n\n            // console.log('');\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        } else {\n            setBannerShow(thisWorkImage.link2 + ' THIS CONTENT COMING SOON!');\n            // setBannerKey(thisWorkImage.link2);\n        }\n\n        //#endregion - - - - - - - - - - - - - ASSIGN NEW BANNER - - - - - - - - - - - - -\n\n\n        //#region - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).y;\n\n        let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop;\n\n        //#region -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250;\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).offsetLeft + 1;\n        let thisBannerY = document.getElementById(thisWorkImage.link2).offsetTop - 250;\n\n        //#endregion -  -  -  -  -  -  -  -  - position compensation for elements above importContainer -  -  -  -  -  -  -  -  -\n\n        // let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n        // let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\n\n        let thisBannerScale = document.getElementById(thisWorkImage.link2).offsetWidth / 300;\n\n        //#endregion - - - - - - - - - - - - - CALCULATE NEW POSITION - - - - - - - - - - - - -\n\n\n        //#region - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n        // // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n        // // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n\n\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n        gsap.set([importContainerRef.current], { transformOrigin: '0 0', immediateRender: true });\n\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n        gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, scale: thisBannerScale });\n\n        // gsap.set([importedContentRef.current], { width: thisBannerW, height: thisBannerH });\n        // gsap.set([importedContentRef.current.children[1]], { scale: thisBannerScale });\n        // gsap.set([importedContentRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n\n        //#endregion - - - - - - - - - - - - - POSITION BANNER - - - - - - - - - - - - -\n\n        //#endregion ------------------------- Tryin' out sh*t... -------------------------\n\n    }\n\n    //#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n\n\n    //#region ==================== RETURN (className='workList') ====================\n\n    return (\n        <div className='workList'>\n\n            {/* width = {width}; */}\n\n            <div className='importContainer' id='importContainerID' ref={importContainerRef}>\n            {/* <div className='importContainer' id='importContainerID' key={bannerShow} ref={importContainerRef}> */}\n            {/* <div className='importContainer' id='importContainerID' key={bannerKey} ref={importContainerRef}> */}\n                {/* <div className='importedContent' ref={importedContentRef}> */}\n                    {bannerShow}\n                {/* </div> */}\n            </div>\n\n\n        {/* #region ------------------------- Banners ------------------------- */}\n\n            <section>\n                <hr />\n                <h2>|*|*|*|*|*| &nbsp;&nbsp;&nbsp; Banners 000 &nbsp;&nbsp;&nbsp; |*|*|*|*|*|</h2>\n                {/* \n                <p className='note'>\n                    I want to eventually make these images clickable to trigger GSAP banners like the ones above that were [re]built in React (because I couldn't get react-adobe-animate or html-loader to work).<br />\n                    Ideally, the GSAP banners will play in place like they do on this page: <a href='https://www.shigimcp.com/hilites.html' target='_new'>https://www.shigimcp.com/hilites.html</a>.\n                </p>\n                */}\n                <hr />\n            </section>\n\n            <ResponsiveMasonry columnsCountBreakPoints={{ 360: 1, 640: 2, 768: 2, 940: 3, 1640: 4, 1920: 5, 3000: 6 }}>\n                <Masonry gutter='50px'>\n\n                    {work.filter(isBanner => isBanner.format === 'banner').map((workImage) => (\n\n                        <div className='workItem' key={workImage.album_id + workImage.image_index} ref={workItemRef}>\n\n                            <img\n                                // key={workImage.album_id + workImage.image_index}\n                                className='masonryImg'\n                                // id={workImage.album_id + workImage.image_index + '_imgID'}\n                                id={workImage.link2}\n                                src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                onClick={() => handleClick(workImage)}\n                                // onClick={() => setBannerShow(workImage.link2)}\n                                // onClick={() => {\n                                //     handleClick(workImage);\n                                //     setBannerShow(workImage.link2);\n                                // }}\n\n                                ref={masonryImgRef}\n                            />\n\n                            <p className='masonryInfo' title='masonryInfoTitle'>\n                                {workImage.caption}<br />\n                                <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                            {/* \n                                <br />\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                link3 = {workImage.link3}<br />\n                                link4 = {workImage.link4}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                            */}\n\n                            </p>\n\n                        </div>\n                    ))}\n\n                </Masonry>\n            </ResponsiveMasonry>\n\n\n            <br /><br /><br /><br /><br />\n\n        {/* #endregion ------------------------- Banners ------------------------- */}\n\n\n        {/* #region ------------------------- Web / Video ------------------------- */}\n\n            <section>\n                <hr />\n                <h2>Web / Video</h2>\n                <hr />\n            </section>\n\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 960: 1, 1366: 2, 2040: 3 }}> */}\n            <ResponsiveMasonry columnsCountBreakPoints={{ 1024: 1, 1366: 2, 1920: 3, 3840: 4 }}>\n                <Masonry gutter='50px'>\n\n                    {work.filter(isBanner => isBanner.format !== 'banner').map((workImage) => (\n\n                        < div className = 'workItem' key = { 'web' + workImage.album_id + workImage.image_index } ref = { workItemRef } >\n\n                            <img\n                                // key={'WV' + workImage.album_id + workImage.image_index}\n                                className='masonryImg'\n                                // id={workImage.album_id + workImage.image_index + '_imgID'}\n                                id={workImage.link2}\n                                src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                onClick={() => handleClick(workImage)}\n\n                                ref={masonryImgRef}\n                            />\n\n                            <p className='masonryInfo' title='masonryInfoTitle'>\n                                {workImage.caption}<br />\n                                <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                            {/* \n                                <br />\n\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                link3 = {workImage.link3}<br />\n                                link4 = {workImage.link4}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                            */}\n\n                            </p>\n\n                        </div>\n                    ))}\n\n                </Masonry>\n            </ResponsiveMasonry>\n\n        {/* #endregion ------------------------- Web / Video ------------------------- */}\n\n        </div>\n    )\n\n    //#endregion ==================== RETURN (className='workList') ====================\n\n}\n\n//#endregion ==================== FUNCTION: workList() ====================\n\n\n\n\nexport const Work000 = () => {\n\n    return (\n        <>\n            <WorkList />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}