{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import { components, HOCComponents } from './components';\n\nimport { HOCComponents } from './components';\nimport './styles.css'; // class App extends React.PureComponent {\n\nclass WorkList extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DynamicComponent: null,\n      DynamicHOC: null\n    };\n\n    this.onHOCLangChange = e => {\n      const lang = e.target.getAttribute('data-lang'); // This loads different module when different language configuration is passed\n\n      this.setState({\n        DynamicHOC: HOCComponents[lang]\n      });\n    };\n  }\n\n  render() {\n    // const { DynamicComponent, DynamicHOC } = this.state;\n    const {\n      DynamicHOC\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Load dynamic HOC\", ' ', /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"(These HOC are fetched and rendered once you click the button)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"english\",\n      onClick: this.onHOCLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"Load english\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-lang\": \"spanish\",\n      onClick: this.onHOCLangChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \" \", ' ', \" Load spanish\", ' ', \" \")), DynamicHOC ? /*#__PURE__*/React.createElement(DynamicHOC, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 35\n      }\n    }) : null));\n  }\n\n} // const rootElement = document.getElementById('root');\n// ReactDOM.render(<App />, rootElement);\n\n\nexport const Work000 = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","ReactDOM","HOCComponents","WorkList","PureComponent","state","DynamicComponent","DynamicHOC","onHOCLangChange","e","lang","target","getAttribute","setState","render","Work000"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAO,cAAP,C,CAGA;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,aAA7B,CAA2C;AAAA;AAAA;AAAA,SAGvCC,KAHuC,GAG/B;AACJC,MAAAA,gBAAgB,EAAE,IADd;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAH+B;;AAAA,SAcvCC,eAduC,GAcrBC,CAAC,IAAI;AACnB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAb,CADmB,CAEnB;;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEL,aAAa,CAACQ,IAAD;AAA3B,OAAd;AACH,KAlBsC;AAAA;;AAoBvCI,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AAEA,wBACI,uDAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqB,GADrB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,mBAAU,SAAhC;AAA0C,MAAA,OAAO,EAAE,KAAKG,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,mBAAU,SAAhC;AAA0C,MAAA,OAAO,EAAE,KAAKA,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4E,GAA5E,mBAA8F,GAA9F,MAFJ,CANJ,EAYKD,UAAU,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoB,IAZnC,CApBJ,CADJ;AAsCH;;AA9DsC,C,CAiE3C;AACA;;;AAGA,OAAO,MAAMQ,OAAO,GAAG,MAAM;AAEzB,sBACI,uDACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAPM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import { components, HOCComponents } from './components';\nimport { HOCComponents } from './components';\n\nimport './styles.css';\n\n\n// class App extends React.PureComponent {\nclass WorkList extends React.PureComponent {\n// function WorkList() {\n\n    state = {\n        DynamicComponent: null,\n        DynamicHOC: null\n    };\n\n    // onComponentLangChange = e => {\n    //   const lang = e.target.getAttribute('data-lang');\n    //   // This loads different module when different language configuration is passed\n    //   this.setState({ DynamicComponent: components[lang] });\n    // };\n\n    onHOCLangChange = e => {\n        const lang = e.target.getAttribute('data-lang');\n        // This loads different module when different language configuration is passed\n        this.setState({ DynamicHOC: HOCComponents[lang] });\n    };\n\n    render() {\n        // const { DynamicComponent, DynamicHOC } = this.state;\n        const { DynamicHOC } = this.state;\n\n        return (\n            <>\n            {/* \n                <section>\n\n                    <p>\n                        Load dynamic component{' '}\n                        <small>(These components are fetched and rendered once you click thebutton)</small>\n                    </p>\n\n                    <p>\n                        <button type='button' data-lang='english' onClick={this.onComponentLangChange}>Load english</button>\n                        <button type='button' data-lang='spanish' onClick={this.onComponentLangChange}>Load spanish</button>\n                    </p>\n\n                    This component will be dynamically fetched and rendered on first usage\n                    {DynamicComponent ? <DynamicComponent /> : null}\n\n                </section>\n            */}\n\n                <section>\n                    <p>\n                        Load dynamic HOC{' '}\n                        <small>(These HOC are fetched and rendered once you click the button)</small>\n                    </p>\n\n                    <p>\n                        <button type='button' data-lang='english' onClick={this.onHOCLangChange}>Load english</button>\n                        <button type='button' data-lang='spanish' onClick={this.onHOCLangChange} > {' '} Load spanish{' '} </button>\n                    </p>\n\n                    {/* This hoc will be dynamically fetched and rendered on first usage */}\n                    {DynamicHOC ? <DynamicHOC /> : null}\n\n                </section>\n            </>\n        );\n    }\n}\n\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<App />, rootElement);\n\n\nexport const Work000 = () => {\n\n    return (\n        <>\n            <WorkList />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}