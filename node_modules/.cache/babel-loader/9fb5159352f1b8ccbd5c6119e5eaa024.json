{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_MiMi.jsx\";\n//#region ==================== IMPORTS ====================\nimport React from 'react'; // import Masonry from 'react-responsive-masonry'\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment'; // import '../stylesheets/Work.scss';\n//#region -------------------- IMPORTS: DATA --------------------\n// import work from '../data/MyData';\n\nimport work from '../data/json/work_json/work_mimi.json'; //#endregion -------------------- IMPORTS: DATA --------------------\n//#endregion ==================== IMPORTS ====================\n// console.log('');\n// console.log('=========================  Work_MiMi.jsx  =========================');\n//#region ==================== WorkMiMi ====================\n// const remoteLoc = 'https://www.shigimcp.com/img/';\n// const remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020/img/';\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/'; //#region -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n// function WorkItem(props) {\n//     return (\n//         <div className='workItem'>\n//             <table>\n//                 <tbody>\n//                     <tr>\n//                         <td className='workImage'><img className='slide' src={remoteLoc + props.album_id + '/sl/' + props.img_src} alt={'employer: ' + props.employer} /></td>\n//                         <td className='workProp'>\n//                             key[Proxy] = <br />\n//                             album_id = <br />\n//                             img_src = <br />\n//                             caption = <br />\n//                             format = <br />\n//                             format_src = <br />\n//                             link = <br />\n//                             cta = <br />\n//                             alert = <br />\n//                             mwidth = <br />\n//                             mheight = <br />\n//                         </td>\n//                         <td className='workValue'>\n//                             {props.keyProxy}<br />\n//                             {props.album_id}<br />\n//                             {props.img_src}<br />\n//                             {props.caption}<br />\n//                             {props.format}<br />\n//                             {props.format_src}<br />\n//                             {props.link}<br />\n//                             {props.cta}<br />\n//                             {props.alert}<br />\n//                             {props.mwidth}<br />\n//                             {props.mheight}<br />\n//                         </td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }\n// function WorkList() {\n//     const workItems = work.map((workImage) =>\n//         <WorkItem\n//             key={workImage.album_id + workImage.image_index}\n//             keyProxy={workImage.album_id + '_' + workImage.image_index}\n//             album_id={workImage.album_id}\n//             img_src={workImage.src}\n//             caption={workImage.caption}\n//             format={workImage.format}\n//             format_src={workImage.format_src}\n//             link={workImage.link}\n//             cta={workImage.cta}\n//             alert={workImage.alert}\n//             mwidth={workImage.mwidth}\n//             mheight={workImage.mheight}\n//         />\n//     );\n//     return (\n//         <div className='workList'>\n//             {workItems}\n//         </div>\n//     );\n// }\n//#endregion -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n//#region -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\nfunction WorkList() {\n  return (\n    /*#__PURE__*/\n    // <div className='workList'>\n    React.createElement(\"section\", {\n      className: \"masonrySection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n      columnsCountBreakPoints: {\n        768: 1,\n        1024: 2,\n        1920: 3,\n        2560: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Masonry, {\n      gutter: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, work.map((workImage, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"workItem\",\n      key: workImage.album_id + workImage.image_index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      // key={workImage.album_id + workImage.image_index}\n      className: \"masonryImg\",\n      src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n      alt: 'album_id: ' + workImage.album_id + workImage.image_index // onClick={() => navShow.reverse()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(Moment, {\n      format: \"MMM YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 84\n      }\n    }))))))) // </div>\n\n  );\n} //#endregion -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n//#endregion ==================== WorkMiMi ====================\n\n\nexport const WorkMiMi = () => {\n  return /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_MiMi.jsx"],"names":["React","Masonry","ResponsiveMasonry","Moment","work","remoteLoc","WorkList","map","workImage","i","album_id","image_index","src","caption","date","WorkMiMi"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,IAAkBC,iBAAlB,QAA2C,0BAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AAGA;AAEA;;AACA,OAAOC,IAAP,MAAiB,uCAAjB,C,CAEA;AAEA;AAGA;AACA;AAGA;AAEA;AACA;;AACA,MAAMC,SAAS,GAAG,0DAAlB,C,CAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;AAEA,SAASC,QAAT,GAAoB;AAEhB;AAAA;AACI;AACA;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,iBAAD;AAAmB,MAAA,uBAAuB,EAAE;AAAE,aAAK,CAAP;AAAU,cAAM,CAAhB;AAAmB,cAAM,CAAzB;AAA4B,cAAM;AAAlC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,GAAL,CAAS,CAACC,SAAD,EAAYC,CAAZ,kBACN;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAED,SAAS,CAACE,QAAV,GAAqBF,SAAS,CAACG,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AACI;AACA,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,GAAG,EAAEN,SAAS,GAAGG,SAAS,CAACE,QAAtB,GAAiC,MAAjC,GAA0CF,SAAS,CAACI,GAH7D;AAII,MAAA,GAAG,EAAE,eAAeJ,SAAS,CAACE,QAAzB,GAAoCF,SAAS,CAACG,WAJvD,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKH,SAAS,CAACK,OAFf,eAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvB,eAGI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BL,SAAS,CAACM,IAArC,CAHJ,eAGuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHvD,CAZJ,CADH,CADL,CADJ,CAJJ,CAFJ,CAoDI;;AApDJ;AAsDH,C,CAED;AAEA;;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CALM","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\n\n// import Masonry from 'react-responsive-masonry'\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'\nimport Moment from 'react-moment';\n\n// import '../stylesheets/Work.scss';\n\n\n//#region -------------------- IMPORTS: DATA --------------------\n\n// import work from '../data/MyData';\nimport work from '../data/json/work_json/work_mimi.json';\n\n//#endregion -------------------- IMPORTS: DATA --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n// console.log('');\n// console.log('=========================  Work_MiMi.jsx  =========================');\n\n\n//#region ==================== WorkMiMi ====================\n\n// const remoteLoc = 'https://www.shigimcp.com/img/';\n// const remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020/img/';\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\n\n//#region -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n\n// function WorkItem(props) {\n\n//     return (\n//         <div className='workItem'>\n//             <table>\n//                 <tbody>\n//                     <tr>\n//                         <td className='workImage'><img className='slide' src={remoteLoc + props.album_id + '/sl/' + props.img_src} alt={'employer: ' + props.employer} /></td>\n//                         <td className='workProp'>\n//                             key[Proxy] = <br />\n//                             album_id = <br />\n//                             img_src = <br />\n//                             caption = <br />\n//                             format = <br />\n//                             format_src = <br />\n//                             link = <br />\n//                             cta = <br />\n//                             alert = <br />\n//                             mwidth = <br />\n//                             mheight = <br />\n//                         </td>\n//                         <td className='workValue'>\n//                             {props.keyProxy}<br />\n//                             {props.album_id}<br />\n//                             {props.img_src}<br />\n//                             {props.caption}<br />\n//                             {props.format}<br />\n//                             {props.format_src}<br />\n//                             {props.link}<br />\n//                             {props.cta}<br />\n//                             {props.alert}<br />\n//                             {props.mwidth}<br />\n//                             {props.mheight}<br />\n//                         </td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         </div>\n//     )\n// }\n\n// function WorkList() {\n\n//     const workItems = work.map((workImage) =>\n//         <WorkItem\n//             key={workImage.album_id + workImage.image_index}\n//             keyProxy={workImage.album_id + '_' + workImage.image_index}\n//             album_id={workImage.album_id}\n//             img_src={workImage.src}\n//             caption={workImage.caption}\n//             format={workImage.format}\n//             format_src={workImage.format_src}\n//             link={workImage.link}\n//             cta={workImage.cta}\n//             alert={workImage.alert}\n//             mwidth={workImage.mwidth}\n//             mheight={workImage.mheight}\n//         />\n//     );\n\n//     return (\n//         <div className='workList'>\n//             {workItems}\n//         </div>\n//     );\n// }\n\n//#endregion -------------------- PLACEHOLDER: WorkItem(props), workList() --------------------\n\n\n//#region -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\nfunction WorkList() {\n\n    return (\n        // <div className='workList'>\n        <section className='masonrySection'>\n\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 960: 1, 1366: 2, 3200: 3 }}> */}\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 768: 1, 1366: 2, 1920: 3 }}> */}\n            <ResponsiveMasonry columnsCountBreakPoints={{ 768: 1, 1024: 2, 1920: 3, 2560: 4 }}>\n                <Masonry gutter='50px'>\n                    {work.map((workImage, i) => (\n                        <div className='workItem' key={workImage.album_id + workImage.image_index}>\n\n                            <img\n                                // key={workImage.album_id + workImage.image_index}\n                                className='masonryImg'\n                                src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                alt={'album_id: ' + workImage.album_id + workImage.image_index}\n                                // onClick={() => navShow.reverse()}\n                            />\n\n                            {/* <BSPS_26897 /> */}\n\n                            <p>\n                                {/* <p key={'descr' + workImage.album_id + workImage.image_index}> */}\n                                {workImage.caption}<br />\n                                <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n                                {/* {workImage.link} */}\n                        {/* \n                                <br />\n\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                        */}\n                            </p>\n\n                        </div>\n                    ))}\n                </Masonry>\n            </ResponsiveMasonry>\n\n        </section>\n        // </div>\n    )\n}\n\n//#endregion -------------------- MASONRY: REF https://cedricdelpoux.github.io/react-responsive-masonry/ --------------------\n\n//#endregion ==================== WorkMiMi ====================\n\n\nexport const WorkMiMi = () => {\n\n    return (\n        <WorkList />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}