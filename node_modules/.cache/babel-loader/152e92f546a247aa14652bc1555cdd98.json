{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342.jsx\";\n//#region ==================== IMPORTS ====================\nimport React from 'react';\nimport { useRef } from 'react'; // import { useEffect } from 'react';\n\nimport { useLayoutEffect } from 'react'; // import { useCallback } from 'react';\n\nimport { gsap } from 'gsap';\nimport '../banners.scss';\nimport './BCBG_02342.scss'; // import './fonts/fonts.css';\n//#region -------------------- IMPORTS: ASSETS --------------------\n\nimport bg from './images/bg.jpg';\nimport model_ctr from './images/model_ctr.jpg';\nimport model_lf from './images/model_lf.jpg';\nimport model_rt from './images/model_rt.jpg';\nimport bottle from './images/bottle.png';\nimport logo_BCBG_MA from './images/logo_BCBG_MA.png'; // import logo_BCBG_MA from './images/logo_BCBG_MA.svg';\n\nimport cta from './images/cta.png'; //#endregion -------------------- IMPORTS: ASSETS --------------------\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n//#endregion ==================== IMPORTS ====================\n\nexport default function BCBG_02342() {\n  //#region ==================== ASSETS _Ref ====================\n  const bg_Ref = useRef(null);\n  const model_Ref = useRef(null);\n  const model_ctr_Ref = useRef(null);\n  const model_lf_Ref = useRef(null);\n  const model_rt_Ref = useRef(null);\n  const filter_Ref = useRef(null);\n  const turbulence_Ref = useRef(null);\n  const bottle_Ref = useRef(null);\n  const logo_BCBG_MA_Ref = useRef(null);\n  const maskSVG_Ref = useRef(null);\n  const mask_Ref = useRef(null);\n  const mask01_Ref = useRef(null);\n  const mask02_Ref = useRef(null);\n  const cta_Ref = useRef(null); // const particleContainer_Ref = useRef(null);\n\n  const clickTag_Ref = useRef(null); //#endregion ==================== ASSETS _Ref ====================\n  //#region ==================== ANIMATION DURATIONs ====================\n  // const staggerDuration = 0.125;\n  // const staggerDelay = 0.0375;\n\n  const waveDuration = 10; // const animDuration00 = 0.125;\n  // const animDuration00_5 = 0.50;\n  // const animDuration01 = 1.00;\n  // const animDuration01_25 = 1.25;\n  // const animDuration01_5 = 1.50;\n\n  const animDuration02 = 2.00; // const animDuration02_5 = 2.50;\n  // const animDuration03 = 3.00;\n  // const animDuration03_5 = 3.50;\n  // const animDuration04 = 4.00;\n  // const animDuration04_5 = 4.50;\n\n  const animDuration05 = 5.00; // const animDuration05_5 = 5.50;\n  // const animDuration06 = 6.00;\n  // const animDuration06_5 = 6.50;\n  // const animDuration07 = 7.00;\n  // const animDuration07_5 = 7.50;\n  // const animDuration08 = 8.00;\n  // const animDuration08_5 = 8.50;\n  // const animDuration09 = 9.00;\n  // const animDuration09_5 = 9.50;\n  // const animDuration10 = 10.00;\n  //#endregion ==================== ANIMATION DURATIONs ====================\n  //#region ==================== FUNCTIONS ====================\n  //#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n  // function splitText(thisContainer, thisCopy, thisClassname) {\n  //     // console.log('');\n  //     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n  //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n  //     const thisCopyResponse = thisCopy.split('');\n  //     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n  //     for (let c = 0; c < thisCopyResponse.length; c++) {\n  //         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n  //         const node = document.createElement('p');\n  //         node.className = thisClassname;\n  //         if (thisCopyResponse[c] !== ' ') {\n  //             node.innerHTML = thisCopyResponse[c];\n  //             thisContainer.append(node);\n  //         } else {\n  //             // console.log('This is a space!');\n  //             node.innerHTML = '&nbsp;';\n  //             thisContainer.append(node);\n  //         }\n  //     }\n  // }\n  //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n  //#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n  // function randRange(min, max) {\n  //     let thisIndex = min + Math.round(Math.random() * (max - min));\n  //     //\tconsole.log('thisIndex = ' + thisIndex);\n  //     return thisIndex;\n  // }\n  //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n  //#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n  // function randRange2(min, max) {\n  //     let thisIndex = min + Math.random() * (max - min);\n  //     //\tconsole.log('thisIndex = ' + thisIndex);\n  //     return thisIndex;\n  // }\n  //#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n  //#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n  // const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n  //     // console.log('');\n  //     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n  //     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n  //     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n  // }, []);\n  //#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n  //#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n  //#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n  // // const removeAllChildNodes = useCallback((parent) => {\n  // function removeAllChildNodes(parent) {\n  //     // console.log('');\n  //     // console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n  //     // console.log('parent = ' + parent);\n  //     // console.log('parent.id = ' + parent.id);\n  //     while (parent.firstChild) {\n  //         parent.removeChild(parent.firstChild);\n  //     }\n  // }\n  // // }, []);\n  //#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n  // const removeParticle = useCallback((thisParticle) => {\n  //     // console.log('');\n  //     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n  //     // console.log('NOTE: the error check below does not work 100%');\n  //     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n  //     // console.log('thisParticle = ' + thisParticle);\n  //     // console.log('thisParticle.id = ' + thisParticle.id);\n  //     if (thisParticle == null) {\n  //         console.log('***** NOPE! *****');\n  //         console.error();\n  //     } else {\n  //         thisParticle.parentNode.removeChild(thisParticle);\n  //     }\n  // }, []);\n  //#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n  // // const particleAnim = useCallback((thisParticle) => {\n  // const particleAnim = useCallback((thisContainer) => {\n  //     console.log('');\n  //     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n  //     // console.log('thisParticle.id = ' + thisParticle.id);\n  //     // console.log('thisParticle.width = ' + thisParticle.width);\n  //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n  //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n  //     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n  //     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n  //     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n  //     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n  //     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n  //     // gsap.to(bottle_Ref.current, {\n  //     //     duration: 1,\n  //     //     pixi: {\n  //     //         scale: 0.2,\n  //     //         rotation: 60\n  //     //     }\n  //     // });\n  //     console.log('thisContainer.id = ' + thisContainer.id);\n  //     const speed = 0.25;\n  //     const gravity = -200;\n  //     for (let i = 0; i < thisContainer.children.length; i++) {\n  //         const animAngle = Math.random() * Math.PI * 2;\n  //         console.log('animAngle = ' + animAngle);\n  //         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n  //         //     alpha: 0,\n  //         //     // scaleX: thisScale,\n  //         //     // scaleY: thisScale,\n  //         //     physics2D: {\n  //         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n  //         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n  //         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n  //         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n  //         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n  //         //         // velocity: speed,\n  //         //         gravity: gravity\n  //         //     }\n  //         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n  //         //     //x:Math.cos(animAngle) * length * 6, \n  //         //     //y:Math.sin(animAngle) * length * 6\n  //         // }, 0);\n  //     }\n  // }, []);\n  // // }, [removeParticle]);\n  //#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n  // const positionParticle = useCallback((thisContainer) => {\n  // // const positionParticle = useCallback((thisContainer, particleWidth) => {\n  //     // console.log('');\n  //     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n  //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n  //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n  //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n  //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n  //     // const displacementFactor = 0.5;\n  //     for (let i = 0; i < thisContainer.children.length; i++) {\n  //         // console.log('');\n  //         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n  //         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n  //         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n  //         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n  //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n  //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n  //         // const thisX = -150;\n  //         // const thisY = 125;\n  //         const thisX = -(thisContainer.children[i].width * 0.5);\n  //         const thisY = thisContainer.offsetHeight * 0.5;\n  //         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n  //         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n  //         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n  //         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n  //         // const thisScale = 1;\n  //         // const thisScale = 0.125;\n  //         const thisScale = randRange(5, 15) / 100;\n  //         // console.log('thisScale = ' + thisScale);\n  //         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n  //         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n  //         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n  //     }\n  //     // particleAnim(thisContainer.children[i]);\n  //     particleAnim(thisContainer);\n  // // }, []);\n  // }, [particleAnim]);\n  //#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n  // const addParticle = useCallback((thisContainer, numParticle) => {\n  //     // console.log('');\n  //     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n  //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n  //     for (let i = 0; i < numParticle; i++) {\n  //         const thisParticle = new Image();\n  //         thisParticle.src = particle;\n  //         thisParticle.key = i;\n  //         thisParticle.className = 'particle';\n  //         thisParticle.id = 'particle_' + i;\n  //         thisParticle.alt = 'particle_' + i;\n  //         thisContainer.append(thisParticle);\n  //         // console.log('thisParticle.width = ' + thisParticle.width);\n  //     }\n  //     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n  //     // let particleWidth = 0;\n  //     thisContainer.lastChild.onload = function () {\n  //         // particleWidth = thisContainer.lastChild.width;\n  //         // console.log('particleWidth = ' + particleWidth);\n  //         positionParticle(thisContainer);\n  //         // positionParticle(thisContainer, particleWidth);\n  //     }\n  //     // positionParticle(thisContainer);\n  // // }, []);\n  // }, [positionParticle]);\n  //#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n  // const addRandomParticle = useCallback((thisContainer, numParticle) => {\n  //     // console.log('');\n  //     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n  //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n  //     const particles = [\n  //         flower_01,\n  //         flower_02,\n  //         flower_03,\n  //         flower_04,\n  //         flower_05\n  //     ];\n  //     // console.log('particles = ' + particles);\n  //     for (let i = 0; i < numParticle; i++) {\n  //         let particleIndex = randRange(0, 4);\n  //         // console.log('particleIndex = ' + particleIndex);\n  //         const thisParticle = new Image();\n  //         thisParticle.src = particles[particleIndex];\n  //         thisParticle.key = i;\n  //         thisParticle.className = 'particle';\n  //         thisParticle.id = 'flower' + i;\n  //         thisParticle.alt = 'flower' + i;\n  //         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n  //         // console.log('thisParticle = ' + thisParticle.id);\n  //         thisContainer.append(thisParticle);\n  //     }\n  //     positionParticle(thisContainer);\n  // }, [positionParticle]);\n  //#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n  //#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n  // const addPixi = useCallback((thisContainer, numParticle) => {\n  //     console.log('');\n  //     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n  //     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n  //     // Setup PIXI app\n  //     const app = new Application({\n  //         width: 300,\n  //         height: 250,\n  //         backgroundColor: 0x10bb99,\n  //         view: document.getElementById('container'),\n  //     })\n  //     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n  //     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n  //     // //DEFINE VARIABLES\n  //     // // let vw = window.innerWidth;\n  //     // // let vh = window.innerHeight;\n  //     // let vw = 300;\n  //     // let vh = 250;\n  //     // // let count = 0;\n  //     // //INITIALIZE PIXI\n  //     // const app = new PIXI.Application(vw, vh, {\n  //     //     autoResize: true,\n  //     //     resolution: devicePixelRatio || 1,\n  //     //     antialias: true, \n  //     //     transparent: true\n  //     // });\n  //     // thisContainer.appendChild(app.view);\n  //     // thisContainer.lastChild.onload = function () {\n  //     //     for (let i = 0; i < numParticle; i++) {\n  //     //         const thisParticle = new Image();\n  //     //         thisParticle.src = particle;\n  //     //         thisParticle.key = i;\n  //     //         thisParticle.className = 'particle';\n  //     //         thisParticle.id = 'particle_' + i;\n  //     //         thisParticle.alt = 'particle_' + i;\n  //     //         // app.append(thisParticle);\n  //     //         app.stage.addChild(thisParticle);\n  //     //         console.log('thisParticle.width = ' + thisParticle.width);\n  //     //     }\n  //     // }\n  // }, []);\n  //#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n  //#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n  //#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n  function handleClick() {\n    // const handleClick = useCallback(() => {\n    // console.log('');\n    // console.log('------------------------- handleClick() -------------------------');\n    // removeAllChildNodes(particleContainer_Ref.current);\n    tl.pause(0);\n    tl.restart();\n  } // }, [tl]);\n  //#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n  //#endregion ==================== FUNCTIONS ====================\n  //#region ==================== useEffect / useLayoutEffect ====================\n  // const numParticle = 40;\n\n\n  const tl = gsap.timeline({\n    delay: 0\n  }); // const tl = gsap.timeline({ delay: 0, repeat: 2 });\n  // useEffect(() => {\n\n  useLayoutEffect(() => {\n    // addParticle(particleContainer_Ref.current, numParticle);\n    // addRandomParticle(particleContainer_Ref.current, numParticle);\n    // addPixi(particleContainer_Ref.current, numParticle);\n    tl //#region ==================== INITIALIZE OBJECTS ====================\n    //#region -------------------- autoAlpha --------------------\n    // .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([model_ctr_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([model_lf_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([model_rt_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([bottle_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([logo_BCBG_MA_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([cta_Ref.current], { autoAlpha: 0 }, 'frame00')\n    // .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n    .set([clickTag_Ref.current], {\n      autoAlpha: 0\n    }, 'frame00') //#endregion -------------------- autoAlpha --------------------\n    //#region -------------------- SET TRANSFORMS --------------------\n    //#region - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n    // .set([model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n    .set([bg_Ref.current, model_Ref.current], {\n      transformOrigin: '50% 0',\n      immediateRender: true\n    }, 'frame00') //#endregion - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n    //#region - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n    // .set([bg_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125 }, 'frame00')\n    //#endregion - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n    //#endregion -------------------- SET TRANSFORMS --------------------\n    //#endregion ==================== INITIALIZE OBJECTS ====================\n    //#region ==================== FRAME 01 ====================\n    // .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n    // .fromTo([model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=0')\n    .fromTo([bg_Ref.current, model_Ref.current], {\n      x: -11.25,\n      y: -17.5,\n      scale: 2.3125,\n      autoAlpha: 0\n    }, {\n      x: 0,\n      y: 0,\n      scale: 1,\n      autoAlpha: 1,\n      ease: 'power3.out',\n      duration: animDuration05\n    }, 'frame01 +=0').to([turbulence_Ref.current], {\n      attr: {\n        baseFrequency: '0.008 0.002'\n      },\n      repeat: -1,\n      yoyo: true,\n      ease: 'none',\n      duration: waveDuration\n    }, 'frame01 +=0').fromTo([mask01_Ref.current], {\n      x: -500\n    }, {\n      x: 0,\n      ease: 'power3.out',\n      duration: animDuration05\n    }, 'frame01 +=0').fromTo([mask02_Ref.current], {\n      x: -500\n    }, {\n      x: 0,\n      ease: 'power3.out',\n      duration: animDuration05\n    }, 'frame01 +=2').fromTo([bottle_Ref.current], {\n      autoAlpha: 0\n    }, {\n      autoAlpha: 1,\n      ease: 'power3.out',\n      duration: animDuration02\n    }, 'frame01 +=4').fromTo([cta_Ref.current], {\n      autoAlpha: 0\n    }, {\n      autoAlpha: 1,\n      ease: 'power3.out',\n      duration: animDuration02\n    }, 'frame01 +=4.25') //#endregion ==================== FRAME 01 ====================\n    //#region ==================== FRAME 02 ====================\n    // .to([copy01_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n    // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n    //#endregion ==================== FRAME 02 ====================\n    //#region ==================== FRAME 03 ====================\n    // .to([LOGO_VLJref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [LOGO_VLJref.current, -72.5, 230, 0.558823529411765, 0] }, 'frame03 +=0.5')\n    // .fromTo([copy02_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame03 +=0.5')\n    //#endregion ==================== FRAME 03 ====================\n    //#region ==================== FRAME 04 ====================\n    // .set([copy01_Ref.current], { color: '#000000' }, 'frame04')\n    // .set([LOGO_VLJ_noir_w_Ref.current], { autoAlpha: 0 }, 'frame04')\n    // .set([LOGO_VLJ_noir_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n    // .set([LOGO_VLJ_jc_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n    // .to([copy02_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n    // .fromTo([model_mask_Ref.current], { y: -1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n    // .fromTo([model_SVG_Ref.current], { y: 1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n    // .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.5')\n    // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.75')\n    // .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=1')\n    // // .staggerFromTo(copy01_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=1.5')\n    // // .staggerFromTo(copy02_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=4')\n    //#endregion ==================== FRAME 04 ====================\n    ; //tl.duration(1.5);\n\n    console.log('');\n    console.log('tl timing = ' + tl.duration() + ' secs'); // }, []);\n  }, [tl]); // }, [tl, addParticle]);\n  // }, [tl, addRandomParticle]);\n  // }, [tl, addRandomParticle, nextPos]);\n  // }, [tl, addPixi]);\n  //#endregion ==================== useEffect / useLayoutEffect ====================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner300x250 bcbg_02342\",\n    id: \"bcbg_02342ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"modelDiv\",\n    id: \"filterID\",\n    version: \"1.1\",\n    baseProfile: \"full\",\n    x: \"0\",\n    y: \"0\",\n    width: \"300\",\n    height: \"250\",\n    space: \"preserve\",\n    ref: filter_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"turbulenceFilterID\",\n    x: \"0\",\n    y: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"feTurbulence\", {\n    id: \"turbulenceID\",\n    type: \"fractalNoise\",\n    numOctaves: \"1\",\n    seed: \"2\",\n    baseFrequency: \"0.002 0.008\",\n    result: \"turbulenceResult\",\n    ref: turbulence_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"feDisplacementMap\", {\n    in: \"SourceGraphic\",\n    in2: \"turbulenceResult\",\n    scale: \"60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    src: bg,\n    className: \"bg\",\n    id: \"bgID\",\n    alt: \"bg\",\n    ref: bg_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modelDiv\",\n    id: \"modelDivID\",\n    ref: model_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: model_lf,\n    className: \"model_lf\",\n    id: \"model_lfID\",\n    alt: \"model_lf\",\n    ref: model_lf_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: model_rt,\n    className: \"model_rt\",\n    id: \"model_rtID\",\n    alt: \"model_rt\",\n    ref: model_rt_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: model_ctr,\n    className: \"model_ctr\",\n    id: \"model_ctrID\",\n    alt: \"model_ctr\",\n    ref: model_ctr_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: bottle,\n    className: \"bottle\",\n    id: \"bottleID\",\n    alt: \"bottle\",\n    ref: bottle_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"mask\",\n    id: \"maskID\",\n    version: \"1.1\",\n    baseProfile: \"full\",\n    x: \"0\",\n    y: \"0\",\n    width: \"300\",\n    height: \"250\",\n    space: \"preserve\",\n    ref: maskSVG_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"gradientID\",\n    spreadMethod: \"pad\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"600\",\n    y2: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"0.5\",\n    style: {\n      stopColor: '#ffffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"0.75\",\n    style: {\n      stopColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"maskID\",\n    ref: mask_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"maskClass\",\n    id: \"mask01ID\",\n    fill: \"url(#gradientID)\",\n    x: \"0\",\n    y: \"170\",\n    width: \"600\",\n    height: \"20\",\n    ref: mask01_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"maskClass\",\n    id: \"mask02ID\",\n    fill: \"url(#gradientID)\",\n    x: \"0\",\n    y: \"190\",\n    width: \"600\",\n    height: \"30\",\n    ref: mask02_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#maskID)\",\n    ref: mask_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"image\", {\n    href: logo_BCBG_MA,\n    x: \"15\",\n    y: \"180\",\n    width: \"270\",\n    height: \"38\",\n    ref: logo_BCBG_MA_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    src: cta,\n    className: \"cta\",\n    id: \"ctaID\",\n    alt: \"cta\",\n    ref: cta_Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clickTag\",\n    id: \"clickTagID\",\n    ref: clickTag_Ref,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/images/ea/banners/BCBG_MAXAZRIA_CR00002342_AU_Digital_Plan/BCBG_02342.jsx"],"names":["React","useRef","useLayoutEffect","gsap","bg","model_ctr","model_lf","model_rt","bottle","logo_BCBG_MA","cta","BCBG_02342","bg_Ref","model_Ref","model_ctr_Ref","model_lf_Ref","model_rt_Ref","filter_Ref","turbulence_Ref","bottle_Ref","logo_BCBG_MA_Ref","maskSVG_Ref","mask_Ref","mask01_Ref","mask02_Ref","cta_Ref","clickTag_Ref","waveDuration","animDuration02","animDuration05","handleClick","tl","pause","restart","timeline","delay","set","current","autoAlpha","transformOrigin","immediateRender","fromTo","x","y","scale","ease","duration","to","attr","baseFrequency","repeat","yoyo","console","log","stopColor"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\n// import { useEffect } from 'react';\nimport { useLayoutEffect } from 'react';\n// import { useCallback } from 'react';\n\nimport { gsap } from 'gsap';\n\nimport '../banners.scss';\nimport './BCBG_02342.scss';\n// import './fonts/fonts.css';\n\n\n//#region -------------------- IMPORTS: ASSETS --------------------\n\nimport bg from './images/bg.jpg';\n\nimport model_ctr from './images/model_ctr.jpg';\nimport model_lf from './images/model_lf.jpg';\nimport model_rt from './images/model_rt.jpg';\n\nimport bottle from './images/bottle.png';\n\nimport logo_BCBG_MA from './images/logo_BCBG_MA.png';\n// import logo_BCBG_MA from './images/logo_BCBG_MA.svg';\n\nimport cta from './images/cta.png';\n\n//#endregion -------------------- IMPORTS: ASSETS --------------------\n\n\n//#region -------------------- GSAP: REGISTER PLUGINS --------------------\n\n// gsap.registerPlugin(PixiPlugin);\n// PixiPlugin.registerPIXI(PIXI);\n\n//#endregion -------------------- GSAP: REGISTER PLUGINS --------------------\n\n\n//#endregion ==================== IMPORTS ====================\n\n\nexport default function BCBG_02342() {\n\n    //#region ==================== ASSETS _Ref ====================\n\n    const bg_Ref = useRef(null);\n\n    const model_Ref = useRef(null);\n    const model_ctr_Ref = useRef(null);\n    const model_lf_Ref = useRef(null);\n    const model_rt_Ref = useRef(null);\n\n    const filter_Ref = useRef(null);\n    const turbulence_Ref = useRef(null);\n\n    const bottle_Ref = useRef(null);\n\n    const logo_BCBG_MA_Ref = useRef(null);\n\n    const maskSVG_Ref = useRef(null);\n    const mask_Ref = useRef(null);\n    const mask01_Ref = useRef(null);\n    const mask02_Ref = useRef(null);\n\n    const cta_Ref = useRef(null);\n\n    // const particleContainer_Ref = useRef(null);\n    const clickTag_Ref = useRef(null);\n\n    //#endregion ==================== ASSETS _Ref ====================\n\n\n    //#region ==================== ANIMATION DURATIONs ====================\n\n    // const staggerDuration = 0.125;\n    // const staggerDelay = 0.0375;\n\n    const waveDuration = 10;\n\n    // const animDuration00 = 0.125;\n    // const animDuration00_5 = 0.50;\n    // const animDuration01 = 1.00;\n    // const animDuration01_25 = 1.25;\n    // const animDuration01_5 = 1.50;\n    const animDuration02 = 2.00;\n    // const animDuration02_5 = 2.50;\n    // const animDuration03 = 3.00;\n    // const animDuration03_5 = 3.50;\n    // const animDuration04 = 4.00;\n    // const animDuration04_5 = 4.50;\n    const animDuration05 = 5.00;\n    // const animDuration05_5 = 5.50;\n    // const animDuration06 = 6.00;\n    // const animDuration06_5 = 6.50;\n    // const animDuration07 = 7.00;\n    // const animDuration07_5 = 7.50;\n    // const animDuration08 = 8.00;\n    // const animDuration08_5 = 8.50;\n    // const animDuration09 = 9.00;\n    // const animDuration09_5 = 9.50;\n    // const animDuration10 = 10.00;\n\n    //#endregion ==================== ANIMATION DURATIONs ====================\n\n\n    //#region ==================== FUNCTIONS ====================\n\n    //#region -------------------- FUNCTION: splitText(thisContainer, thisCopy) --------------------\n\n    // function splitText(thisContainer, thisCopy, thisClassname) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- splitText(thisContainer, thisCopy) triggered! -------------------------');\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisCopy = ' + thisCopy);\n\n    //     const thisCopyResponse = thisCopy.split('');\n    //     // console.log('thisCopyResponse.length = ' + thisCopyResponse.length + '     thisCopyResponse = ' + thisCopyResponse)\n\n    //     for (let c = 0; c < thisCopyResponse.length; c++) {\n\n    //         // console.log('thisCopyResponse[c] = \"' + thisCopyResponse[c] + '\"');\n\n    //         const node = document.createElement('p');\n    //         node.className = thisClassname;\n\n    //         if (thisCopyResponse[c] !== ' ') {\n    //             node.innerHTML = thisCopyResponse[c];\n    //             thisContainer.append(node);\n    //         } else {\n    //             // console.log('This is a space!');\n    //             node.innerHTML = '&nbsp;';\n    //             thisContainer.append(node);\n    //         }\n    //     }\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n    // function randRange(min, max) {\n    //     let thisIndex = min + Math.round(Math.random() * (max - min));\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange(min:Number, max:Number) - integers --------------------\n\n\n    //#region -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n    // function randRange2(min, max) {\n    //     let thisIndex = min + Math.random() * (max - min);\n    //     //\tconsole.log('thisIndex = ' + thisIndex);\n\n    //     return thisIndex;\n    // }\n\n    //#endregion -------------------- FUNCTION: randRange2(min:Number, max:Number) - real numbers --------------------\n\n\n    //#region -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n    // const nextPos = useCallback((thisObj, thisX, thisY, thisScale, thisAlpha) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- nextPos(thisObj, thisX, thisY, thisScale, thisAlpha) triggered! -------------------------');\n    //     // console.log('thisObj: ' + thisObj + ', thisX: ' + thisX + ', thisY: ' + thisY + ', thisScale: ' + thisScale + ', thisAlpha: ' + thisAlpha);\n\n    //     gsap.set(thisObj, { x: thisX, y: thisY, scale: thisScale, alpha: thisAlpha });\n\n    // }, []);\n\n    //#endregion -------------------- FUNCTION: nextPos(thisObj, thisX, thisY, thisScale) --------------------\n\n\n    //#region -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n    //#region - - - - - - - - - - - FUNCTION: removeAllChildNodes(parent) - - - - - - - - - - -\n\n    // // const removeAllChildNodes = useCallback((parent) => {\n    // function removeAllChildNodes(parent) {\n\n    //     // console.log('');\n    //     // console.log('------------------------- removeAllChildNodes(parent) triggered! -------------------------');\n\n    //     // console.log('parent = ' + parent);\n    //     // console.log('parent.id = ' + parent.id);\n\n    //     while (parent.firstChild) {\n    //         parent.removeChild(parent.firstChild);\n    //     }\n    // }\n    // // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeAllChildNodes(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n    // const removeParticle = useCallback((thisParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- removeParticle(thisParticle) triggered! -------------------------');\n    //     // console.log('NOTE: the error check below does not work 100%');\n    //     // console.log('It fails if I click before the full run of the particle animations(s) complete.');\n\n    //     // console.log('thisParticle = ' + thisParticle);\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n\n    //     if (thisParticle == null) {\n    //         console.log('***** NOPE! *****');\n    //         console.error();\n    //     } else {\n    //         thisParticle.parentNode.removeChild(thisParticle);\n    //     }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: removeParticle(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n    // // const particleAnim = useCallback((thisParticle) => {\n    // const particleAnim = useCallback((thisContainer) => {\n\n    //     console.log('');\n    //     console.log('------------------------- particleAnim(thisParticle) triggered! -------------------------');\n\n    //     // console.log('thisParticle.id = ' + thisParticle.id);\n    //     // console.log('thisParticle.width = ' + thisParticle.width);\n\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5) });\n    //     // gsap.to([thisParticle], animDuration00_5, { autoAlpha: 1, repeat: 1, yoyo: true, ease: 'sine.inOut', delay: randRange2(0, 1.5), onComplete: removeParticle, onCompleteParams: [thisParticle] });\n\n    //     // TweenLite.to(mc_empty.getInstanceAtDepth(n), 1, { _xscale: 100, _yscale: 100, _alpha: 100, delay: .1 + (.0375 * n), ease: Cubic.easeOut });\n    //     // gsap.to([thisParticle], animDuration01, { scale: 1, autoAlpha: 1, ease: 'power3.out', delay: randRange2(0, 1.5) });\n\n    //     // gsap.fromTo([thisParticle], { scale: randRange2(0.75, 1), rotation: randRange(-15, 15), autoAlpha: 0 }, { scale: 1, rotation: 0, autoAlpha: 0.75, ease: 'power3.out', duration: animDuration01, delay: randRange2(0.5, 1.5) });\n\n\n    //     gsap.fromTo([bottle_Ref.current], { scale: 0, autoAlpha: 0 }, { scale: 2, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 });\n    //     // gsap.to([bottle_Ref.current], { pixi: {scale: 0.5}, duration: animDuration02 });\n\n    //     // gsap.to(bottle_Ref.current, {\n    //     //     duration: 1,\n    //     //     pixi: {\n    //     //         scale: 0.2,\n    //     //         rotation: 60\n    //     //     }\n    //     // });\n\n    //     console.log('thisContainer.id = ' + thisContainer.id);\n\n    //     const speed = 0.25;\n    //     const gravity = -200;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         const animAngle = Math.random() * Math.PI * 2;\n    //         console.log('animAngle = ' + animAngle);\n\n    //         // gsap.to(thisContainer.children[i], speed + Math.random(), {\n    //         //     alpha: 0,\n\n    //         //     // scaleX: thisScale,\n    //         //     // scaleY: thisScale,\n\n    //         //     physics2D: {\n    //         //         animAngle: animAngle * 180 / Math.PI, \t\t\t\t//translate radians to degrees\n    //         //         // animAngle: animAngle * 90 / Math.PI, \t\t\t\t\t//translate radians to degrees\n    //         //         // velocity: (100 + Math.random() * 250) * speed, \t//initial velocity\n    //         //         velocity: (50 + Math.random() * 500) * speed, \t//initial velocity\n    //         //         // gravity: 500 * gravity \t\t\t\t\t\t//you could increase/decrease this to give gravity more or less pull\n    //         //         // velocity: speed,\n    //         //         gravity: gravity\n    //         //     }\n\n    //         //     //if you'd rather not do physics, you could just animate out directly by using the following 2 lines instead of the physics2D:\n    //         //     //x:Math.cos(animAngle) * length * 6, \n    //         //     //y:Math.sin(animAngle) * length * 6\n\n    //         // }, 0);\n\n    //     }\n    // }, []);\n    // // }, [removeParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: particleAnim(thisParticle) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n    // const positionParticle = useCallback((thisContainer) => {\n    // // const positionParticle = useCallback((thisContainer, particleWidth) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- positionParticle(thisContainer) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight);\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     numParticle = ' + numParticle);\n\n    //     // console.log('thisContainer.offsetWidth = ' + thisContainer.offsetWidth + '     thisContainer.offsetHeight = ' + thisContainer.offsetHeight + '     particleWidth = ' + particleWidth);\n\n\n    //     // const displacementFactor = 0.5;\n\n    //     for (let i = 0; i < thisContainer.children.length; i++) {\n\n    //         // console.log('');\n    //         // // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id);\n    //         // // console.log('thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft);\n    //         // // console.log('thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop);\n    //         // // console.log('thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].x = ' + thisContainer.children[i].x + '     thisContainer.children[' + i + '].y = ' + thisContainer.children[i].y + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n    //         // console.log('thisContainer.children[' + i + '].id = ' + thisContainer.children[i].id + '     thisContainer.children[' + i + '].offsetLeft = ' + thisContainer.children[i].offsetLeft + '     thisContainer.children[' + i + '].offsetTop = ' + thisContainer.children[i].offsetTop + '     thisContainer.children[' + i + '].width = ' + thisContainer.children[i].width);\n\n\n    //         // const thisX = -150;\n    //         // const thisY = 125;\n\n    //         const thisX = -(thisContainer.children[i].width * 0.5);\n    //         const thisY = thisContainer.offsetHeight * 0.5;\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * displacementFactor, thisContainer.offsetWidth * displacementFactor);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * displacementFactor, thisContainer.offsetHeight * displacementFactor);\n\n    //         // const thisX = randRange(-thisContainer.offsetWidth * 0.75, thisContainer.offsetWidth * 0.5);\n    //         // const thisY = randRange(-thisContainer.offsetHeight * 0.25, thisContainer.offsetHeight * 0.875);\n\n\n    //         // const thisScale = 1;\n    //         // const thisScale = 0.125;\n    //         const thisScale = randRange(5, 15) / 100;\n\n    //         // console.log('thisScale = ' + thisScale);\n    //         // console.log('thisX = ' + thisX + '     thisY = ' + thisY + '     thisScale = ' + thisScale);\n\n\n    //         // gsap.set([thisContainer.children[i]], { x: thisX, y: thisY });\n    //         gsap.set([thisContainer.children[i]], { x: thisX, y: thisY, scale: thisScale });\n    //     }\n\n    //     // particleAnim(thisContainer.children[i]);\n    //     particleAnim(thisContainer);\n\n    // // }, []);\n    // }, [particleAnim]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: positionParticle(thisContainer) - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n    // const addParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particle;\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'particle_' + i;\n    //         thisParticle.alt = 'particle_' + i;\n\n    //         thisContainer.append(thisParticle);\n\n    //         // console.log('thisParticle.width = ' + thisParticle.width);\n    //     }\n\n\n    //     // console.log('thisContainer.lastChild = ' + thisContainer.lastChild);\n\n    //     // let particleWidth = 0;\n\n    //     thisContainer.lastChild.onload = function () {\n\n    //         // particleWidth = thisContainer.lastChild.width;\n    //         // console.log('particleWidth = ' + particleWidth);\n\n    //         positionParticle(thisContainer);\n    //         // positionParticle(thisContainer, particleWidth);\n    //     }\n\n    //     // positionParticle(thisContainer);\n\n    // // }, []);\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n    // const addRandomParticle = useCallback((thisContainer, numParticle) => {\n\n    //     // console.log('');\n    //     // console.log('------------------------- addRandomParticle(thisContainer, numParticle) triggered! -------------------------');\n\n    //     // console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     const particles = [\n    //         flower_01,\n    //         flower_02,\n    //         flower_03,\n    //         flower_04,\n    //         flower_05\n    //     ];\n\n    //     // console.log('particles = ' + particles);\n\n    //     for (let i = 0; i < numParticle; i++) {\n\n    //         let particleIndex = randRange(0, 4);\n\n    //         // console.log('particleIndex = ' + particleIndex);\n\n    //         const thisParticle = new Image();\n    //         thisParticle.src = particles[particleIndex];\n    //         thisParticle.key = i;\n    //         thisParticle.className = 'particle';\n    //         thisParticle.id = 'flower' + i;\n    //         thisParticle.alt = 'flower' + i;\n\n    //         // console.log('particles[' + particleIndex + '] = ' + particles[particleIndex]);\n    //         // console.log('thisParticle = ' + thisParticle.id);\n\n    //         thisContainer.append(thisParticle);\n    //     }\n\n    //     positionParticle(thisContainer);\n\n    // }, [positionParticle]);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addRandomParticle = useCallback(() - - - - - - - - - - -\n\n\n    //#region - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    // const addPixi = useCallback((thisContainer, numParticle) => {\n\n    //     console.log('');\n    //     console.log('------------------------- addPixi(thisContainer, numParticle) triggered! -------------------------');\n\n    //     console.log('thisContainer.id = ' + thisContainer.id + '     numParticle = ' + numParticle);\n\n    //     // Setup PIXI app\n    //     const app = new Application({\n    //         width: 300,\n    //         height: 250,\n    //         backgroundColor: 0x10bb99,\n    //         view: document.getElementById('container'),\n    //     })\n\n    //     // Use the custom renderer to render a valid PIXI object into a PIXI container.\n    //     render(<Text text=\"Hello World\" x={200} y={200} />, app.stage)\n\n    //     // //DEFINE VARIABLES\n    //     // // let vw = window.innerWidth;\n    //     // // let vh = window.innerHeight;\n    //     // let vw = 300;\n    //     // let vh = 250;\n    //     // // let count = 0;\n\n    //     // //INITIALIZE PIXI\n    //     // const app = new PIXI.Application(vw, vh, {\n    //     //     autoResize: true,\n    //     //     resolution: devicePixelRatio || 1,\n    //     //     antialias: true, \n    //     //     transparent: true\n    //     // });\n\n    //     // thisContainer.appendChild(app.view);\n\n\n    //     // thisContainer.lastChild.onload = function () {\n\n    //     //     for (let i = 0; i < numParticle; i++) {\n\n    //     //         const thisParticle = new Image();\n    //     //         thisParticle.src = particle;\n    //     //         thisParticle.key = i;\n    //     //         thisParticle.className = 'particle';\n    //     //         thisParticle.id = 'particle_' + i;\n    //     //         thisParticle.alt = 'particle_' + i;\n\n    //     //         // app.append(thisParticle);\n    //     //         app.stage.addChild(thisParticle);\n\n    //     //         console.log('thisParticle.width = ' + thisParticle.width);\n    //     //     }\n    //     // }\n\n    // }, []);\n\n    //#endregion - - - - - - - - - - - FUNCTION: addPixi = useCallback(() - - - - - - - - - - -\n\n    //#endregion -------------------- FUNCTION: PARTICLES - addParticle(thisContainer), positionParticle(thisContainer), particleAnim(thisParticle) --------------------\n\n\n    //#region -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    function handleClick() {\n    // const handleClick = useCallback(() => {\n\n        // console.log('');\n        // console.log('------------------------- handleClick() -------------------------');\n\n        // removeAllChildNodes(particleContainer_Ref.current);\n\n        tl.pause(0);\n        tl.restart();\n    }\n    // }, [tl]);\n\n    //#endregion -------------------- FUNCTION: handleClick() - GSAP timeline control --------------------\n\n    //#endregion ==================== FUNCTIONS ====================\n\n\n\n    //#region ==================== useEffect / useLayoutEffect ====================\n\n    // const numParticle = 40;\n\n    const tl = gsap.timeline({ delay: 0 });\n    // const tl = gsap.timeline({ delay: 0, repeat: 2 });\n\n\n    // useEffect(() => {\n    useLayoutEffect(() => {\n\n        // addParticle(particleContainer_Ref.current, numParticle);\n        // addRandomParticle(particleContainer_Ref.current, numParticle);\n        // addPixi(particleContainer_Ref.current, numParticle);\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            //#region -------------------- autoAlpha --------------------\n\n            // .set([bg_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([model_ctr_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([model_lf_Ref.current], { autoAlpha: 0 }, 'frame00')\n            // .set([model_rt_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([bottle_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([logo_BCBG_MA_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([cta_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            // .set([particleContainer_Ref.current], { autoAlpha: 0 }, 'frame00')\n            .set([clickTag_Ref.current], { autoAlpha: 0 }, 'frame00')\n\n            //#endregion -------------------- autoAlpha --------------------\n\n\n            //#region -------------------- SET TRANSFORMS --------------------\n\n            //#region - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n\n            // .set([model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set([bg_Ref.current, model_Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n\n            //#endregion - - - - - - - - - - - SET TRANSFORM ORIGiNS - - - - - - - - - - -\n\n\n            //#region - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n\n            // .set([bg_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125 }, 'frame00')\n\n            //#endregion - - - - - - - - - - - FRAME01 - - - - - - - - - - -\n\n            //#endregion -------------------- SET TRANSFORMS --------------------\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .call(addRandomParticle, [particleContainer_Ref.current, numParticle], 'frame01 +=0')\n\n            // .fromTo([model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=0')\n            .fromTo([bg_Ref.current, model_Ref.current], { x: -11.25, y: -17.5, scale: 2.3125, autoAlpha: 0 }, { x: 0, y: 0, scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=0')\n\n            .to([turbulence_Ref.current], { attr: { baseFrequency: '0.008 0.002' }, repeat: -1, yoyo: true, ease: 'none', duration: waveDuration }, 'frame01 +=0')\n\n            .fromTo([mask01_Ref.current], { x: -500 }, { x: 0, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=0')\n            .fromTo([mask02_Ref.current], { x: -500 }, { x: 0, ease: 'power3.out', duration: animDuration05 }, 'frame01 +=2')\n            .fromTo([bottle_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=4')\n            .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame01 +=4.25')\n\n            //#endregion ==================== FRAME 01 ====================\n\n\n            //#region ==================== FRAME 02 ====================\n\n            // .to([copy01_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n\n            // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 +=0')\n\n            //#endregion ==================== FRAME 02 ====================\n\n\n            //#region ==================== FRAME 03 ====================\n\n            // .to([LOGO_VLJref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02, onComplete: nextPos, onCompleteParams: [LOGO_VLJref.current, -72.5, 230, 0.558823529411765, 0] }, 'frame03 +=0.5')\n\n            // .fromTo([copy02_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame03 +=0.5')\n\n            //#endregion ==================== FRAME 03 ====================\n\n\n            //#region ==================== FRAME 04 ====================\n\n            // .set([copy01_Ref.current], { color: '#000000' }, 'frame04')\n\n            // .set([LOGO_VLJ_noir_w_Ref.current], { autoAlpha: 0 }, 'frame04')\n            // .set([LOGO_VLJ_noir_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n            // .set([LOGO_VLJ_jc_k_Ref.current], { autoAlpha: 1 }, 'frame04')\n\n            // .to([copy02_Ref.current], { autoAlpha: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n\n            // .fromTo([model_mask_Ref.current], { y: -1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n            // .fromTo([model_SVG_Ref.current], { y: 1200 }, { y: 0, ease: 'power3.out', duration: animDuration02 }, 'frame04 +=0.5')\n\n            // .fromTo([copy01_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.5')\n            // .fromTo([LOGO_VLJref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=0.75')\n            // .fromTo([cta_Ref.current], { autoAlpha: 0 }, { autoAlpha: 1, ease: 'power3.in', duration: animDuration01 }, 'frame04 +=1')\n\n            // // .staggerFromTo(copy01_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=1.5')\n            // // .staggerFromTo(copy02_Ref.current.children, staggerDuration, { autoAlpha: 0, rotationY: 90 }, { autoAlpha: 1, rotationY: 0 }, staggerDelay, 'frame04 +=4')\n\n            //#endregion ==================== FRAME 04 ====================\n        ;\n\n        //tl.duration(1.5);\n        console.log('');\n        console.log('tl timing = ' + tl.duration() + ' secs');\n\n    // }, []);\n    }, [tl]);\n    // }, [tl, addParticle]);\n    // }, [tl, addRandomParticle]);\n    // }, [tl, addRandomParticle, nextPos]);\n    // }, [tl, addPixi]);\n\n    //#endregion ==================== useEffect / useLayoutEffect ====================\n\n\n    return (\n        <div className='banner300x250 bcbg_02342' id='bcbg_02342ID'>\n            {/* <h1>BCBG_02342 300x250 Component</h1> */}\n  \n        {/* #region -------------------- SVG: Turbulence Filter - REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/  &  https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n            {/* -------------------- REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/ -------------------- */}\n            {/* -------------------- REF: https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n            {/* -------------------- REF: https://www.youtube.com/watch?v=XYdDiZa_O3k -------------------- */}\n\n            {/* <svg className='modelDiv' id='modelDivID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={model_Ref}> */}\n            <svg className='modelDiv' id='filterID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={filter_Ref}>\n\n                <filter id='turbulenceFilterID' x='0' y='0' width='100%' height='100%'>\n                    <feTurbulence id='turbulenceID' type='fractalNoise' numOctaves='1' seed='2' baseFrequency='0.002 0.008' result='turbulenceResult' ref={turbulence_Ref}></feTurbulence>\n                    <feDisplacementMap in='SourceGraphic' in2='turbulenceResult' scale='60'></feDisplacementMap>\n                </filter>\n\n                {/* <animate href='#turbulenceID' attributeName='baseFrequency' dur='10s' keyTimes='0; 0.5; 1' values='0.002 0.006; 0.004 0.008; 0.002 0.006' repeatCount='indefinite' /> */}\n                {/* <animate href='#turbulenceID' attributeName='baseFrequency' dur='10s' keyTimes='0; 1; 2' values='0.002 0.006; 0.004 0.008; 0.002 0.006' repeatCount='indefinite' /> */}\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: Turbulence Filter - REF: https://redstapler.co/realistic-water-effect-svg-turbulence-filter/  &  https://tympanus.net/codrops/2019/02/19/svg-filter-effects-creating-texture-with-feturbulence/ -------------------- */}\n\n\n            <img src={bg} className='bg' id='bgID' alt='bg' ref={bg_Ref} />\n\n            <div className='modelDiv' id='modelDivID' ref={model_Ref}>\n                <img src={model_lf} className='model_lf' id='model_lfID' alt='model_lf' ref={model_lf_Ref} />\n                <img src={model_rt} className='model_rt' id='model_rtID' alt='model_rt' ref={model_rt_Ref} />\n                <img src={model_ctr} className='model_ctr' id='model_ctrID' alt='model_ctr' ref={model_ctr_Ref} />\n            </div>\n\n            {/* <div className='particleContainer' id='particleContainerID' ref={particleContainer_Ref}></div> */}\n\n            <img src={bottle} className='bottle' id='bottleID' alt='bottle' ref={bottle_Ref} />\n\n\n        {/* #region -------------------- SVG: mask(s) -------------------- */}\n\n            <svg className='mask' id='maskID' version='1.1' baseProfile='full' x='0' y='0' width='300' height='250' space='preserve' ref={maskSVG_Ref}>\n\n                <defs>\n\n                    {/* <linearGradient id='gradientID' gradientUnits='userSpaceOnUse' x1='0' y1='250' x2='300' y2='250' gradientTransform='rotate(90)'> */}\n                    <linearGradient id='gradientID' spreadMethod='pad' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='600' y2='0'>\n\n                        <stop offset='0.5' style={{ stopColor: '#ffffff' }} />\n                        <stop offset='0.75' style={{ stopColor: '#000000' }} />\n\n                    </linearGradient>\n\n                    <mask id='maskID' ref={mask_Ref}>\n                        <rect className='maskClass' id='mask01ID' fill='url(#gradientID)' x='0' y='170' width='600' height='20' ref={mask01_Ref} />\n                        <rect className='maskClass' id='mask02ID' fill='url(#gradientID)' x='0' y='190' width='600' height='30' ref={mask02_Ref} />\n                    </mask>\n\n                </defs>\n            {/* \n                <g ref={mask_Ref}>\n                    <rect className='maskClass' id='mask01ID' fill='url(#gradientID)' x='0' y='170' width='600' height='20' ref={mask01_Ref} />\n                    <rect className='maskClass' id='mask02ID' fill='url(#gradientID)' x='0' y='190' width='600' height='30' ref={mask02_Ref} />\n                </g>\n            */}\n                <g mask='url(#maskID)' ref={mask_Ref}>\n                    <image href={logo_BCBG_MA} x='15' y='180' width='270' height='38' ref={logo_BCBG_MA_Ref} />\n                </g>\n\n            </svg>\n\n        {/* #endregion -------------------- SVG: mask(s) -------------------- */}\n\n\n            {/* <img src={logo_BCBG_MA} className='logo' id='logoID' alt='logo' ref={logo_BCBG_MA_Ref} /> */}\n \n            {/* <img src={tag} className='tag' id='tagID' alt='bottle' ref={tag_Ref} /> */}\n\n            <img src={cta} className='cta' id='ctaID' alt='cta' ref={cta_Ref} />\n\n            {/* <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={() => handleClick()}></div> */}\n            <div className='clickTag' id='clickTagID' ref={clickTag_Ref} onClick={handleClick}></div>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}