{"ast":null,"code":"var _jsxFileName = \"/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx\";\n//#region ==================== IMPORTS ====================\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\nimport { gsap } from 'gsap';\nimport '../stylesheets/Work.scss'; //#region -------------------- IMPORTS: GSAP BANNERS --------------------\n\nimport EAAR_18951 from '../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';\nimport BSPS_26897 from '../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';\nimport NMTG_26903 from '../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';\nimport NMMN_11155 from '../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155'; //#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n//#region -------------------- IMPORTS: DATA --------------------\n// import work from '../data/MyData';\n\nimport work from '../data/json/work_json/work_ea.json'; //#endregion -------------------- IMPORTS: DATA --------------------\n//#endregion ==================== IMPORTS ====================\n//#region ==================== CONSTANTS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\nconst getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; //#endregion ==================== CONSTANTS ====================\n//#region ==================== FUNCTION: workList() ====================\n\n\nfunction WorkList() {\n  //#region -------------------- AVAILABLE GSAP BANNERS --------------------\n  const banners = {\n    EAAR_18951: EAAR_18951,\n    BSPS_26897: BSPS_26897,\n    NMMN_11155: NMMN_11155,\n    NMTG_26903: NMTG_26903\n  }; //#endregion -------------------- AVAILABLE GSAP BANNERS --------------------\n  //#region -------------------- ASSETS Ref --------------------\n\n  const workItemRef = useRef(null);\n  const masonryImgRef = useRef(null);\n  const importContainerRef = useRef(null);\n  const importedContentRef = useRef(null); //#endregion -------------------- ASSETS Ref --------------------\n  //#region ==================== useState ====================\n\n  const [bannerShow, setBannerShow] = useState(); // const [bannerShow, setBannerShow] = useState(BSPS_26897);\n  // const [bannerShow, setBannerShow] = useState(NMMN_11155);\n  // const [bannerShow, setBannerShow] = useState(NMTG_26903);\n  // const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n  // const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n  // const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n  // const [bannerKey, setBannerKey] = useState();\n\n  let [windwoWidth, setWindwoWidth] = useState(getWidth());\n  console.log('useState: windwoWidth = ' + windwoWidth); //#endregion ==================== useState ====================\n  //#region ==================== useEffect ====================\n\n  useEffect(() => {\n    //#region -------------------- GSAP TIMELINE --------------------\n    const tl = gsap.timeline({\n      delay: 0\n    });\n    tl //#region ==================== INITIALIZE OBJECTS ====================\n    // -------------------- SET TRANSFORM ORIGiNS --------------------\n    // .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n    // .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n    .set(['.masonryImg'], {\n      transformOrigin: '50% 0',\n      immediateRender: true\n    }, 'frame00') // -------------------- FRAME01 --------------------\n    // .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n    // .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n    // .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n    // .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n    //#endregion ==================== INITIALIZE OBJECTS ====================\n    //#region ==================== FRAME 01 ====================\n    // .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n    // .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n    // .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n    //#endregion ==================== FRAME 01 ====================\n    //#region ==================== FRAME 02 ====================\n    // .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n    // .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n    //#endregion ==================== FRAME 02 ====================\n    //#region ==================== FRAME 03 ====================\n    // .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n    // #endregion ==================== FRAME 03 ====================\n    ; //#endregion -------------------- GSAP TIMELINE --------------------\n    //#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n    const moveBanner = () => {\n      // console.log('');\n      // console.log('------------------------- moveBanner -------------------------');\n      // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n      // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n      let bannerKey = document.getElementById('importContainerID').key;\n\n      if (!bannerKey) {\n        console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');\n      } else {\n        // console.log('bannerKey = ' + bannerKey);\n        // console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n        // console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n        let thisBannerX = document.getElementById(bannerKey).x; // let thisBannerY = document.getElementById(bannerKey).y;\n        //#region ------------------------- position compensation for elements above importContainer -------------------------\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n\n        let thisBannerY = document.getElementById(bannerKey).y - 250; //#endregion ------------------------- position compensation for elements above importContainer  -------------------------\n\n        let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n        let thisBannerH = document.getElementById(bannerKey).offsetHeight;\n        let thisBannerScale = document.getElementById(bannerKey).offsetWidth / 300; // console.log('');\n        // console.log('thisBannerX = ' + thisBannerX);\n        // console.log('thisBannerY = ' + thisBannerY);\n        // console.log('thisBannerW = ' + thisBannerW);\n        // console.log('thisBannerH = ' + thisBannerH);\n        // console.log('thisBannerScale = ' + thisBannerScale);\n\n        gsap.set([importContainerRef.current, importedContentRef.current], {\n          transformOrigin: '50% 0',\n          immediateRender: true\n        }); // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n\n        gsap.set([importContainerRef.current], {\n          x: thisBannerX,\n          y: thisBannerY,\n          width: thisBannerW,\n          height: thisBannerH\n        });\n        gsap.set([importedContentRef.current], {\n          scale: thisBannerScale,\n          zIndex: -100\n        });\n      }\n    }; //#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n    //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n    let timeoutId = null;\n\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId); // change width from the state object after 150 milliseconds\n\n      timeoutId = setTimeout(() => setWindwoWidth(getWidth()), 150); // moveBanner: RELOCATE THE LOADED GSAP BANNER\n\n      moveBanner();\n    }; // set resize listener\n\n\n    window.addEventListener('resize', resizeListener); //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n    // clean up function\n\n    return () => {\n      // // RELOCATE THE LOADED GSAP BANNER\n      // moveBanner();\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []); // }, [animDuration02, animDuration04, animDuration05]);\n  //#endregion ==================== useEffect ====================\n  //#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n  function handleClick(thisWorkImage) {\n    console.log('');\n    console.log('------------------------- handleClick(thisWorkImage) -------------------------'); //#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n    // console.log('handleClick: windwoWidth = ' + windwoWidth);\n\n    console.log(''); // console.log('thisWorkImage.link = ' + thisWorkImage.link);\n\n    console.log('thisWorkImage.link2 = ' + thisWorkImage.link2); // console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n    // console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n    // console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n\n    console.log('');\n    console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n    console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n    console.log('');\n    console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n    console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n    console.log(''); // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n    // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n\n    console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className); // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n    //#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n    //#region ------------------------- Tryin' out sh*t... -------------------------\n\n    if (banners[thisWorkImage.link2]) {\n      const thisBanner = React.createElement(banners[thisWorkImage.link2]);\n      setBannerShow(thisBanner); // setBannerKey(thisBanner);\n\n      document.getElementById('importContainerID').key = thisWorkImage.link2; // console.log('');\n      // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n      // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n    } else {\n      setBannerShow(thisWorkImage.link2 + ' THIS BANNER COMING SOON!'); // setBannerKey(thisWorkImage.link2);\n    }\n\n    let thisBannerX = document.getElementById(thisWorkImage.link2).x; // let thisBannerY = document.getElementById(thisWorkImage.link2).y;\n    //#region ------------------------- position compensation for elements above importContainer -------------------------\n    // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n\n    let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250; //#endregion ------------------------- position compensation for elements above importContainer  -------------------------\n\n    let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n    let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\n    let thisBannerScale = document.getElementById(thisWorkImage.link2).offsetWidth / 300; // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n\n    gsap.set([importContainerRef.current, importedContentRef.current], {\n      transformOrigin: '0 0',\n      immediateRender: true\n    });\n    gsap.set([importedContentRef.current], {\n      scale: thisBannerScale\n    }); // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n\n    gsap.set([importContainerRef.current], {\n      x: thisBannerX,\n      y: thisBannerY,\n      width: thisBannerW,\n      height: thisBannerH\n    }); // gsap.set([importContainerRef.current], { scale: thisBannerScale });\n    // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n    //#endregion ------------------------- Tryin' out sh*t... -------------------------\n  } //#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n  //#region ==================== RETURN (className='workList') ====================\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"importContainer\",\n    id: \"importContainerID\",\n    ref: importContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"importedContent\",\n    ref: importedContentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, bannerShow)), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, \"|*|*|*|*|*| \\xA0\\xA0\\xA0 Banners 000 \\xA0\\xA0\\xA0 |*|*|*|*|*|\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      360: 1,\n      640: 2,\n      768: 2,\n      940: 3,\n      1640: 4,\n      1920: 5,\n      3000: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    gutter: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, work.filter(isBanner => isBanner.format === 'banner').map(workImage => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workItem\",\n    key: workImage.album_id + workImage.image_index,\n    ref: workItemRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // key={workImage.album_id + workImage.image_index}\n    className: \"masonryImg\" // id={workImage.album_id + workImage.image_index + '_imgID'}\n    ,\n    id: workImage.link2,\n    src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n    alt: 'album_id: ' + workImage.album_id + workImage.image_index,\n    onClick: () => handleClick(workImage) // onClick={() => setBannerShow(workImage.link2)}\n    // onClick={() => {\n    //     handleClick(workImage);\n    //     setBannerShow(workImage.link2);\n    // }}\n    ,\n    ref: masonryImgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    title: \"masonryInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 29\n    }\n  }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    format: \"MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 33\n    }\n  }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 84\n    }\n  })))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, \"Web / Video\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      1024: 1,\n      1366: 2,\n      1920: 3,\n      3840: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Masonry, {\n    gutter: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }, work.filter(isBanner => isBanner.format !== 'banner').map(workImage => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"workItem\",\n    key: 'web' + workImage.album_id + workImage.image_index,\n    ref: workItemRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // key={'WV' + workImage.album_id + workImage.image_index}\n    className: \"masonryImg\" // id={workImage.album_id + workImage.image_index + '_imgID'}\n    ,\n    id: workImage.link2,\n    src: remoteLoc + workImage.album_id + '/sl/' + workImage.src,\n    alt: 'album_id: ' + workImage.album_id + workImage.image_index,\n    onClick: () => handleClick(workImage),\n    ref: masonryImgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    title: \"masonryInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }, workImage.caption, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    format: \"MMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 33\n    }\n  }, workImage.date), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 84\n    }\n  }))))))); //#endregion ==================== RETURN (className='workList') ====================\n} //#endregion ==================== FUNCTION: workList() ====================\n\n\nexport const Work000 = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WorkList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/shigimcp_1215/Sites/shigimcp2020-react/src/work/Work_000.jsx"],"names":["React","useRef","useEffect","useState","Masonry","ResponsiveMasonry","Moment","gsap","EAAR_18951","BSPS_26897","NMTG_26903","NMMN_11155","work","remoteLoc","getWidth","window","innerWidth","document","documentElement","clientWidth","body","WorkList","banners","workItemRef","masonryImgRef","importContainerRef","importedContentRef","bannerShow","setBannerShow","windwoWidth","setWindwoWidth","console","log","tl","timeline","delay","set","transformOrigin","immediateRender","moveBanner","bannerKey","getElementById","key","thisBannerX","x","thisBannerY","y","thisBannerW","offsetWidth","thisBannerH","offsetHeight","thisBannerScale","current","width","height","scale","zIndex","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","handleClick","thisWorkImage","link2","className","thisBanner","createElement","filter","isBanner","format","map","workImage","album_id","image_index","src","caption","date","Work000"],"mappings":"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","sourcesContent":["//#region ==================== IMPORTS ====================\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport Moment from 'react-moment';\n\nimport { gsap } from 'gsap';\n\nimport '../stylesheets/Work.scss';\n\n\n//#region -------------------- IMPORTS: GSAP BANNERS --------------------\nimport EAAR_18951 from '../images/ea/banners/CR_18951_ALWAYS_RED_DIGITAL_PLAN_1H15_300x600/EAAR_18951';\nimport BSPS_26897 from '../images/ea/banners/26897_BS_PRIVATE_SHOW_GWP_PR_Walgreens_300x250/BSPS_26897';\nimport NMTG_26903 from '../images/ea/banners/26903_NM_TRINI_GIRL_GWP_PR_Walgreens_300x250/NMTG_26903';\nimport NMMN_11155 from '../images/ea/banners/CR_11155_MINAJESTY_2014_US_DIGITAL_300x600/NMMN_11155';\n\n//#endregion -------------------- IMPORTS: GSAP BANNERS --------------------\n\n\n//#region -------------------- IMPORTS: DATA --------------------\n\n// import work from '../data/MyData';\nimport work from '../data/json/work_json/work_ea.json';\n\n//#endregion -------------------- IMPORTS: DATA --------------------\n\n//#endregion ==================== IMPORTS ====================\n\n\n\n//#region ==================== CONSTANTS ====================\n\nconst remoteLoc = 'https://www.shigimcp.com/Xstage/shigimcp_2020_react/img/';\n\nconst getWidth = () => window.innerWidth\n    || document.documentElement.clientWidth\n    || document.body.clientWidth;\n\n//#endregion ==================== CONSTANTS ====================\n\n\n\n//#region ==================== FUNCTION: workList() ====================\n\nfunction WorkList() {\n\n    //#region -------------------- AVAILABLE GSAP BANNERS --------------------\n\n    const banners = {\n        EAAR_18951: EAAR_18951,\n        BSPS_26897: BSPS_26897,\n        NMMN_11155: NMMN_11155,\n        NMTG_26903: NMTG_26903\n    };\n\n    //#endregion -------------------- AVAILABLE GSAP BANNERS --------------------\n\n\n\n    //#region -------------------- ASSETS Ref --------------------\n\n    const workItemRef = useRef(null);\n    const masonryImgRef = useRef(null);\n\n    const importContainerRef = useRef(null);\n    const importedContentRef = useRef(null);\n\n    //#endregion -------------------- ASSETS Ref --------------------\n\n\n\n    //#region ==================== useState ====================\n\n    const [bannerShow, setBannerShow] = useState();\n\n    // const [bannerShow, setBannerShow] = useState(BSPS_26897);\n    // const [bannerShow, setBannerShow] = useState(NMMN_11155);\n    // const [bannerShow, setBannerShow] = useState(NMTG_26903);\n\n    // const [bannerShow, setBannerShow] = useState(<BSPS_26897 />);\n    // const [bannerShow, setBannerShow] = useState(<NMMN_11155 />);\n    // const [bannerShow, setBannerShow] = useState(<NMTG_26903 />);\n    \n    // const [bannerKey, setBannerKey] = useState();\n\n\n    let [windwoWidth, setWindwoWidth] = useState(getWidth());\n    console.log('useState: windwoWidth = ' + windwoWidth);\n\n    //#endregion ==================== useState ====================\n\n\n\n    //#region ==================== useEffect ====================\n\n    useEffect(() => {\n\n        //#region -------------------- GSAP TIMELINE --------------------\n\n        const tl = gsap.timeline({ delay: 0 });\n\n        tl\n\n            //#region ==================== INITIALIZE OBJECTS ====================\n\n            // -------------------- SET TRANSFORM ORIGiNS --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current, nmmn_11155Ref.current], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            // .set(['.masonryBanner'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n            .set(['.masonryImg'], { transformOrigin: '50% 0', immediateRender: true }, 'frame00')\n\n            // -------------------- FRAME01 --------------------\n\n            // .set([bsps_26897Ref.current, nmtg_26903Ref.current], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n            // .set([nmtg_26903Ref.current], { scale: 1.5 }, 'frame00')\n            // .set([nmmn_11155Ref.current], { rotation: 30 }, 'frame00')\n\n            // .set(['.masonryBanner'], { autoAlpha: 0.5, scale: 1.25, rotation: 30 }, 'frame00')\n\n            //#endregion ==================== INITIALIZE OBJECTS ====================\n\n\n            //#region ==================== FRAME 01 ====================\n\n            // .fromTo([bsps_26897Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0')\n            // .fromTo([nmtg_26903Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'power3.out', duration: animDuration04 }, 'frame01 +=0.5')\n            // .fromTo([nmmn_11155Ref.current], { scale: 0.75, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, ease: 'back.inOut(2)', duration: animDuration05 }, 'frame01 +=0')\n\n            //#endregion ==================== FRAME 01 ====================\n\n\n            //#region ==================== FRAME 02 ====================\n\n            // .to([bsps_26897Ref.current], { y: 20, scale: 0.8, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n            // .fromTo([nmtg_26903Ref.current], { x: 70, y: 5, autoAlpha: 0 }, { y: -15, autoAlpha: 1, ease: 'power3.out', duration: animDuration02 }, 'frame02 -=1.5')\n\n            //#endregion ==================== FRAME 02 ====================\n\n\n            //#region ==================== FRAME 03 ====================\n\n            // .to([bsps_26897Ref.current], { x: 95, y: 35, scale: 0.7, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .to([nmtg_26903Ref.current], { x: 126, y: -7, scale: 0.95, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n            // .fromTo([nmmn_11155Ref.current], { x: -194, y: 6, scale: 1.05882352941176, ease: 'power2.out' }, { x: 0, y: 0, scale: 1, ease: 'power2.out', duration: animDuration02 }, 'frame03 +=0.75')\n\n            // #endregion ==================== FRAME 03 ====================\n        ;\n\n        //#endregion -------------------- GSAP TIMELINE --------------------\n\n\n        //#region -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n        const moveBanner = () => {\n\n            // console.log('');\n            // console.log('------------------------- moveBanner -------------------------');\n\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n            let bannerKey = document.getElementById('importContainerID').key;\n\n\n            if (!bannerKey) {\n\n                console.log('OOPS! No banner has been clicked yet OR you are clicking in the WEB/VIDEO section.');\n\n            } else {\n\n                // console.log('bannerKey = ' + bannerKey);\n                // console.log('document.getElementById(bannerKey).className = ' + document.getElementById(bannerKey).className);\n                // console.log('document.getElementById(bannerKey).id = ' + document.getElementById(bannerKey).id);\n\n\n                let thisBannerX = document.getElementById(bannerKey).x;\n                // let thisBannerY = document.getElementById(bannerKey).y;\n\n                //#region ------------------------- position compensation for elements above importContainer -------------------------\n\n                // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n                let thisBannerY = document.getElementById(bannerKey).y - 250;\n\n                //#endregion ------------------------- position compensation for elements above importContainer  -------------------------\n\n                let thisBannerW = document.getElementById(bannerKey).offsetWidth;\n                let thisBannerH = document.getElementById(bannerKey).offsetHeight;\n\n                let thisBannerScale = document.getElementById(bannerKey).offsetWidth / 300;\n\n                // console.log('');\n                // console.log('thisBannerX = ' + thisBannerX);\n                // console.log('thisBannerY = ' + thisBannerY);\n                // console.log('thisBannerW = ' + thisBannerW);\n                // console.log('thisBannerH = ' + thisBannerH);\n                // console.log('thisBannerScale = ' + thisBannerScale);\n\n                gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n                // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n                gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n                gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n            }\n        }\n\n        //#endregion -------------------- moveBanner: RELOCATE THE LOADED GSAP BANNER --------------------\n\n\n        //#region -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n        let timeoutId = null;\n\n        const resizeListener = () => {\n\n            // prevent execution of previous setTimeout\n            clearTimeout(timeoutId);\n\n            // change width from the state object after 150 milliseconds\n            timeoutId = setTimeout(() => setWindwoWidth(getWidth()), 150);\n\n            // moveBanner: RELOCATE THE LOADED GSAP BANNER\n            moveBanner();\n        };\n\n        // set resize listener\n        window.addEventListener('resize', resizeListener);\n\n        //#endregion -------------------- WINDOW RESIZE - REF: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c --------------------\n\n\n        // clean up function\n        return () => {\n            // // RELOCATE THE LOADED GSAP BANNER\n            // moveBanner();\n\n            // remove resize listener\n            window.removeEventListener('resize', resizeListener);\n        }\n\n    }, []);\n    // }, [animDuration02, animDuration04, animDuration05]);\n\n    //#endregion ==================== useEffect ====================\n\n\n\n    //#region ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n    function handleClick(thisWorkImage) {\n\n        console.log('');\n        console.log('------------------------- handleClick(thisWorkImage) -------------------------');\n\n\n        //#region ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n        // console.log('handleClick: windwoWidth = ' + windwoWidth);\n\n        console.log('');\n        // console.log('thisWorkImage.link = ' + thisWorkImage.link);\n        console.log('thisWorkImage.link2 = ' + thisWorkImage.link2);\n        // console.log('thisWorkImage.link3 = ' + thisWorkImage.link3);\n        // console.log('thisWorkImage.link4 = ' + thisWorkImage.link4);\n\n        // console.log('document.getElementById(thisWorkImage.link2).className = ' + document.getElementById(thisWorkImage.link2).className);\n\n        console.log('');\n        console.log('document.getElementById(thisWorkImage.link2).x = ' + document.getElementById(thisWorkImage.link2).x);\n        console.log('document.getElementById(thisWorkImage.link2).y = ' + document.getElementById(thisWorkImage.link2).y);\n\n        console.log('');\n        console.log('document.getElementById(thisWorkImage.link2).offsetWidth = ' + document.getElementById(thisWorkImage.link2).offsetWidth);\n        console.log('document.getElementById(thisWorkImage.link2).offsetHeight = ' + document.getElementById(thisWorkImage.link2).offsetHeight);\n\n        console.log('');\n        // console.log('document.getElementById(importContainerID).offsetWidth = ' + document.getElementById('importContainerID').offsetWidth);\n        // console.log('document.getElementById(importContainerID).offsetHeight = ' + document.getElementById('importContainerID').offsetHeight);\n\n        console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n        // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        //#endregion ------------------------- Findin' out sh*t... (console.log messagaes) -------------------------\n\n\n        //#region ------------------------- Tryin' out sh*t... -------------------------\n\n        if (banners[thisWorkImage.link2]) {\n\n            const thisBanner = React.createElement(banners[thisWorkImage.link2]);\n\n            setBannerShow(thisBanner);\n\n            // setBannerKey(thisBanner);\n            document.getElementById('importContainerID').key = thisWorkImage.link2;\n\n            // console.log('');\n            // console.log('document.getElementById(importContainerID).className = ' + document.getElementById('importContainerID').className);\n            // console.log('document.getElementById(importContainerID).key = ' + document.getElementById('importContainerID').key);\n\n        } else {\n            setBannerShow(thisWorkImage.link2 + ' THIS BANNER COMING SOON!');\n            // setBannerKey(thisWorkImage.link2);\n        }\n\n\n        let thisBannerX = document.getElementById(thisWorkImage.link2).x;\n        // let thisBannerY = document.getElementById(thisWorkImage.link2).y;\n\n        //#region ------------------------- position compensation for elements above importContainer -------------------------\n\n        // let thisBannerX = document.getElementById(thisWorkImage.link2).x + 1;\n        let thisBannerY = document.getElementById(thisWorkImage.link2).y - 250;\n\n        //#endregion ------------------------- position compensation for elements above importContainer  -------------------------\n\n        let thisBannerW = document.getElementById(thisWorkImage.link2).offsetWidth;\n        let thisBannerH = document.getElementById(thisWorkImage.link2).offsetHeight;\n\n        let thisBannerScale = document.getElementById(thisWorkImage.link2).offsetWidth / 300;\n\n\n        // gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '50% 0', immediateRender: true });\n        gsap.set([importContainerRef.current, importedContentRef.current], { transformOrigin: '0 0', immediateRender: true });\n        gsap.set([importedContentRef.current], { scale: thisBannerScale });\n        // gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH, scale: thisBannerScale });\n        gsap.set([importContainerRef.current], { x: thisBannerX, y: thisBannerY, width: thisBannerW, height: thisBannerH });\n\n        // gsap.set([importContainerRef.current], { scale: thisBannerScale });\n        // gsap.set([importedContentRef.current], { scale: thisBannerScale, zIndex: -100 });\n\n        //#endregion ------------------------- Tryin' out sh*t... -------------------------\n\n    }\n\n    //#endregion ==================== FUNCTION: handleClick(thisWorkImage) REF: https://www.digitalocean.com/community/tutorials/react-loading-components-dynamically-hooks - switch/case ====================\n\n\n\n    //#region ==================== RETURN (className='workList') ====================\n\n    return (\n        <div className='workList'>\n\n            {/* width = {width}; */}\n\n            <div className='importContainer' id='importContainerID' ref={importContainerRef}>\n            {/* <div className='importContainer' id='importContainerID' key={bannerShow} ref={importContainerRef}> */}\n            {/* <div className='importContainer' id='importContainerID' key={bannerKey} ref={importContainerRef}> */}\n                <div className='importedContent' ref={importedContentRef}>\n                    {bannerShow}\n                </div>\n            </div>\n\n\n        {/* #region ------------------------- Banners ------------------------- */}\n\n            <section>\n                <hr />\n                <h2>|*|*|*|*|*| &nbsp;&nbsp;&nbsp; Banners 000 &nbsp;&nbsp;&nbsp; |*|*|*|*|*|</h2>\n                {/* \n                <p className='note'>\n                    I want to eventually make these images clickable to trigger GSAP banners like the ones above that were [re]built in React (because I couldn't get react-adobe-animate or html-loader to work).<br />\n                    Ideally, the GSAP banners will play in place like they do on this page: <a href='https://www.shigimcp.com/hilites.html' target='_new'>https://www.shigimcp.com/hilites.html</a>.\n                </p>\n                */}\n                <hr />\n            </section>\n\n            <ResponsiveMasonry columnsCountBreakPoints={{ 360: 1, 640: 2, 768: 2, 940: 3, 1640: 4, 1920: 5, 3000: 6 }}>\n                <Masonry gutter='50px'>\n\n                    {work.filter(isBanner => isBanner.format === 'banner').map((workImage) => (\n\n                        <div className='workItem' key={workImage.album_id + workImage.image_index} ref={workItemRef}>\n\n                            <img\n                                // key={workImage.album_id + workImage.image_index}\n                                className='masonryImg'\n                                // id={workImage.album_id + workImage.image_index + '_imgID'}\n                                id={workImage.link2}\n                                src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                onClick={() => handleClick(workImage)}\n                                // onClick={() => setBannerShow(workImage.link2)}\n                                // onClick={() => {\n                                //     handleClick(workImage);\n                                //     setBannerShow(workImage.link2);\n                                // }}\n\n                                ref={masonryImgRef}\n                            />\n\n                            <p title='masonryInfo'>\n                                {workImage.caption}<br />\n                                <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                            {/* \n                                <br />\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                link3 = {workImage.link3}<br />\n                                link4 = {workImage.link4}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                            */}\n\n                            </p>\n\n                        </div>\n                    ))}\n\n                </Masonry>\n            </ResponsiveMasonry>\n\n\n            <br /><br /><br /><br /><br />\n\n        {/* #endregion ------------------------- Banners ------------------------- */}\n\n\n        {/* #region ------------------------- Web / Video ------------------------- */}\n\n            <section>\n                <hr />\n                <h2>Web / Video</h2>\n                <hr />\n            </section>\n\n            {/* <ResponsiveMasonry columnsCountBreakPoints={{ 960: 1, 1366: 2, 2040: 3 }}> */}\n            <ResponsiveMasonry columnsCountBreakPoints={{ 1024: 1, 1366: 2, 1920: 3, 3840: 4 }}>\n                <Masonry gutter='50px'>\n\n                    {work.filter(isBanner => isBanner.format !== 'banner').map((workImage) => (\n\n                        < div className = 'workItem' key = { 'web' + workImage.album_id + workImage.image_index } ref = { workItemRef } >\n\n                            <img\n                                // key={'WV' + workImage.album_id + workImage.image_index}\n                                className='masonryImg'\n                                // id={workImage.album_id + workImage.image_index + '_imgID'}\n                                id={workImage.link2}\n                                src={remoteLoc + workImage.album_id + '/sl/' + workImage.src}\n                                alt={'album_id: ' + workImage.album_id + workImage.image_index}\n\n                                onClick={() => handleClick(workImage)}\n\n                                ref={masonryImgRef}\n                            />\n\n                            <p title='masonryInfo'>\n                                {workImage.caption}<br />\n                                <Moment format=\"MMM YYYY\">{workImage.date}</Moment><br />\n\n                            {/* \n                                <br />\n\n                                album_index = {workImage.album_index}<br />\n                                album_id = {workImage.album_id}<br />\n                                image_index = {workImage.image_index}<br />\n                                src = {workImage.src}<br />\n                                caption = {workImage.caption}<br />\n                                date = {workImage.date}<br />\n                                format = {workImage.format}<br />\n                                format_src = {workImage.format_src}<br />\n                                link = {workImage.link}<br />\n                                link2 = {workImage.link2}<br />\n                                link3 = {workImage.link3}<br />\n                                link4 = {workImage.link4}<br />\n                                cta = {workImage.cta}<br />\n                                alert = {workImage.alert}<br />\n                                mwidth = {workImage.mwidth}<br />\n                                mheight = {workImage.mheight}\n                            */}\n\n                            </p>\n\n                        </div>\n                    ))}\n\n                </Masonry>\n            </ResponsiveMasonry>\n\n        {/* #endregion ------------------------- Web / Video ------------------------- */}\n\n        </div>\n    )\n\n    //#endregion ==================== RETURN (className='workList') ====================\n\n}\n\n//#endregion ==================== FUNCTION: workList() ====================\n\n\n\n\nexport const Work000 = () => {\n\n    return (\n        <>\n            <WorkList />\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}